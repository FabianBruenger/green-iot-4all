{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3","program":"/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","deunicode","/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=0d8c63ff79702374","-C","extra-filename=-0d8c63ff79702374","--out-dir","/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","-L","dependency=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libdeunicode-0d8c63ff79702374.rmeta"},"prelude":{"crate_id":{"name":"deunicode","disambiguator":[8045577668977892973,0]},"crate_root":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src","external_crates":[{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}}],"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":0,"byte_end":7619,"line_start":1,"line_end":212,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":0,"byte_end":7619,"line_start":1,"line_end":212,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":33}],"decl_id":null,"docs":" The `deunicode` library transliterates Unicode strings such as \"Æneid\" into pure\n ASCII ones such as \"AEneid.\"","sig":null,"attributes":[{"value":"/ The `deunicode` library transliterates Unicode strings such as \"Æneid\" into pure","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":0,"byte_end":85,"line_start":1,"line_end":1,"column_start":1,"column_end":85}},{"value":"/ ASCII ones such as \"AEneid.\"","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":86,"byte_end":118,"line_start":2,"line_end":2,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":119,"byte_end":122,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ It started as a Rust port of [`Text::Unidecode`](http://search.cpan.org/~sburke/Text-Unidecode-1.30/lib/Text/Unidecode.pm) Perl module, and was extended to support emoji.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":123,"byte_end":297,"line_start":4,"line_end":4,"column_start":1,"column_end":175}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":298,"byte_end":301,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [README](https://github.com/kornelski/deunicode/blob/master/README.md) for more info.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":302,"byte_end":395,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":396,"byte_end":399,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Examples","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":400,"byte_end":412,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/ --------","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":413,"byte_end":425,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":426,"byte_end":437,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ extern crate deunicode;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":438,"byte_end":465,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/ use deunicode::deunicode;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":466,"byte_end":495,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":496,"byte_end":499,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(deunicode(\"Æneid\"), \"AEneid\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":500,"byte_end":546,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(deunicode(\"étude\"), \"etude\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":547,"byte_end":592,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(deunicode(\"北亰\"), \"Bei Jing\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":593,"byte_end":641,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(deunicode(\"ᔕᓇᓇ\"), \"shanana\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":642,"byte_end":692,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(deunicode(\"げんまい茶\"), \"genmaiCha\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":693,"byte_end":751,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(deunicode(\"🦄☣\"), \"unicorn face biohazard\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":752,"byte_end":815,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":816,"byte_end":823,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2642,"byte_end":2651,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"deunicode","qualname":"::deunicode","value":"pub fn deunicode(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" This function takes any Unicode string and returns an ASCII transliteration\n of that string.","sig":null,"attributes":[{"value":"/ This function takes any Unicode string and returns an ASCII transliteration","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1209,"byte_end":1288,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ of that string.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1289,"byte_end":1308,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1309,"byte_end":1312,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Guarantees and Warnings","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1313,"byte_end":1340,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ -----------------------","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1341,"byte_end":1368,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ Here are some guarantees you have when calling `deunicode()`:","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1369,"byte_end":1434,"line_start":44,"line_end":44,"column_start":1,"column_end":66}},{"value":"/   * The `String` returned will be valid ASCII; the decimal representation of","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1435,"byte_end":1515,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/     every `char` in the string will be between 0 and 127, inclusive.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1516,"byte_end":1588,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/   * Every ASCII character (0x0000 - 0x007F) is mapped to itself.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1589,"byte_end":1657,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/   * All Unicode characters will translate to a string containing newlines","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1658,"byte_end":1735,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/     (`\"\\n\"`) or ASCII characters in the range 0x0020 - 0x007E. So for example,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1736,"byte_end":1818,"line_start":49,"line_end":49,"column_start":1,"column_end":83}},{"value":"/     no Unicode character will translate to `\\u{01}`. The exception is if the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1819,"byte_end":1899,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/     ASCII character itself is passed in, in which case it will be mapped to","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1900,"byte_end":1979,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/     itself. (So `'\\u{01}'` will be mapped to `\"\\u{01}\"`.)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":1980,"byte_end":2041,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2042,"byte_end":2045,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ There are, however, some things you should keep in mind:","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2046,"byte_end":2106,"line_start":54,"line_end":54,"column_start":1,"column_end":61}},{"value":"/   * As stated, some transliterations do produce `\\n` characters.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2107,"byte_end":2175,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/   * Some Unicode characters transliterate to an empty string, either on purpose","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2176,"byte_end":2259,"line_start":56,"line_end":56,"column_start":1,"column_end":84}},{"value":"/     or because `deunicode` does not know about the character.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2260,"byte_end":2325,"line_start":57,"line_end":57,"column_start":1,"column_end":66}},{"value":"/   * Some Unicode characters are unknown and transliterate to `\"[?]\"`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2326,"byte_end":2399,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/   * Many Unicode characters transliterate to multi-character strings. For","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2400,"byte_end":2477,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/     example, 北 is transliterated as \"Bei \".","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2478,"byte_end":2527,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/   * Han characters are mapped to Mandarin, and will be mostly illegible to Japanese readers.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2528,"byte_end":2624,"line_start":61,"line_end":61,"column_start":1,"column_end":97}},{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2625,"byte_end":2634,"line_start":62,"line_end":62,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2924,"byte_end":2943,"line_start":71,"line_end":71,"column_start":8,"column_end":27},"name":"deunicode_with_tofu","qualname":"::deunicode_with_tofu","value":"pub fn deunicode_with_tofu(&str, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Same as `deunicode`, but unknown characters can be replaced with a custom string.","sig":null,"attributes":[{"value":"/ Same as `deunicode`, but unknown characters can be replaced with a custom string.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2710,"byte_end":2795,"line_start":67,"line_end":67,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2796,"byte_end":2799,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ \"Tofu\" is a nickname for a replacement character, which in Unicode fonts usually","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2800,"byte_end":2884,"line_start":69,"line_end":69,"column_start":1,"column_end":85}},{"value":"/ looks like a block of tofu.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":2885,"byte_end":2916,"line_start":70,"line_end":70,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3630,"byte_end":3644,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"deunicode_char","qualname":"::deunicode_char","value":"pub fn deunicode_char(char) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" This function takes a single Unicode character and returns an ASCII\n transliteration.","sig":null,"attributes":[{"value":"/ This function takes a single Unicode character and returns an ASCII","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3215,"byte_end":3286,"line_start":78,"line_end":78,"column_start":1,"column_end":72}},{"value":"/ transliteration.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3287,"byte_end":3307,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3308,"byte_end":3311,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The warnings and guarantees of `deunicode()` apply to this function as well.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3312,"byte_end":3392,"line_start":81,"line_end":81,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3393,"byte_end":3396,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Examples","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3397,"byte_end":3409,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/ --------","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3410,"byte_end":3422,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3423,"byte_end":3434,"line_start":85,"line_end":85,"column_start":1,"column_end":12}},{"value":"/ # extern crate deunicode;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3435,"byte_end":3464,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/ # use deunicode::deunicode_char;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3465,"byte_end":3501,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(deunicode_char('Æ'), Some(\"AE\"));","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3502,"byte_end":3551,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(deunicode_char('北'), Some(\"Bei \"));","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3552,"byte_end":3604,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3605,"byte_end":3612,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":3613,"byte_end":3622,"line_start":91,"line_end":91,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4578,"byte_end":4588,"line_start":116,"line_end":116,"column_start":11,"column_end":21},"name":"AsciiChars","qualname":"::AsciiChars","value":"AsciiChars","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" Convenience functions for deunicode. `use deunicode::AsciiChars`\n","sig":null,"attributes":[{"value":"/ Convenience functions for deunicode. `use deunicode::AsciiChars`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4499,"byte_end":4567,"line_start":115,"line_end":115,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4816,"byte_end":4827,"line_start":121,"line_end":121,"column_start":8,"column_end":19},"name":"ascii_chars","qualname":"::AsciiChars::ascii_chars","value":"pub fn ascii_chars(&Self) -> AsciiCharsIter","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Iterate over Unicode characters converted to ASCII sequences.","sig":null,"attributes":[{"value":"/ Iterate over Unicode characters converted to ASCII sequences.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4595,"byte_end":4660,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4665,"byte_end":4668,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Items of this iterator may be `None` for some characters.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4673,"byte_end":4734,"line_start":119,"line_end":119,"column_start":5,"column_end":66}},{"value":"/ Use `.map(|ch| ch.unwrap_or(\"?\"))` to replace invalid characters.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4739,"byte_end":4808,"line_start":120,"line_end":120,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5058,"byte_end":5072,"line_start":126,"line_end":126,"column_start":8,"column_end":22},"name":"to_ascii_lossy","qualname":"::AsciiChars::to_ascii_lossy","value":"pub fn to_ascii_lossy(&Self) -> String","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Convert any Unicode string to ASCII-only string.","sig":null,"attributes":[{"value":"/ Convert any Unicode string to ASCII-only string.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4858,"byte_end":4910,"line_start":122,"line_end":122,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4915,"byte_end":4918,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Characters are converted to closest ASCII equivalent.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4923,"byte_end":4980,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"/ Characters that can't be converted are replaced with `\"[?]\"`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":4985,"byte_end":5050,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5610,"byte_end":5624,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"AsciiCharsIter","qualname":"::AsciiCharsIter","value":"AsciiCharsIter {  }","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" Iterator that translates Unicode characters to ASCII strings.pub","sig":null,"attributes":[{"value":"/ Iterator that translates Unicode characters to ASCII strings.pub","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5469,"byte_end":5537,"line_start":147,"line_end":147,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5538,"byte_end":5541,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ See `AsciiChars` trait's `str.ascii_chars()` method.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5542,"byte_end":5598,"line_start":149,"line_end":149,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5756,"byte_end":5759,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"new","qualname":"<AsciiCharsIter>::new","value":"pub fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5735,"byte_end":5744,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5114,"byte_end":5120,"line_start":129,"line_end":129,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5710,"byte_end":5724,"line_start":155,"line_end":155,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5980,"byte_end":5994,"line_start":166,"line_end":166,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":6025,"byte_end":6039,"line_start":168,"line_end":168,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5114,"byte_end":5120,"line_start":129,"line_end":129,"column_start":21,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":15}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5710,"byte_end":5724,"line_start":155,"line_end":155,"column_start":10,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":5980,"byte_end":5994,"line_start":166,"line_end":166,"column_start":28,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":7875}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","byte_start":6025,"byte_end":6039,"line_start":168,"line_end":168,"column_start":23,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":7607}}]}