{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1","program":"/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","actix_rt","--edition=2018","/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=f2e144381a16730d","-C","extra-filename=-f2e144381a16730d","--out-dir","/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","-L","dependency=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","--extern","actix_macros=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libactix_macros-bf7f3f1da09e017a.dylib","--extern","actix_threadpool=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libactix_threadpool-6896f70e24e6547f.rmeta","--extern","copyless=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libcopyless-6c98c2f52aa29542.rmeta","--extern","futures_channel=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libfutures_channel-a2bcb9b475ba25e5.rmeta","--extern","futures_util=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libfutures_util-0f1b917f7b5e64e1.rmeta","--extern","smallvec=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libsmallvec-fcb26f85805a2fa0.rmeta","--extern","tokio=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libtokio-23d7438c22a54568.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libactix_rt-f2e144381a16730d.rmeta"},"prelude":{"crate_id":{"name":"actix_rt","disambiguator":[4033969593871517879,0]},"crate_root":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src","external_crates":[{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":18,"id":{"name":"actix_macros","disambiguator":[5289819398511998530,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":19,"id":{"name":"futures_channel","disambiguator":[4440096321111890392,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":20,"id":{"name":"futures_core","disambiguator":[10246500710873416559,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":21,"id":{"name":"futures_sink","disambiguator":[11987920876039123396,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":22,"id":{"name":"futures_util","disambiguator":[5075614331156022206,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":23,"id":{"name":"pin_utils","disambiguator":[3886655782345268746,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":24,"id":{"name":"futures_macro","disambiguator":[16607008694551189368,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":25,"id":{"name":"futures_task","disambiguator":[12995716134902510648,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":26,"id":{"name":"pin_project_lite","disambiguator":[468121180006744328,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":27,"id":{"name":"slab","disambiguator":[9836226307066101663,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":28,"id":{"name":"futures_io","disambiguator":[13846079530223072692,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":29,"id":{"name":"memchr","disambiguator":[14182381211266571593,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":30,"id":{"name":"copyless","disambiguator":[13998291356804872749,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":31,"id":{"name":"smallvec","disambiguator":[10550307523895522763,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":32,"id":{"name":"tokio","disambiguator":[15358364753468199378,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":33,"id":{"name":"pin_project_lite","disambiguator":[7646238073417921644,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":34,"id":{"name":"bytes","disambiguator":[8461713654336000992,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":35,"id":{"name":"mio","disambiguator":[5085869278364210525,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":36,"id":{"name":"net2","disambiguator":[12499943522452134428,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":37,"id":{"name":"libc","disambiguator":[2877697153496922940,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":38,"id":{"name":"cfg_if","disambiguator":[469732712005314849,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":39,"id":{"name":"iovec","disambiguator":[5520876201906445761,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":40,"id":{"name":"log","disambiguator":[17209540010984550098,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":41,"id":{"name":"cfg_if","disambiguator":[16095159455043656986,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":42,"id":{"name":"lazy_static","disambiguator":[12282114963264425666,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":43,"id":{"name":"mio_uds","disambiguator":[18103742475129219749,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":44,"id":{"name":"signal_hook_registry","disambiguator":[3828403546171742268,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":45,"id":{"name":"actix_threadpool","disambiguator":[1545522485826205353,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":46,"id":{"name":"derive_more","disambiguator":[11376972938195258558,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":47,"id":{"name":"parking_lot","disambiguator":[16111721593302630345,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":48,"id":{"name":"instant","disambiguator":[12447617860971538052,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":49,"id":{"name":"lock_api","disambiguator":[15301690286531443082,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":50,"id":{"name":"scopeguard","disambiguator":[512746427292006730,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":51,"id":{"name":"parking_lot_core","disambiguator":[2345888269742652077,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":52,"id":{"name":"threadpool","disambiguator":[15173772705641058342,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":53,"id":{"name":"num_cpus","disambiguator":[10300095552014292797,0]}}],"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":0,"byte_end":1501,"line_start":1,"line_end":66,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":10},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":227,"byte_end":231,"line_start":6,"line_end":6,"column_start":24,"column_end":28},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":11},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":233,"byte_end":237,"line_start":6,"line_end":6,"column_start":30,"column_end":34},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":465},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":316,"byte_end":323,"line_start":13,"line_end":13,"column_start":24,"column_end":31},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":349,"byte_end":356,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":494},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":358,"byte_end":370,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":396,"byte_end":403,"line_start":15,"line_end":15,"column_start":24,"column_end":31},"alias_span":null,"name":"Runtime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":427,"byte_end":433,"line_start":16,"line_end":16,"column_start":23,"column_end":29},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":45,"index":0},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":459,"byte_end":475,"line_start":19,"line_end":19,"column_start":9,"column_end":25},"alias_span":null,"name":"blocking","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":926,"byte_end":927,"line_start":41,"line_end":41,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":382}},{"kind":"Use","ref_id":{"krate":32,"index":6453},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":962,"byte_end":968,"line_start":43,"line_end":43,"column_start":28,"column_end":34},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":381}},{"kind":"Use","ref_id":{"krate":32,"index":4601},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1037,"byte_end":1046,"line_start":48,"line_end":48,"column_start":25,"column_end":34},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":32,"index":4377},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1073,"byte_end":1084,"line_start":49,"line_end":49,"column_start":26,"column_end":37},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":32,"index":4414},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1086,"byte_end":1095,"line_start":49,"line_end":49,"column_start":39,"column_end":48},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":387}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1249,"byte_end":1250,"line_start":57,"line_end":57,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":32,"index":10041},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1328,"byte_end":1335,"line_start":62,"line_end":62,"column_start":26,"column_end":33},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":410}},{"kind":"Use","ref_id":{"krate":32,"index":9295},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1363,"byte_end":1372,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":410}},{"kind":"Use","ref_id":{"krate":32,"index":9294},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1374,"byte_end":1385,"line_start":63,"line_end":63,"column_start":38,"column_end":49},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":410}},{"kind":"Use","ref_id":{"krate":32,"index":9962},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1387,"byte_end":1392,"line_start":63,"line_end":63,"column_start":51,"column_end":56},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":410}},{"kind":"Use","ref_id":{"krate":32,"index":9723},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1421,"byte_end":1429,"line_start":64,"line_end":64,"column_start":27,"column_end":35},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":410}},{"kind":"Use","ref_id":{"krate":32,"index":9724},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1431,"byte_end":1442,"line_start":64,"line_end":64,"column_start":37,"column_end":48},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":410}},{"kind":"Use","ref_id":{"krate":32,"index":10060},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1444,"byte_end":1452,"line_start":64,"line_end":64,"column_start":50,"column_end":58},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":410}},{"kind":"Use","ref_id":{"krate":32,"index":9777},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1481,"byte_end":1488,"line_start":65,"line_end":65,"column_start":27,"column_end":34},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":410}},{"kind":"Use","ref_id":{"krate":32,"index":10550},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1490,"byte_end":1497,"line_start":65,"line_end":65,"column_start":36,"column_end":43},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":410}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":0,"byte_end":1501,"line_start":1,"line_end":66,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":206},{"krate":0,"index":276},{"krate":0,"index":296},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":387},{"krate":0,"index":410}],"decl_id":null,"docs":" A runtime implementation that runs everything on the current thread.\n","sig":null,"attributes":[{"value":"/ A runtime implementation that runs everything on the current thread.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":0,"byte_end":72,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"deny(rust_2018_idioms, warnings)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":73,"byte_end":109,"line_start":2,"line_end":2,"column_start":1,"column_end":37}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":110,"byte_end":144,"line_start":3,"line_end":3,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":465},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3321,"byte_end":3328,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"Arbiter","qualname":"::arbiter::Arbiter","value":"Arbiter {  }","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"decl_id":null,"docs":" Arbiters provide an asynchronous execution environment for actors, functions\n and futures. When an Arbiter is created, it spawns a new OS thread, and\n hosts an event loop. Some Arbiter functions execute on the current thread.\n","sig":null,"attributes":[{"value":"/ Arbiters provide an asynchronous execution environment for actors, functions","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3074,"byte_end":3154,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ and futures. When an Arbiter is created, it spawns a new OS thread, and","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3155,"byte_end":3230,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ hosts an event loop. Some Arbiter functions execute on the current thread.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3231,"byte_end":3309,"line_start":53,"line_end":53,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4143,"byte_end":4150,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"current","qualname":"<Arbiter>::current","value":"pub fn current() -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Returns the current thread's arbiter's address. If no Arbiter is present, then this\n function will panic!\n","sig":null,"attributes":[{"value":"/ Returns the current thread's arbiter's address. If no Arbiter is present, then this","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4015,"byte_end":4102,"line_start":84,"line_end":84,"column_start":5,"column_end":92}},{"value":"/ function will panic!","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4107,"byte_end":4131,"line_start":85,"line_end":85,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4386,"byte_end":4396,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"is_running","qualname":"<Arbiter>::is_running","value":"pub fn is_running() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if current arbiter is running.\n","sig":null,"attributes":[{"value":"/ Check if current arbiter is running.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4334,"byte_end":4374,"line_start":93,"line_end":93,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4521,"byte_end":4525,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"stop","qualname":"<Arbiter>::stop","value":"pub fn stop(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop arbiter from continuing it's event loop.\n","sig":null,"attributes":[{"value":"/ Stop arbiter from continuing it's event loop.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4460,"byte_end":4509,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4732,"byte_end":4735,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<Arbiter>::new","value":"pub fn new() -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Spawn new thread and run event loop in spawned thread.\n Returns address of newly created arbiter.\n","sig":null,"attributes":[{"value":"/ Spawn new thread and run event loop in spawned thread.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4612,"byte_end":4670,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/ Returns address of newly created arbiter.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4675,"byte_end":4720,"line_start":104,"line_end":104,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":7162,"byte_end":7167,"line_start":178,"line_end":178,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Arbiter>::spawn","value":"pub fn spawn<F>(F) where F: Future<Output = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future on the current thread. This does not create a new Arbiter\n or Arbiter address, it is simply a helper for spawning futures on the current\n thread.\n","sig":null,"attributes":[{"value":"/ Spawn a future on the current thread. This does not create a new Arbiter","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":6972,"byte_end":7048,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ or Arbiter address, it is simply a helper for spawning futures on the current","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":7053,"byte_end":7134,"line_start":176,"line_end":176,"column_start":5,"column_end":86}},{"value":"/ thread.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":7139,"byte_end":7150,"line_start":177,"line_end":177,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8299,"byte_end":8307,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"spawn_fn","qualname":"<Arbiter>::spawn_fn","value":"pub fn spawn_fn<F, R>(F) where F: FnOnce() -> R + 'static, R: Future<Output =\n()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes a future on the current thread. This does not create a new Arbiter\n or Arbiter address, it is simply a helper for executing futures on the current\n thread.\n","sig":null,"attributes":[{"value":"/ Executes a future on the current thread. This does not create a new Arbiter","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8105,"byte_end":8184,"line_start":204,"line_end":204,"column_start":5,"column_end":84}},{"value":"/ or Arbiter address, it is simply a helper for executing futures on the current","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8189,"byte_end":8271,"line_start":205,"line_end":205,"column_start":5,"column_end":87}},{"value":"/ thread.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8276,"byte_end":8287,"line_start":206,"line_end":206,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8549,"byte_end":8553,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"send","qualname":"<Arbiter>::send","value":"pub fn send<F>(&Self, F) where F: Future<Output = ()> + Send + Unpin + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a future to the Arbiter's thread, and spawn it.\n","sig":null,"attributes":[{"value":"/ Send a future to the Arbiter's thread, and spawn it.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8481,"byte_end":8537,"line_start":215,"line_end":215,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8895,"byte_end":8902,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"exec_fn","qualname":"<Arbiter>::exec_fn","value":"pub fn exec_fn<F>(&Self, F) where F: FnOnce() -> () + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread, and execute it. Any result from the function\n is discarded.\n","sig":null,"attributes":[{"value":"/ Send a function to the Arbiter's thread, and execute it. Any result from the function","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8772,"byte_end":8861,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/ is discarded.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8866,"byte_end":8883,"line_start":226,"line_end":226,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":9364,"byte_end":9368,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"exec","qualname":"<Arbiter>::exec","value":"pub fn exec<F, R>(&Self, F) -> /*impl Trait*/ where F: FnOnce() -> R + Send +\n'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread. This function will be executed asynchronously.\n A future is created, and when resolved will contain the result of the function sent\n to the Arbiters thread.\n","sig":null,"attributes":[{"value":"/ Send a function to the Arbiter's thread. This function will be executed asynchronously.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":9137,"byte_end":9228,"line_start":238,"line_end":238,"column_start":5,"column_end":96}},{"value":"/ A future is created, and when resolved will contain the result of the function sent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":9233,"byte_end":9320,"line_start":239,"line_end":239,"column_start":5,"column_end":92}},{"value":"/ to the Arbiters thread.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":9325,"byte_end":9352,"line_start":240,"line_end":240,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":9849,"byte_end":9857,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"set_item","qualname":"<Arbiter>::set_item","value":"pub fn set_item<T: 'static>(T)","parent":null,"children":[],"decl_id":null,"docs":" Set item to arbiter storage\n","sig":null,"attributes":[{"value":"/ Set item to arbiter storage","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":9806,"byte_end":9837,"line_start":257,"line_end":257,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10041,"byte_end":10054,"line_start":263,"line_end":263,"column_start":12,"column_end":25},"name":"contains_item","qualname":"<Arbiter>::contains_item","value":"pub fn contains_item<T: 'static>() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if arbiter storage contains item\n","sig":null,"attributes":[{"value":"/ Check if arbiter storage contains item","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":9987,"byte_end":10029,"line_start":262,"line_end":262,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10307,"byte_end":10315,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"get_item","qualname":"<Arbiter>::get_item","value":"pub fn get_item<T: 'static, F, R>(F) -> R where F: FnMut(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a type previously inserted on this arbiter's storage.","sig":null,"attributes":[{"value":"/ Get a reference to a type previously inserted on this arbiter's storage.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10172,"byte_end":10248,"line_start":267,"line_end":267,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10253,"byte_end":10256,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Panics is item is not inserted","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10261,"byte_end":10295,"line_start":269,"line_end":269,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10827,"byte_end":10839,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"get_mut_item","qualname":"<Arbiter>::get_mut_item","value":"pub fn get_mut_item<T: 'static, F, R>(F) -> R where F: FnMut(&mut T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a type previously inserted on this arbiter's storage.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a type previously inserted on this arbiter's storage.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10684,"byte_end":10768,"line_start":284,"line_end":284,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10773,"byte_end":10776,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Panics is item is not inserted","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10781,"byte_end":10815,"line_start":286,"line_end":286,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":11483,"byte_end":11487,"line_start":309,"line_end":309,"column_start":12,"column_end":16},"name":"join","qualname":"<Arbiter>::join","value":"pub fn join(&mut Self) -> thread::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for the event loop to stop by joining the underlying thread (if have Some).\n","sig":null,"attributes":[{"value":"/ Wait for the event loop to stop by joining the underlying thread (if have Some).","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":11387,"byte_end":11471,"line_start":308,"line_end":308,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":11792,"byte_end":11802,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"local_join","qualname":"<Arbiter>::local_join","value":"pub fn local_join() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will be completed once all currently spawned futures\n have completed.\n","sig":null,"attributes":[{"value":"/ Returns a future that will be completed once all currently spawned futures","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":11678,"byte_end":11756,"line_start":317,"line_end":317,"column_start":5,"column_end":83}},{"value":"/ have completed.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":11761,"byte_end":11780,"line_start":318,"line_end":318,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":16974,"byte_end":16981,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Builder","qualname":"::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"decl_id":null,"docs":" Builder struct for a actix runtime.","sig":null,"attributes":[{"value":"/ Builder struct for a actix runtime.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":16746,"byte_end":16785,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":16786,"byte_end":16789,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Either use `Builder::build` to create a system and start actors.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":16790,"byte_end":16858,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ Alternatively, use `Builder::run` to start the tokio runtime and","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":16859,"byte_end":16927,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ run a function in its context.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":16928,"byte_end":16962,"line_start":17,"line_end":17,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17401,"byte_end":17405,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"pub fn name<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the System.\n","sig":null,"attributes":[{"value":"/ Sets the name of the System.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17357,"byte_end":17389,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17711,"byte_end":17724,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"stop_on_panic","qualname":"<Builder>::stop_on_panic","value":"pub fn stop_on_panic(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option 'stop_on_panic' which controls whether the System is stopped when an\n uncaught panic is thrown from a worker thread.","sig":null,"attributes":[{"value":"/ Sets the option 'stop_on_panic' which controls whether the System is stopped when an","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17521,"byte_end":17609,"line_start":40,"line_end":40,"column_start":5,"column_end":93}},{"value":"/ uncaught panic is thrown from a worker thread.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17614,"byte_end":17664,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17669,"byte_end":17672,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Defaults to false.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17677,"byte_end":17699,"line_start":43,"line_end":43,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17938,"byte_end":17943,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(Self) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new System.","sig":null,"attributes":[{"value":"/ Create new System.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17834,"byte_end":17856,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17861,"byte_end":17864,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method panics if it can not create tokio runtime","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17869,"byte_end":17926,"line_start":51,"line_end":51,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":18453,"byte_end":18456,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"run","qualname":"<Builder>::run","value":"pub fn run<F>(Self, F) -> io::Result<()> where F: FnOnce() -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[{"value":"/ This function will start tokio runtime and will finish once the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":18267,"byte_end":18334,"line_start":63,"line_end":63,"column_start":5,"column_end":72}},{"value":"/ `System::stop()` message get called.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":18339,"byte_end":18379,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ Function `f` get called within tokio runtime context.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":18384,"byte_end":18441,"line_start":65,"line_end":65,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":494},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":20946,"byte_end":20958,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"SystemRunner","qualname":"::builder::SystemRunner","value":"SystemRunner {  }","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497}],"decl_id":null,"docs":" Helper object that runs System's event loop\n","sig":null,"attributes":[{"value":"/ Helper object that runs System's event loop","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":20829,"byte_end":20876,"line_start":147,"line_end":147,"column_start":1,"column_end":48}},{"value":"must_use = \"SystemRunner must be run\"","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":20877,"byte_end":20917,"line_start":148,"line_end":148,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21171,"byte_end":21174,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"run","qualname":"<SystemRunner>::run","value":"pub fn run(Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start event loop and will finish once the\n `System::stop()` function is called.\n","sig":null,"attributes":[{"value":"/ This function will start event loop and will finish once the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21050,"byte_end":21114,"line_start":157,"line_end":157,"column_start":5,"column_end":69}},{"value":"/ `System::stop()` function is called.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21119,"byte_end":21159,"line_start":158,"line_end":158,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21868,"byte_end":21876,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"block_on","qualname":"<SystemRunner>::block_on","value":"pub fn block_on<F, O>(&mut Self, F) -> O where F: Future<Output = O> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Execute a future and wait for result.\n","sig":null,"attributes":[{"value":"/ Execute a future and wait for result.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21815,"byte_end":21856,"line_start":181,"line_end":181,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":500},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22397,"byte_end":22404,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502}],"decl_id":null,"docs":" Single-threaded runtime provides a way to start reactor\n and runtime on the current thread.","sig":null,"attributes":[{"value":"/ Single-threaded runtime provides a way to start reactor","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22180,"byte_end":22239,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/ and runtime on the current thread.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22240,"byte_end":22278,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22279,"byte_end":22282,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22283,"byte_end":22342,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22343,"byte_end":22346,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22347,"byte_end":22368,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22598,"byte_end":22601,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime initialized with default configuration values.\n","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22476,"byte_end":22509,"line_start":18,"line_end":18,"column_start":5,"column_end":38}},{"value":"/ Returns a new runtime initialized with default configuration values.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22514,"byte_end":22586,"line_start":19,"line_end":19,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23667,"byte_end":23672,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> &Self where F: Future<Output = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the single-threaded runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the single-threaded runtime.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22872,"byte_end":22924,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22929,"byte_end":22932,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22937,"byte_end":22996,"line_start":35,"line_end":35,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23001,"byte_end":23004,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23009,"byte_end":23030,"line_start":37,"line_end":37,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23035,"byte_end":23038,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23043,"byte_end":23057,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23062,"byte_end":23065,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23070,"byte_end":23088,"line_start":41,"line_end":41,"column_start":5,"column_end":23}},{"value":"/ # use futures::{future, Future, Stream};","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23093,"byte_end":23137,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"/ use actix_rt::Runtime;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23142,"byte_end":23168,"line_start":43,"line_end":43,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23173,"byte_end":23176,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23181,"byte_end":23197,"line_start":45,"line_end":45,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23202,"byte_end":23227,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23232,"byte_end":23273,"line_start":47,"line_end":47,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23278,"byte_end":23281,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23286,"byte_end":23324,"line_start":49,"line_end":49,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(future::lazy(|_| {","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23329,"byte_end":23360,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/     println!(\"running on the runtime\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23365,"byte_end":23408,"line_start":51,"line_end":51,"column_start":5,"column_end":48}},{"value":"/ }));","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23413,"byte_end":23421,"line_start":52,"line_end":52,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23426,"byte_end":23433,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23438,"byte_end":23460,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23465,"byte_end":23472,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23477,"byte_end":23480,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23485,"byte_end":23497,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23502,"byte_end":23505,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails. Failure occurs if the executor","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23510,"byte_end":23585,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ is currently at capacity and is unable to spawn a new future.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23590,"byte_end":23655,"line_start":60,"line_end":60,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24698,"byte_end":24706,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F>(&mut Self, F) -> F::Output where F: Future + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided future, blocking the current thread until the future\n completes.","sig":null,"attributes":[{"value":"/ Runs the provided future, blocking the current thread until the future","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23825,"byte_end":23899,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ completes.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23904,"byte_end":23918,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23923,"byte_end":23926,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function can be used to synchronously block the current thread","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23931,"byte_end":24002,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ until the provided `future` has resolved either successfully or with an","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24007,"byte_end":24082,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ error. The result of the future is then returned from this function","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24087,"byte_end":24158,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ call.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24163,"byte_end":24172,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24177,"byte_end":24180,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this function will **also** execute any spawned futures on the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24185,"byte_end":24261,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ current thread, but will **not** block until these other spawned futures","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24266,"byte_end":24342,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ have completed. Once the function returns, any uncompleted futures","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24347,"byte_end":24417,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ remain pending in the `Runtime` instance. These futures will not run","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24422,"byte_end":24494,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ until `block_on` or `run` is called again.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24499,"byte_end":24545,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24550,"byte_end":24553,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that other spawned futures","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24558,"byte_end":24627,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ complete execution by calling `block_on` or `run`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24632,"byte_end":24686,"line_start":84,"line_end":84,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":25239,"byte_end":25245,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"System","qualname":"::system::System","value":"System {  }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"decl_id":null,"docs":" System is a runtime manager.\n","sig":null,"attributes":[{"value":"/ System is a runtime manager.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":25171,"byte_end":25203,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26066,"byte_end":26073,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"builder","qualname":"<System>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Build a new system with a customized tokio runtime.","sig":null,"attributes":[{"value":"/ Build a new system with a customized tokio runtime.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":25880,"byte_end":25935,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":25940,"byte_end":25943,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This allows to customize the runtime. See struct level docs on","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":25948,"byte_end":26014,"line_start":46,"line_end":46,"column_start":5,"column_end":71}},{"value":"/ `Builder` for more information.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26019,"byte_end":26054,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26265,"byte_end":26268,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<System>::new","value":"pub fn new<T: Into<String>>(T) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new system.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26123,"byte_end":26156,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"/ Create new system.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26161,"byte_end":26183,"line_start":53,"line_end":53,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26188,"byte_end":26191,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method panics if it can not create tokio runtime","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26196,"byte_end":26253,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26537,"byte_end":26549,"line_start":64,"line_end":64,"column_start":12,"column_end":24},"name":"run_in_tokio","qualname":"<System>::run_in_tokio","value":"pub fn run_in_tokio<T: Into<String>>(T, &LocalSet) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create new system using provided tokio Handle.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26367,"byte_end":26400,"line_start":60,"line_end":60,"column_start":5,"column_end":38}},{"value":"/ Create new system using provided tokio Handle.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26405,"byte_end":26455,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26460,"byte_end":26463,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method panics if it can not spawn system arbiter","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26468,"byte_end":26525,"line_start":63,"line_end":63,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26824,"byte_end":26831,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"current","qualname":"<System>::current","value":"pub fn current() -> System","parent":null,"children":[],"decl_id":null,"docs":" Get current running system.\n","sig":null,"attributes":[{"value":"/ Get current running system.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26781,"byte_end":26812,"line_start":74,"line_end":74,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27092,"byte_end":27098,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"is_set","qualname":"<System>::is_set","value":"pub fn is_set() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if current system is set, i.e., as already been started.\n","sig":null,"attributes":[{"value":"/ Check if current system is set, i.e., as already been started.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27014,"byte_end":27080,"line_start":82,"line_end":82,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27237,"byte_end":27248,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"set_current","qualname":"<System>::set_current","value":"pub fn set_current(System)","parent":null,"children":[],"decl_id":null,"docs":" Set current running system.\n","sig":null,"attributes":[{"value":"/ Set current running system.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27175,"byte_end":27206,"line_start":87,"line_end":87,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27409,"byte_end":27421,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"with_current","qualname":"<System>::with_current","value":"pub fn with_current<F, R>(F) -> R where F: FnOnce(&System) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute function with system reference.\n","sig":null,"attributes":[{"value":"/ Execute function with system reference.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27354,"byte_end":27397,"line_start":95,"line_end":95,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27676,"byte_end":27678,"line_start":107,"line_end":107,"column_start":12,"column_end":14},"name":"id","qualname":"<System>::id","value":"pub fn id(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" System id\n","sig":null,"attributes":[{"value":"/ System id","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27651,"byte_end":27664,"line_start":106,"line_end":106,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27755,"byte_end":27759,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"stop","qualname":"<System>::stop","value":"pub fn stop(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop the system\n","sig":null,"attributes":[{"value":"/ Stop the system","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27724,"byte_end":27743,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27871,"byte_end":27885,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"stop_with_code","qualname":"<System>::stop_with_code","value":"pub fn stop_with_code(&Self, i32)","parent":null,"children":[],"decl_id":null,"docs":" Stop the system with a particular exit code.\n","sig":null,"attributes":[{"value":"/ Stop the system with a particular exit code.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27811,"byte_end":27859,"line_start":116,"line_end":116,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28239,"byte_end":28252,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"stop_on_panic","qualname":"<System>::stop_on_panic","value":"pub fn stop_on_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return status of 'stop_on_panic' option which controls whether the System is stopped when an\n uncaught panic is thrown from a worker thread.\n","sig":null,"attributes":[{"value":"/ Return status of 'stop_on_panic' option which controls whether the System is stopped when an","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28076,"byte_end":28172,"line_start":125,"line_end":125,"column_start":5,"column_end":101}},{"value":"/ uncaught panic is thrown from a worker thread.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28177,"byte_end":28227,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28338,"byte_end":28345,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"arbiter","qualname":"<System>::arbiter","value":"pub fn arbiter(&Self) -> &Arbiter","parent":null,"children":[],"decl_id":null,"docs":" System arbiter\n","sig":null,"attributes":[{"value":"/ System arbiter","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28308,"byte_end":28326,"line_start":131,"line_end":131,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28586,"byte_end":28589,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"run","qualname":"<System>::run","value":"pub fn run<F>(F) -> io::Result<()> where F: FnOnce() -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[{"value":"/ This function will start tokio runtime and will finish once the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28400,"byte_end":28467,"line_start":136,"line_end":136,"column_start":5,"column_end":72}},{"value":"/ `System::stop()` message get called.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28472,"byte_end":28512,"line_start":137,"line_end":137,"column_start":5,"column_end":45}},{"value":"/ Function `f` get called within tokio runtime context.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28517,"byte_end":28574,"line_start":138,"line_end":138,"column_start":5,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":379},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":619,"byte_end":624,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn","value":"pub fn spawn<F>(F) where F: futures_util::future::Future<Output = ()> +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future on the current arbiter.","sig":null,"attributes":[{"value":"/ Spawns a future on the current arbiter.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":490,"byte_end":533,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":534,"byte_end":537,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":538,"byte_end":550,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":551,"byte_end":554,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function panics if actix system is not running.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":555,"byte_end":611,"line_start":25,"line_end":25,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":381},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":844,"byte_end":850,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"signal","qualname":"::signal","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":384}],"decl_id":null,"docs":" Asynchronous signal handling\n","sig":null,"attributes":[{"value":"/ Asynchronous signal handling","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":803,"byte_end":835,"line_start":37,"line_end":37,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":382},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":882,"byte_end":886,"line_start":40,"line_end":40,"column_start":13,"column_end":17},"name":"unix","qualname":"::signal::unix","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":383}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":857,"byte_end":869,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":387},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1007,"byte_end":1010,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"net","qualname":"::net","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":409}],"decl_id":null,"docs":" TCP/UDP/Unix bindings\n","sig":null,"attributes":[{"value":"/ TCP/UDP/Unix bindings","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":973,"byte_end":998,"line_start":46,"line_end":46,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":410},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1296,"byte_end":1300,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"name":"time","qualname":"::time","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":438}],"decl_id":null,"docs":" Utilities for tracking time.\n","sig":null,"attributes":[{"value":"/ Utilities for tracking time.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1255,"byte_end":1287,"line_start":60,"line_end":60,"column_start":1,"column_end":33}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":2702,"byte_end":2716,"line_start":40,"line_end":40,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3445,"byte_end":3452,"line_start":59,"line_end":59,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3558,"byte_end":3565,"line_start":65,"line_end":65,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3629,"byte_end":3636,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":169},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":12168,"byte_end":12182,"line_start":331,"line_end":331,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":12803,"byte_end":12820,"line_start":356,"line_end":356,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":13186,"byte_end":13203,"line_start":369,"line_end":369,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":14813,"byte_end":14826,"line_start":418,"line_end":418,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":15073,"byte_end":15086,"line_start":428,"line_end":428,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":16297,"byte_end":16298,"line_start":463,"line_end":463,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17198,"byte_end":17205,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":19774,"byte_end":19791,"line_start":116,"line_end":116,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21031,"byte_end":21043,"line_start":156,"line_end":156,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22462,"byte_end":22469,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":25444,"byte_end":25450,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":2702,"byte_end":2716,"line_start":40,"line_end":40,"column_start":21,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":102},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3445,"byte_end":3452,"line_start":59,"line_end":59,"column_start":16,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3558,"byte_end":3565,"line_start":65,"line_end":65,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3629,"byte_end":3636,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":12168,"byte_end":12182,"line_start":331,"line_end":331,"column_start":17,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":12803,"byte_end":12820,"line_start":356,"line_end":356,"column_start":15,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":13186,"byte_end":13203,"line_start":369,"line_end":369,"column_start":17,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":14813,"byte_end":14826,"line_start":418,"line_end":418,"column_start":6,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":15073,"byte_end":15086,"line_start":428,"line_end":428,"column_start":17,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":16224,"byte_end":16228,"line_start":459,"line_end":459,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":201}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":16297,"byte_end":16298,"line_start":463,"line_end":463,"column_start":20,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":204},"to":{"krate":0,"index":201}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17198,"byte_end":17205,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":19774,"byte_end":19791,"line_start":116,"line_end":116,"column_start":6,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21031,"byte_end":21043,"line_start":156,"line_end":156,"column_start":6,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22462,"byte_end":22469,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":25444,"byte_end":25450,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}}]}