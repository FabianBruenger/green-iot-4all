{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0","program":"/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tera","--edition=2018","/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"builtins\"","--cfg","feature=\"chrono\"","--cfg","feature=\"chrono-tz\"","--cfg","feature=\"default\"","--cfg","feature=\"humansize\"","--cfg","feature=\"percent-encoding\"","--cfg","feature=\"rand\"","--cfg","feature=\"slug\"","-C","metadata=dddcbd6718c702f2","-C","extra-filename=-dddcbd6718c702f2","--out-dir","/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","-L","dependency=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","--extern","chrono=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libchrono-3eb0bad71ba653b5.rmeta","--extern","chrono_tz=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libchrono_tz-565e7755b6b5a3e5.rmeta","--extern","globwalk=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libglobwalk-8ed9c7b8350081f0.rmeta","--extern","humansize=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libhumansize-12ada565fbaead6c.rmeta","--extern","lazy_static=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/liblazy_static-c66fb8985c718991.rmeta","--extern","percent_encoding=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libpercent_encoding-4898d596a5eeb5fc.rmeta","--extern","pest=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libpest-477c6ef67302897c.rmeta","--extern","pest_derive=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libpest_derive-6a2e6d885f7b7c33.dylib","--extern","rand=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/librand-5bed7b8e6f88f581.rmeta","--extern","regex=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libregex-f58c496f97107460.rmeta","--extern","serde=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libserde-924dcf29a230f038.rmeta","--extern","serde_json=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libserde_json-6066b07a71ebc7d6.rmeta","--extern","slug=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libslug-3d36348e0494d647.rmeta","--extern","unic_segment=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libunic_segment-36c5e0b4655623fb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libtera-dddcbd6718c702f2.rmeta"},"prelude":{"crate_id":{"name":"tera","disambiguator":[4492502878430824802,0]},"crate_root":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src","external_crates":[{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","num":18,"id":{"name":"serde_json","disambiguator":[4886200270607137541,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","num":19,"id":{"name":"serde","disambiguator":[12166998209066029767,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","num":20,"id":{"name":"serde_derive","disambiguator":[4978173574824598180,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","num":21,"id":{"name":"itoa","disambiguator":[8870805948981786221,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","num":22,"id":{"name":"ryu","disambiguator":[9159711322852449567,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/common.rs","num":23,"id":{"name":"chrono","disambiguator":[17406756035295867984,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/common.rs","num":24,"id":{"name":"libc","disambiguator":[2877697153496922940,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/common.rs","num":25,"id":{"name":"num_integer","disambiguator":[2742386072495961041,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/common.rs","num":26,"id":{"name":"num_traits","disambiguator":[5707895347120691620,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/common.rs","num":27,"id":{"name":"chrono_tz","disambiguator":[11098202191279161275,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/common.rs","num":28,"id":{"name":"phf","disambiguator":[16572092394021210367,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/common.rs","num":29,"id":{"name":"phf_shared","disambiguator":[12297724433542288599,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/common.rs","num":30,"id":{"name":"siphasher","disambiguator":[8684630212343285851,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/common.rs","num":31,"id":{"name":"uncased","disambiguator":[12835213806724875077,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/number.rs","num":32,"id":{"name":"humansize","disambiguator":[11823257388418248218,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":33,"id":{"name":"lazy_static","disambiguator":[12282114963264425666,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":34,"id":{"name":"regex","disambiguator":[3415462757173402864,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":35,"id":{"name":"regex_syntax","disambiguator":[3874507028601957489,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":36,"id":{"name":"aho_corasick","disambiguator":[7290012078854163502,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":37,"id":{"name":"memchr","disambiguator":[14182381211266571593,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":38,"id":{"name":"unic_segment","disambiguator":[835113276079130538,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":39,"id":{"name":"unic_ucd_segment","disambiguator":[14905187334636291923,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":40,"id":{"name":"unic_char_property","disambiguator":[3528111435853947656,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":41,"id":{"name":"unic_char_range","disambiguator":[4441149382233217117,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":42,"id":{"name":"unic_ucd_version","disambiguator":[6333415163692900554,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":43,"id":{"name":"unic_common","disambiguator":[1566501370131142526,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":44,"id":{"name":"percent_encoding","disambiguator":[4203023312293033189,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","num":45,"id":{"name":"rand","disambiguator":[8810896067596536815,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","num":46,"id":{"name":"rand_core","disambiguator":[8776641214250803233,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","num":47,"id":{"name":"getrandom","disambiguator":[3016238504352041233,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","num":48,"id":{"name":"cfg_if","disambiguator":[16095159455043656986,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","num":49,"id":{"name":"rand_chacha","disambiguator":[18348215253351537503,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","num":50,"id":{"name":"ppv_lite86","disambiguator":[18134121952130635477,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/mod.rs","num":51,"id":{"name":"pest","disambiguator":[17123527063401320553,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/mod.rs","num":52,"id":{"name":"ucd_trie","disambiguator":[11265955339326338003,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/mod.rs","num":53,"id":{"name":"pest_derive","disambiguator":[13688379427595071261,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":54,"id":{"name":"globwalk","disambiguator":[3973913519879111391,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":55,"id":{"name":"ignore","disambiguator":[6291270052640017814,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":56,"id":{"name":"globset","disambiguator":[10963773141835674470,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":57,"id":{"name":"bstr","disambiguator":[458572158671120107,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":58,"id":{"name":"log","disambiguator":[17209540010984550098,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":59,"id":{"name":"fnv","disambiguator":[17938246416947643185,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":60,"id":{"name":"thread_local","disambiguator":[18011350873557392154,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":61,"id":{"name":"once_cell","disambiguator":[13823224811709582380,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":62,"id":{"name":"same_file","disambiguator":[9636009200454199814,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":63,"id":{"name":"walkdir","disambiguator":[5880227015490289256,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":64,"id":{"name":"crossbeam_utils","disambiguator":[17437504363425991844,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","num":65,"id":{"name":"bitflags","disambiguator":[18374326665816880112,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":66,"id":{"name":"slug","disambiguator":[12420687008119306459,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/string.rs","num":67,"id":{"name":"deunicode","disambiguator":[8045577668977892973,0]}}],"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":0,"byte_end":1563,"line_start":1,"line_end":52,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":536,"byte_end":542,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":580,"byte_end":588,"line_start":26,"line_end":26,"column_start":37,"column_end":45},"alias_span":null,"name":"Function","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":624,"byte_end":628,"line_start":27,"line_end":27,"column_start":35,"column_end":39},"alias_span":null,"name":"Test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1275},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":654,"byte_end":661,"line_start":28,"line_end":28,"column_start":25,"column_end":32},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1342},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":687,"byte_end":692,"line_start":29,"line_end":29,"column_start":25,"column_end":30},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1296},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":694,"byte_end":703,"line_start":29,"line_end":29,"column_start":32,"column_end":41},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":466},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":705,"byte_end":711,"line_start":29,"line_end":29,"column_start":43,"column_end":49},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":855,"byte_end":871,"line_start":32,"line_end":32,"column_start":25,"column_end":41},"alias_span":null,"name":"get_json_pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3285},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":913,"byte_end":921,"line_start":34,"line_end":34,"column_start":26,"column_end":34},"alias_span":null,"name":"Template","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3300},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":944,"byte_end":948,"line_start":35,"line_end":35,"column_start":22,"column_end":26},"alias_span":null,"name":"Tera","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1169},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":972,"byte_end":983,"line_start":36,"line_end":36,"column_start":23,"column_end":34},"alias_span":null,"name":"escape_html","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":2014},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1116,"byte_end":1126,"line_start":39,"line_end":39,"column_start":29,"column_end":39},"alias_span":null,"name":"from_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":2012},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1128,"byte_end":1136,"line_start":39,"line_end":39,"column_start":41,"column_end":49},"alias_span":null,"name":"to_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":589},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1138,"byte_end":1141,"line_start":39,"line_end":39,"column_start":51,"column_end":54},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":2927},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1143,"byte_end":1149,"line_start":39,"line_end":39,"column_start":56,"column_end":62},"alias_span":null,"name":"Number","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":2590},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1151,"byte_end":1156,"line_start":39,"line_end":39,"column_start":64,"column_end":69},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":573},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1312,"byte_end":1315,"line_start":44,"line_end":44,"column_start":24,"column_end":27},"alias_span":null,"name":"ast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":327},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1503,"byte_end":1517,"line_start":50,"line_end":50,"column_start":44,"column_end":58},"alias_span":null,"name":"extract_string","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":0,"index":325},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1519,"byte_end":1538,"line_start":50,"line_end":50,"column_start":60,"column_end":79},"alias_span":null,"name":"number_args_allowed","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1540,"byte_end":1553,"line_start":50,"line_end":50,"column_start":81,"column_end":94},"alias_span":null,"name":"value_defined","value":"","parent":{"krate":0,"index":1231}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":0,"byte_end":1563,"line_start":1,"line_end":52,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":345},{"krate":0,"index":410},{"krate":0,"index":468},{"krate":0,"index":539},{"krate":0,"index":656},{"krate":0,"index":997},{"krate":0,"index":1028},{"krate":0,"index":1165},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230}],"decl_id":null,"docs":" # Tera\n Tera is a template engine based on [Jinja2](http://jinja.pocoo.org/)\n and the [Django template language](https://docs.djangoproject.com/en/3.1/topics/templates/).","sig":null,"attributes":[{"value":"/ # Tera","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":49,"byte_end":59,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"/ Tera is a template engine based on [Jinja2](http://jinja.pocoo.org/)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":60,"byte_end":132,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ and the [Django template language](https://docs.djangoproject.com/en/3.1/topics/templates/).","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":133,"byte_end":229,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":230,"byte_end":233,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See the [site](https://tera.netlify.com) for features and to get started.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":234,"byte_end":311,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":313,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","byte_start":3138,"byte_end":3144,"line_start":13,"line_end":13,"column_start":11,"column_end":17},"name":"Filter","qualname":"::builtins::filters::Filter","value":"Filter: Sync + Send","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"decl_id":null,"docs":" The filter function type definition\n","sig":null,"attributes":[{"value":"/ The filter function type definition","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","byte_start":3088,"byte_end":3127,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","byte_start":3211,"byte_end":3217,"line_start":15,"line_end":15,"column_start":8,"column_end":14},"name":"filter","qualname":"::builtins::filters::Filter::filter","value":"pub fn filter(&Self, &Value, &HashMap<String, Value>) -> Result<Value>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" The filter function type definition\n","sig":null,"attributes":[{"value":"/ The filter function type definition","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","byte_start":3164,"byte_end":3203,"line_start":14,"line_end":14,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","byte_start":3388,"byte_end":3395,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"is_safe","qualname":"::builtins::filters::Filter::is_safe","value":"pub fn is_safe(&Self) -> bool","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Whether the current filter's output should be treated as safe, defaults to `false`\n","sig":null,"attributes":[{"value":"/ Whether the current filter's output should be treated as safe, defaults to `false`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","byte_start":3294,"byte_end":3380,"line_start":17,"line_end":17,"column_start":5,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":292},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","byte_start":85009,"byte_end":85017,"line_start":12,"line_end":12,"column_start":11,"column_end":19},"name":"Function","qualname":"::builtins::functions::Function","value":"Function: Sync + Send","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":" The global function type definition\n","sig":null,"attributes":[{"value":"/ The global function type definition","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","byte_start":84959,"byte_end":84998,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","byte_start":85084,"byte_end":85088,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"call","qualname":"::builtins::functions::Function::call","value":"pub fn call(&Self, &HashMap<String, Value>) -> Result<Value>","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" The global function type definition\n","sig":null,"attributes":[{"value":"/ The global function type definition","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","byte_start":85037,"byte_end":85076,"line_start":13,"line_end":13,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","byte_start":85246,"byte_end":85253,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"is_safe","qualname":"::builtins::functions::Function::is_safe","value":"pub fn is_safe(&Self) -> bool","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Whether the current function's output should be treated as safe, defaults to `false`\n","sig":null,"attributes":[{"value":"/ Whether the current function's output should be treated as safe, defaults to `false`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","byte_start":85150,"byte_end":85238,"line_start":16,"line_end":16,"column_start":5,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":320},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":95260,"byte_end":95264,"line_start":7,"line_end":7,"column_start":11,"column_end":15},"name":"Test","qualname":"::builtins::testers::Test","value":"Test: Sync + Send","parent":null,"children":[{"krate":0,"index":321}],"decl_id":null,"docs":" The tester function type definition\n","sig":null,"attributes":[{"value":"/ The tester function type definition","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":95210,"byte_end":95249,"line_start":6,"line_end":6,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":95331,"byte_end":95335,"line_start":9,"line_end":9,"column_start":8,"column_end":12},"name":"test","qualname":"::builtins::testers::Test::test","value":"pub fn test(&Self, Option<&Value>, &[Value]) -> Result<bool>","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" The tester function type definition\n","sig":null,"attributes":[{"value":"/ The tester function type definition","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":95284,"byte_end":95323,"line_start":8,"line_end":8,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":325},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":95672,"byte_end":95691,"line_start":22,"line_end":22,"column_start":8,"column_end":27},"name":"number_args_allowed","qualname":"::builtins::testers::number_args_allowed","value":"pub fn number_args_allowed(&str, usize, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Check that the number of args match what was expected\n","sig":null,"attributes":[{"value":"/ Check that the number of args match what was expected","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":95607,"byte_end":95664,"line_start":21,"line_end":21,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":326},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":96245,"byte_end":96258,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"value_defined","qualname":"::builtins::testers::value_defined","value":"pub fn value_defined(&str, Option<&Value>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Called to check if the Value is defined and return an Err if not\n","sig":null,"attributes":[{"value":"/ Called to check if the Value is defined and return an Err if not","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":96169,"byte_end":96237,"line_start":40,"line_end":40,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":327},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":96622,"byte_end":96636,"line_start":54,"line_end":54,"column_start":8,"column_end":22},"name":"extract_string","qualname":"::builtins::testers::extract_string","value":"pub fn extract_string<'a>(&str, &str, Option<&'a Value>) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Helper function to extract string from an Option<Value> to remove boilerplate\n with tester error handling\n","sig":null,"attributes":[{"value":"/ Helper function to extract string from an Option<Value> to remove boilerplate","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":96502,"byte_end":96583,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ with tester error handling","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":96584,"byte_end":96614,"line_start":53,"line_end":53,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":106925,"byte_end":106932,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":1276}],"decl_id":null,"docs":" The struct that holds the context of a template rendering.","sig":null,"attributes":[{"value":"/ The struct that holds the context of a template rendering.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":106725,"byte_end":106787,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":106788,"byte_end":106791,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Light wrapper around a `BTreeMap` for easier insertions of Serializable","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":106792,"byte_end":106867,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ values","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":106868,"byte_end":106878,"line_start":12,"line_end":12,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107036,"byte_end":107039,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Context>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes an empty context\n","sig":null,"attributes":[{"value":"/ Initializes an empty context","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":106992,"byte_end":107024,"line_start":19,"line_end":19,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107401,"byte_end":107407,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"insert","qualname":"<Context>::insert","value":"pub fn insert<T: Serialize + ?Sized, S: Into<String>>(&mut Self, S, &T)","parent":null,"children":[],"decl_id":null,"docs":" Converts the `val` parameter to `Value` and insert it into the context.","sig":null,"attributes":[{"value":"/ Converts the `val` parameter to `Value` and insert it into the context.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107105,"byte_end":107180,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107185,"byte_end":107188,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Panics if the serialization fails.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107193,"byte_end":107231,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107236,"byte_end":107239,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107244,"byte_end":107255,"line_start":28,"line_end":28,"column_start":5,"column_end":16}},{"value":"/ # use tera::Context;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107260,"byte_end":107284,"line_start":29,"line_end":29,"column_start":5,"column_end":29}},{"value":"/ let mut context = tera::Context::new();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107289,"byte_end":107332,"line_start":30,"line_end":30,"column_start":5,"column_end":48}},{"value":"/ context.insert(\"number_users\", &42);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107337,"byte_end":107377,"line_start":31,"line_end":31,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107382,"byte_end":107389,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108309,"byte_end":108319,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"try_insert","qualname":"<Context>::try_insert","value":"pub fn try_insert<T: Serialize + ?Sized, S: Into<String>>(&mut Self, S, &T)\n-> TeraResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Converts the `val` parameter to `Value` and insert it into the context.","sig":null,"attributes":[{"value":"/ Converts the `val` parameter to `Value` and insert it into the context.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107551,"byte_end":107626,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107631,"byte_end":107634,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the serialization fails.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107639,"byte_end":107687,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107692,"byte_end":107695,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107700,"byte_end":107711,"line_start":41,"line_end":41,"column_start":5,"column_end":16}},{"value":"/ # use tera::Context;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107716,"byte_end":107740,"line_start":42,"line_end":42,"column_start":5,"column_end":29}},{"value":"/ # struct CannotBeSerialized;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107745,"byte_end":107777,"line_start":43,"line_end":43,"column_start":5,"column_end":37}},{"value":"/ # impl serde::Serialize for CannotBeSerialized {","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107782,"byte_end":107834,"line_start":44,"line_end":44,"column_start":5,"column_end":57}},{"value":"/ #     fn serialize<S: serde::Serializer>(&self, serializer: S) -> Result<S::Ok, S::Error> {","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107839,"byte_end":107934,"line_start":45,"line_end":45,"column_start":5,"column_end":100}},{"value":"/ #         Err(serde::ser::Error::custom(\"Error\"))","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107939,"byte_end":107992,"line_start":46,"line_end":46,"column_start":5,"column_end":58}},{"value":"/ #     }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":107997,"byte_end":108008,"line_start":47,"line_end":47,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108013,"byte_end":108020,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # let user = CannotBeSerialized;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108025,"byte_end":108061,"line_start":49,"line_end":49,"column_start":5,"column_end":41}},{"value":"/ let mut context = Context::new();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108066,"byte_end":108103,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/ // user is an instance of a struct implementing `Serialize`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108108,"byte_end":108171,"line_start":51,"line_end":51,"column_start":5,"column_end":68}},{"value":"/ if let Err(_) = context.try_insert(\"number_users\", &user) {","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108176,"byte_end":108239,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/     // Serialization failed","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108244,"byte_end":108275,"line_start":53,"line_end":53,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108280,"byte_end":108285,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108290,"byte_end":108297,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108966,"byte_end":108972,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"extend","qualname":"<Context>::extend","value":"pub fn extend(&mut Self, Context)","parent":null,"children":[],"decl_id":null,"docs":" Appends the data of the `source` parameter to `self`, overwriting existing keys.\n The source context will be dropped.","sig":null,"attributes":[{"value":"/ Appends the data of the `source` parameter to `self`, overwriting existing keys.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108520,"byte_end":108604,"line_start":66,"line_end":66,"column_start":5,"column_end":89}},{"value":"/ The source context will be dropped.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108609,"byte_end":108648,"line_start":67,"line_end":67,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108653,"byte_end":108656,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108661,"byte_end":108672,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ # use tera::Context;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108677,"byte_end":108701,"line_start":70,"line_end":70,"column_start":5,"column_end":29}},{"value":"/ let mut target = Context::new();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108706,"byte_end":108742,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ target.insert(\"a\", &1);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108747,"byte_end":108774,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/ target.insert(\"b\", &2);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108779,"byte_end":108806,"line_start":73,"line_end":73,"column_start":5,"column_end":32}},{"value":"/ let mut source = Context::new();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108811,"byte_end":108847,"line_start":74,"line_end":74,"column_start":5,"column_end":41}},{"value":"/ source.insert(\"b\", &3);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108852,"byte_end":108879,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/ source.insert(\"d\", &4);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108884,"byte_end":108911,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/ target.extend(source);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108916,"byte_end":108942,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":108947,"byte_end":108954,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":109146,"byte_end":109155,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"into_json","qualname":"<Context>::into_json","value":"pub fn into_json(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the context to a `serde_json::Value` consuming the context.\n","sig":null,"attributes":[{"value":"/ Converts the context to a `serde_json::Value` consuming the context.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":109062,"byte_end":109134,"line_start":83,"line_end":83,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":109425,"byte_end":109435,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"from_value","qualname":"<Context>::from_value","value":"pub fn from_value(Value) -> TeraResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Takes a serde-json `Value` and convert it into a `Context` with no overhead/cloning.\n","sig":null,"attributes":[{"value":"/ Takes a serde-json `Value` and convert it into a `Context` with no overhead/cloning.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":109325,"byte_end":109413,"line_start":92,"line_end":92,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":110096,"byte_end":110110,"line_start":111,"line_end":111,"column_start":12,"column_end":26},"name":"from_serialize","qualname":"<Context>::from_serialize","value":"pub fn from_serialize<impl Serialize: Serialize>(impl Serialize)\n-> TeraResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Takes something that impl Serialize and create a context with it.\n Meant to be used if you have a hashmap or a struct and don't want to insert values\n one by one in the context.\n","sig":null,"attributes":[{"value":"/ Takes something that impl Serialize and create a context with it.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":109889,"byte_end":109958,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ Meant to be used if you have a hashmap or a struct and don't want to insert values","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":109963,"byte_end":110049,"line_start":109,"line_end":109,"column_start":5,"column_end":91}},{"value":"/ one by one in the context.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":110054,"byte_end":110084,"line_start":110,"line_end":110,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":110312,"byte_end":110315,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"get","qualname":"<Context>::get","value":"pub fn get(&Self, &str) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value at a given key index.\n","sig":null,"attributes":[{"value":"/ Returns the value at a given key index.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":110257,"byte_end":110300,"line_start":116,"line_end":116,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":110526,"byte_end":110532,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"remove","qualname":"<Context>::remove","value":"pub fn remove(&mut Self, &str) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key from the context, returning the value at the key if the key was previously inserted into the context.\n","sig":null,"attributes":[{"value":"/ Remove a key from the context, returning the value at the key if the key was previously inserted into the context.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":110396,"byte_end":110514,"line_start":121,"line_end":121,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":110680,"byte_end":110692,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Context>::contains_key","value":"pub fn contains_key(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a value exists at a specific index.\n","sig":null,"attributes":[{"value":"/ Checks if a value exists at a specific index.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":110619,"byte_end":110668,"line_start":126,"line_end":126,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":408},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":112988,"byte_end":113004,"line_start":211,"line_end":211,"column_start":8,"column_end":24},"name":"get_json_pointer","qualname":"::context::get_json_pointer","value":"pub fn get_json_pointer(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts a dotted path to a json pointer one\n","sig":null,"attributes":[{"value":"/ Converts a dotted path to a json pointer one","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":112922,"byte_end":112970,"line_start":209,"line_end":209,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":112971,"byte_end":112980,"line_start":210,"line_end":210,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116284,"byte_end":116287,"line_start":9,"line_end":9,"column_start":5,"column_end":8},"name":"Msg","qualname":"::errors::ErrorKind::Msg","value":"ErrorKind::Msg(String)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" Generic error\n","sig":null,"attributes":[{"value":"/ Generic error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116262,"byte_end":116279,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116365,"byte_end":116379,"line_start":11,"line_end":11,"column_start":5,"column_end":19},"name":"CircularExtend","qualname":"::errors::ErrorKind::CircularExtend","value":"ErrorKind::CircularExtend { tpl, inheritance_chain }","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" A loop was found while looking up the inheritance chain\n","sig":null,"attributes":[{"value":"/ A loop was found while looking up the inheritance chain","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116301,"byte_end":116360,"line_start":10,"line_end":10,"column_start":5,"column_end":64}}]},{"kind":"StructVariant","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116637,"byte_end":116650,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"MissingParent","qualname":"::errors::ErrorKind::MissingParent","value":"ErrorKind::MissingParent { current, parent }","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" A template is extending a template that wasn't found in the Tera instance\n","sig":null,"attributes":[{"value":"/ A template is extending a template that wasn't found in the Tera instance","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116555,"byte_end":116632,"line_start":17,"line_end":17,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116870,"byte_end":116886,"line_start":25,"line_end":25,"column_start":5,"column_end":21},"name":"TemplateNotFound","qualname":"::errors::ErrorKind::TemplateNotFound","value":"ErrorKind::TemplateNotFound(String)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" A template was missing (more generic version of MissingParent)\n","sig":null,"attributes":[{"value":"/ A template was missing (more generic version of MissingParent)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116799,"byte_end":116865,"line_start":24,"line_end":24,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116930,"byte_end":116944,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"FilterNotFound","qualname":"::errors::ErrorKind::FilterNotFound","value":"ErrorKind::FilterNotFound(String)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" A filter wasn't found\n","sig":null,"attributes":[{"value":"/ A filter wasn't found","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116900,"byte_end":116925,"line_start":26,"line_end":26,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116986,"byte_end":116998,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"TestNotFound","qualname":"::errors::ErrorKind::TestNotFound","value":"ErrorKind::TestNotFound(String)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" A test wasn't found\n","sig":null,"attributes":[{"value":"/ A test wasn't found","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116958,"byte_end":116981,"line_start":28,"line_end":28,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117068,"byte_end":117090,"line_start":31,"line_end":31,"column_start":5,"column_end":27},"name":"InvalidMacroDefinition","qualname":"::errors::ErrorKind::InvalidMacroDefinition","value":"ErrorKind::InvalidMacroDefinition(String)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" A macro was defined in the middle of a template\n","sig":null,"attributes":[{"value":"/ A macro was defined in the middle of a template","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117012,"byte_end":117063,"line_start":30,"line_end":30,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117136,"byte_end":117152,"line_start":33,"line_end":33,"column_start":5,"column_end":21},"name":"FunctionNotFound","qualname":"::errors::ErrorKind::FunctionNotFound","value":"ErrorKind::FunctionNotFound(String)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" A function wasn't found\n","sig":null,"attributes":[{"value":"/ A function wasn't found","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117104,"byte_end":117131,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117215,"byte_end":117219,"line_start":35,"line_end":35,"column_start":5,"column_end":9},"name":"Json","qualname":"::errors::ErrorKind::Json","value":"ErrorKind::Json(serde_json::Error)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" An error happened while serializing JSON\n","sig":null,"attributes":[{"value":"/ An error happened while serializing JSON","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117166,"byte_end":117210,"line_start":34,"line_end":34,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117297,"byte_end":117309,"line_start":37,"line_end":37,"column_start":5,"column_end":17},"name":"CallFunction","qualname":"::errors::ErrorKind::CallFunction","value":"ErrorKind::CallFunction(String)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" An error occured while executing a function.\n","sig":null,"attributes":[{"value":"/ An error occured while executing a function.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117244,"byte_end":117292,"line_start":36,"line_end":36,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117374,"byte_end":117384,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"CallFilter","qualname":"::errors::ErrorKind::CallFilter","value":"ErrorKind::CallFilter(String)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" An error occured while executing a filter.\n","sig":null,"attributes":[{"value":"/ An error occured while executing a filter.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117323,"byte_end":117369,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117447,"byte_end":117455,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"CallTest","qualname":"::errors::ErrorKind::CallTest","value":"ErrorKind::CallTest(String)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" An error occured while executing a test.\n","sig":null,"attributes":[{"value":"/ An error occured while executing a test.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117398,"byte_end":117442,"line_start":40,"line_end":40,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117497,"byte_end":117499,"line_start":43,"line_end":43,"column_start":5,"column_end":7},"name":"Io","qualname":"::errors::ErrorKind::Io","value":"ErrorKind::Io(std::io::ErrorKind)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" An IO error occured\n","sig":null,"attributes":[{"value":"/ An IO error occured","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117469,"byte_end":117492,"line_start":42,"line_end":42,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117633,"byte_end":117647,"line_start":47,"line_end":47,"column_start":5,"column_end":19},"name":"Utf8Conversion","qualname":"::errors::ErrorKind::Utf8Conversion","value":"ErrorKind::Utf8Conversion { context }","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" UTF-8 conversion error","sig":null,"attributes":[{"value":"/ UTF-8 conversion error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117525,"byte_end":117551,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117556,"byte_end":117559,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This should not occur unless invalid UTF8 chars are rendered","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117564,"byte_end":117628,"line_start":46,"line_end":46,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117980,"byte_end":117995,"line_start":55,"line_end":55,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::errors::ErrorKind::__Nonexhaustive","value":"ErrorKind::__Nonexhaustive","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" This enum may grow additional variants, so this makes sure clients\n don't count on exhaustive matching. (Otherwise, adding a new variant\n could break existing code.)\n","sig":null,"attributes":[{"value":"/ This enum may grow additional variants, so this makes sure clients","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117773,"byte_end":117843,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ don't count on exhaustive matching. (Otherwise, adding a new variant","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117848,"byte_end":117920,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ could break existing code.)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":117925,"byte_end":117956,"line_start":53,"line_end":53,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116246,"byte_end":116255,"line_start":7,"line_end":7,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::errors::ErrorKind","value":"pub enum ErrorKind {\n    Msg(String),\n    CircularExtend {\n        tpl: String,\n        inheritance_chain: Vec<String>,\n    },\n    MissingParent {\n        current: String,\n        parent: String,\n    },\n    TemplateNotFound(String),\n    FilterNotFound(String),\n    TestNotFound(String),\n    InvalidMacroDefinition(String),\n    FunctionNotFound(String),\n    Json(serde_json::Error),\n    CallFunction(String),\n    CallFilter(String),\n    CallTest(String),\n    Io(std::io::ErrorKind),\n    Utf8Conversion {\n        context: String,\n    },\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1338}],"decl_id":null,"docs":" The kind of an error (non-exhaustive)\n","sig":null,"attributes":[{"value":"/ The kind of an error (non-exhaustive)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":116178,"byte_end":116219,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":118047,"byte_end":118052,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"Error","qualname":"::errors::Error","value":"Error { kind }","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344}],"decl_id":null,"docs":" The Error type\n","sig":null,"attributes":[{"value":"/ The Error type","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":118000,"byte_end":118018,"line_start":58,"line_end":58,"column_start":1,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":118085,"byte_end":118089,"line_start":62,"line_end":62,"column_start":9,"column_end":13},"name":"kind","qualname":"::errors::Error::kind","value":"errors::ErrorKind","parent":{"krate":0,"index":1342},"children":[],"decl_id":null,"docs":" Kind of error\n","sig":null,"attributes":[{"value":"/ Kind of error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":118059,"byte_end":118076,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":120306,"byte_end":120309,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"pub fn msg<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates generic error\n","sig":null,"attributes":[{"value":"/ Creates generic error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":120269,"byte_end":120294,"line_start":109,"line_end":109,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":120471,"byte_end":120486,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"name":"circular_extend","qualname":"<Error>::circular_extend","value":"pub fn circular_extend<impl ToString: ToString>(impl ToString, Vec<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a circular extend error\n","sig":null,"attributes":[{"value":"/ Creates a circular extend error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":120424,"byte_end":120459,"line_start":114,"line_end":114,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":120746,"byte_end":120760,"line_start":123,"line_end":123,"column_start":12,"column_end":26},"name":"missing_parent","qualname":"<Error>::missing_parent","value":"pub fn missing_parent<impl ToString: ToString,\n                      impl ToString: ToString>(impl ToString, impl ToString)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a missing parent error\n","sig":null,"attributes":[{"value":"/ Creates a missing parent error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":120700,"byte_end":120734,"line_start":122,"line_end":122,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":121080,"byte_end":121098,"line_start":134,"line_end":134,"column_start":12,"column_end":30},"name":"template_not_found","qualname":"<Error>::template_not_found","value":"pub fn template_not_found<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a template not found error\n","sig":null,"attributes":[{"value":"/ Creates a template not found error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":121030,"byte_end":121068,"line_start":133,"line_end":133,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":121270,"byte_end":121286,"line_start":139,"line_end":139,"column_start":12,"column_end":28},"name":"filter_not_found","qualname":"<Error>::filter_not_found","value":"pub fn filter_not_found<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a filter not found error\n","sig":null,"attributes":[{"value":"/ Creates a filter not found error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":121222,"byte_end":121258,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":121456,"byte_end":121470,"line_start":144,"line_end":144,"column_start":12,"column_end":26},"name":"test_not_found","qualname":"<Error>::test_not_found","value":"pub fn test_not_found<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a test not found error\n","sig":null,"attributes":[{"value":"/ Creates a test not found error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":121410,"byte_end":121444,"line_start":143,"line_end":143,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":121642,"byte_end":121660,"line_start":149,"line_end":149,"column_start":12,"column_end":30},"name":"function_not_found","qualname":"<Error>::function_not_found","value":"pub fn function_not_found<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a function not found error\n","sig":null,"attributes":[{"value":"/ Creates a function not found error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":121592,"byte_end":121630,"line_start":148,"line_end":148,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":121837,"byte_end":121842,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"chain","qualname":"<Error>::chain","value":"pub fn chain<impl ToString: ToString,\n             impl Into<Box<dyn StdError + Send + Sync>>: Into<Box<dyn\n                                                                  StdError +\n                                                                  Send +\n                                                                  Sync>>>(impl ToString,\n                                                                          impl Into<Box<dyn StdError + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates generic error with a source\n","sig":null,"attributes":[{"value":"/ Creates generic error with a source","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":121786,"byte_end":121825,"line_start":153,"line_end":153,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":122089,"byte_end":122102,"line_start":159,"line_end":159,"column_start":12,"column_end":25},"name":"call_function","qualname":"<Error>::call_function","value":"pub fn call_function<impl ToString: ToString,\n                     impl Into<Box<dyn StdError + Send + Sync>>: Into<Box<dyn\n                                                                          StdError +\n                                                                          Send +\n                                                                          Sync>>>(impl ToString,\n                                                                                  impl Into<Box<dyn StdError + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an error wrapping a failed function call.\n","sig":null,"attributes":[{"value":"/ Creates an error wrapping a failed function call.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":122024,"byte_end":122077,"line_start":158,"line_end":158,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":122377,"byte_end":122388,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"call_filter","qualname":"<Error>::call_filter","value":"pub fn call_filter<impl ToString: ToString,\n                   impl Into<Box<dyn StdError + Send + Sync>>: Into<Box<dyn\n                                                                        StdError +\n                                                                        Send +\n                                                                        Sync>>>(impl ToString,\n                                                                                impl Into<Box<dyn StdError + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an error wrapping a failed filter call.\n","sig":null,"attributes":[{"value":"/ Creates an error wrapping a failed filter call.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":122314,"byte_end":122365,"line_start":166,"line_end":166,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":122659,"byte_end":122668,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"call_test","qualname":"<Error>::call_test","value":"pub fn call_test<impl ToString: ToString,\n                 impl Into<Box<dyn StdError + Send + Sync>>: Into<Box<dyn\n                                                                      StdError +\n                                                                      Send +\n                                                                      Sync>>>(impl ToString,\n                                                                              impl Into<Box<dyn StdError + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an error wrapping a failed test call.\n","sig":null,"attributes":[{"value":"/ Creates an error wrapping a failed test call.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":122598,"byte_end":122647,"line_start":174,"line_end":174,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":122910,"byte_end":122914,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"json","qualname":"<Error>::json","value":"pub fn json(serde_json::Error) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates JSON error\n","sig":null,"attributes":[{"value":"/ Creates JSON error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":122876,"byte_end":122898,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123079,"byte_end":123096,"line_start":188,"line_end":188,"column_start":12,"column_end":29},"name":"invalid_macro_def","qualname":"<Error>::invalid_macro_def","value":"pub fn invalid_macro_def<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an invalid macro definition error\n","sig":null,"attributes":[{"value":"/ Creates an invalid macro definition error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123022,"byte_end":123067,"line_start":187,"line_end":187,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123263,"byte_end":123271,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"io_error","qualname":"<Error>::io_error","value":"pub fn io_error(std::io::Error) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an IO error\n","sig":null,"attributes":[{"value":"/ Creates an IO error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123228,"byte_end":123251,"line_start":192,"line_end":192,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123446,"byte_end":123467,"line_start":198,"line_end":198,"column_start":12,"column_end":33},"name":"utf8_conversion_error","qualname":"<Error>::utf8_conversion_error","value":"pub fn utf8_conversion_error(std::string::FromUtf8Error, String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an utf8 conversion error\n","sig":null,"attributes":[{"value":"/ Creates an utf8 conversion error","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123398,"byte_end":123434,"line_start":197,"line_end":197,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":466},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":124099,"byte_end":124105,"line_start":224,"line_end":224,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convenient wrapper around std::Result.\n","sig":null,"attributes":[{"value":"/ Convenient wrapper around std::Result.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":124047,"byte_end":124089,"line_start":223,"line_end":223,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":573},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ast","qualname":"::parser::ast","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":2796},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":580},{"krate":0,"index":2808},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":582},{"krate":0,"index":2827},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":584},{"krate":0,"index":2852},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2863},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2875},{"krate":0,"index":2879},{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":586},{"krate":0,"index":2897},{"krate":0,"index":2901},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2909},{"krate":0,"index":2949},{"krate":0,"index":2951},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2957},{"krate":0,"index":2961},{"krate":0,"index":2963},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":588},{"krate":0,"index":2969},{"krate":0,"index":2974},{"krate":0,"index":2976},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2982},{"krate":0,"index":2985},{"krate":0,"index":2987},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2993},{"krate":0,"index":2997},{"krate":0,"index":2999},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3005},{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3021},{"krate":0,"index":3023},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3034},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3046},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3054},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3065},{"krate":0,"index":3132},{"krate":0,"index":3134},{"krate":0,"index":3136},{"krate":0,"index":3137}],"decl_id":null,"docs":" The AST of Tera\n","sig":null,"attributes":[{"value":"/ The AST of Tera","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/mod.rs","byte_start":129783,"byte_end":129802,"line_start":19,"line_end":19,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2796},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176619,"byte_end":176621,"line_start":6,"line_end":6,"column_start":12,"column_end":14},"name":"WS","qualname":"::parser::ast::WS","value":"WS { left, right }","parent":null,"children":[{"krate":0,"index":2797},{"krate":0,"index":2798}],"decl_id":null,"docs":" Whether to remove the whitespace of a `{% %}` tag\n","sig":null,"attributes":[{"value":"/ Whether to remove the whitespace of a `{% %}` tag","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176513,"byte_end":176566,"line_start":4,"line_end":4,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2797},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176667,"byte_end":176671,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"left","qualname":"::parser::ast::WS::left","value":"bool","parent":{"krate":0,"index":2796},"children":[],"decl_id":null,"docs":" `true` if the tag is `{%-`\n","sig":null,"attributes":[{"value":"/ `true` if the tag is `{%-`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176628,"byte_end":176658,"line_start":7,"line_end":7,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176722,"byte_end":176727,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"right","qualname":"::parser::ast::WS::right","value":"bool","parent":{"krate":0,"index":2796},"children":[],"decl_id":null,"docs":" `true` if the tag is `-%}`\n","sig":null,"attributes":[{"value":"/ `true` if the tag is `-%}`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176683,"byte_end":176713,"line_start":9,"line_end":9,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2809},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176939,"byte_end":176942,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"Add","qualname":"::parser::ast::MathOperator::Add","value":"MathOperator::Add","parent":{"krate":0,"index":2808},"children":[],"decl_id":null,"docs":" +\n","sig":null,"attributes":[{"value":"/ +","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176929,"byte_end":176934,"line_start":22,"line_end":22,"column_start":5,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2811},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176958,"byte_end":176961,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Sub","qualname":"::parser::ast::MathOperator::Sub","value":"MathOperator::Sub","parent":{"krate":0,"index":2808},"children":[],"decl_id":null,"docs":" -\n","sig":null,"attributes":[{"value":"/ -","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176948,"byte_end":176953,"line_start":24,"line_end":24,"column_start":5,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2813},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176977,"byte_end":176980,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"Mul","qualname":"::parser::ast::MathOperator::Mul","value":"MathOperator::Mul","parent":{"krate":0,"index":2808},"children":[],"decl_id":null,"docs":" *\n","sig":null,"attributes":[{"value":"/ *","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176967,"byte_end":176972,"line_start":26,"line_end":26,"column_start":5,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2815},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176996,"byte_end":176999,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"name":"Div","qualname":"::parser::ast::MathOperator::Div","value":"MathOperator::Div","parent":{"krate":0,"index":2808},"children":[],"decl_id":null,"docs":" /\n","sig":null,"attributes":[{"value":"/ /","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176986,"byte_end":176991,"line_start":28,"line_end":28,"column_start":5,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2817},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177015,"byte_end":177021,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Modulo","qualname":"::parser::ast::MathOperator::Modulo","value":"MathOperator::Modulo","parent":{"krate":0,"index":2808},"children":[],"decl_id":null,"docs":" %\n","sig":null,"attributes":[{"value":"/ %","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177005,"byte_end":177010,"line_start":30,"line_end":30,"column_start":5,"column_end":10}}]},{"kind":"Enum","id":{"krate":0,"index":2808},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176910,"byte_end":176922,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"MathOperator","qualname":"::parser::ast::MathOperator","value":"pub enum MathOperator { Add, Sub, Mul, Div, Modulo, }","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2817}],"decl_id":null,"docs":" All math operators\n","sig":null,"attributes":[{"value":"/ All math operators","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176837,"byte_end":176859,"line_start":19,"line_end":19,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2828},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177547,"byte_end":177549,"line_start":54,"line_end":54,"column_start":5,"column_end":7},"name":"Gt","qualname":"::parser::ast::LogicOperator::Gt","value":"LogicOperator::Gt","parent":{"krate":0,"index":2827},"children":[],"decl_id":null,"docs":" >\n","sig":null,"attributes":[{"value":"/ >","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177537,"byte_end":177542,"line_start":53,"line_end":53,"column_start":5,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2830},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177566,"byte_end":177569,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"Gte","qualname":"::parser::ast::LogicOperator::Gte","value":"LogicOperator::Gte","parent":{"krate":0,"index":2827},"children":[],"decl_id":null,"docs":" >=\n","sig":null,"attributes":[{"value":"/ >=","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177555,"byte_end":177561,"line_start":55,"line_end":55,"column_start":5,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2832},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177585,"byte_end":177587,"line_start":58,"line_end":58,"column_start":5,"column_end":7},"name":"Lt","qualname":"::parser::ast::LogicOperator::Lt","value":"LogicOperator::Lt","parent":{"krate":0,"index":2827},"children":[],"decl_id":null,"docs":" <\n","sig":null,"attributes":[{"value":"/ <","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177575,"byte_end":177580,"line_start":57,"line_end":57,"column_start":5,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2834},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177604,"byte_end":177607,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"Lte","qualname":"::parser::ast::LogicOperator::Lte","value":"LogicOperator::Lte","parent":{"krate":0,"index":2827},"children":[],"decl_id":null,"docs":" <=\n","sig":null,"attributes":[{"value":"/ <=","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177593,"byte_end":177599,"line_start":59,"line_end":59,"column_start":5,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2836},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177624,"byte_end":177626,"line_start":62,"line_end":62,"column_start":5,"column_end":7},"name":"Eq","qualname":"::parser::ast::LogicOperator::Eq","value":"LogicOperator::Eq","parent":{"krate":0,"index":2827},"children":[],"decl_id":null,"docs":" ==\n","sig":null,"attributes":[{"value":"/ ==","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177613,"byte_end":177619,"line_start":61,"line_end":61,"column_start":5,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2838},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177643,"byte_end":177648,"line_start":64,"line_end":64,"column_start":5,"column_end":10},"name":"NotEq","qualname":"::parser::ast::LogicOperator::NotEq","value":"LogicOperator::NotEq","parent":{"krate":0,"index":2827},"children":[],"decl_id":null,"docs":" !=\n","sig":null,"attributes":[{"value":"/ !=","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177632,"byte_end":177638,"line_start":63,"line_end":63,"column_start":5,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2840},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177666,"byte_end":177669,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"name":"And","qualname":"::parser::ast::LogicOperator::And","value":"LogicOperator::And","parent":{"krate":0,"index":2827},"children":[],"decl_id":null,"docs":" and\n","sig":null,"attributes":[{"value":"/ and","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177654,"byte_end":177661,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2842},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177686,"byte_end":177688,"line_start":68,"line_end":68,"column_start":5,"column_end":7},"name":"Or","qualname":"::parser::ast::LogicOperator::Or","value":"LogicOperator::Or","parent":{"krate":0,"index":2827},"children":[],"decl_id":null,"docs":" or\n","sig":null,"attributes":[{"value":"/ or","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177675,"byte_end":177681,"line_start":67,"line_end":67,"column_start":5,"column_end":11}}]},{"kind":"Enum","id":{"krate":0,"index":2827},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177517,"byte_end":177530,"line_start":52,"line_end":52,"column_start":10,"column_end":23},"name":"LogicOperator","qualname":"::parser::ast::LogicOperator","value":"pub enum LogicOperator { Gt, Gte, Lt, Lte, Eq, NotEq, And, Or, }","parent":null,"children":[{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2842}],"decl_id":null,"docs":" All logic operators\n","sig":null,"attributes":[{"value":"/ All logic operators","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177443,"byte_end":177466,"line_start":50,"line_end":50,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178351,"byte_end":178363,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"FunctionCall","qualname":"::parser::ast::FunctionCall","value":"FunctionCall { name, args }","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854}],"decl_id":null,"docs":" A function call, can be a filter or a global function\n","sig":null,"attributes":[{"value":"/ A function call, can be a filter or a global function","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178247,"byte_end":178304,"line_start":90,"line_end":90,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2853},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178407,"byte_end":178411,"line_start":94,"line_end":94,"column_start":9,"column_end":13},"name":"name","qualname":"::parser::ast::FunctionCall::name","value":"std::string::String","parent":{"krate":0,"index":2852},"children":[],"decl_id":null,"docs":" The name of the function\n","sig":null,"attributes":[{"value":"/ The name of the function","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178370,"byte_end":178398,"line_start":93,"line_end":93,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2854},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178476,"byte_end":178480,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::ast::FunctionCall::args","value":"std::collections::HashMap<std::string::String, parser::ast::Expr>","parent":{"krate":0,"index":2852},"children":[],"decl_id":null,"docs":" The args of the function: key -> value\n","sig":null,"attributes":[{"value":"/ The args of the function: key -> value","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178425,"byte_end":178467,"line_start":95,"line_end":95,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178584,"byte_end":178592,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"MathExpr","qualname":"::parser::ast::MathExpr","value":"MathExpr { lhs, rhs, operator }","parent":null,"children":[{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866}],"decl_id":null,"docs":" A mathematical expression\n","sig":null,"attributes":[{"value":"/ A mathematical expression","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178508,"byte_end":178537,"line_start":99,"line_end":99,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178648,"byte_end":178651,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"name":"lhs","qualname":"::parser::ast::MathExpr::lhs","value":"std::boxed::Box<parser::ast::Expr>","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":" The left hand side of the expression\n","sig":null,"attributes":[{"value":"/ The left hand side of the expression","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178599,"byte_end":178639,"line_start":102,"line_end":102,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178718,"byte_end":178721,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"name":"rhs","qualname":"::parser::ast::MathExpr::rhs","value":"std::boxed::Box<parser::ast::Expr>","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":" The right hand side of the expression\n","sig":null,"attributes":[{"value":"/ The right hand side of the expression","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178668,"byte_end":178709,"line_start":104,"line_end":104,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2866},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178768,"byte_end":178776,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"name":"operator","qualname":"::parser::ast::MathExpr::operator","value":"parser::ast::MathOperator","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":" The operator used\n","sig":null,"attributes":[{"value":"/ The operator used","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178738,"byte_end":178759,"line_start":106,"line_end":106,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2875},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178866,"byte_end":178875,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"LogicExpr","qualname":"::parser::ast::LogicExpr","value":"LogicExpr { lhs, rhs, operator }","parent":null,"children":[{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878}],"decl_id":null,"docs":" A logical expression\n","sig":null,"attributes":[{"value":"/ A logical expression","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178795,"byte_end":178819,"line_start":110,"line_end":110,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2876},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178931,"byte_end":178934,"line_start":114,"line_end":114,"column_start":9,"column_end":12},"name":"lhs","qualname":"::parser::ast::LogicExpr::lhs","value":"std::boxed::Box<parser::ast::Expr>","parent":{"krate":0,"index":2875},"children":[],"decl_id":null,"docs":" The left hand side of the expression\n","sig":null,"attributes":[{"value":"/ The left hand side of the expression","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178882,"byte_end":178922,"line_start":113,"line_end":113,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2877},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179001,"byte_end":179004,"line_start":116,"line_end":116,"column_start":9,"column_end":12},"name":"rhs","qualname":"::parser::ast::LogicExpr::rhs","value":"std::boxed::Box<parser::ast::Expr>","parent":{"krate":0,"index":2875},"children":[],"decl_id":null,"docs":" The right hand side of the expression\n","sig":null,"attributes":[{"value":"/ The right hand side of the expression","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":178951,"byte_end":178992,"line_start":115,"line_end":115,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2878},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179051,"byte_end":179059,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"operator","qualname":"::parser::ast::LogicExpr::operator","value":"parser::ast::LogicOperator","parent":{"krate":0,"index":2875},"children":[],"decl_id":null,"docs":" The operator used\n","sig":null,"attributes":[{"value":"/ The operator used","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179021,"byte_end":179042,"line_start":117,"line_end":117,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2887},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179190,"byte_end":179202,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"StringConcat","qualname":"::parser::ast::StringConcat","value":"StringConcat { values }","parent":null,"children":[{"krate":0,"index":2888}],"decl_id":null,"docs":" Can only be a combination of string + ident or ident + ident\n","sig":null,"attributes":[{"value":"/ Can only be a combination of string + ident or ident + ident","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179079,"byte_end":179143,"line_start":121,"line_end":121,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2888},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179268,"byte_end":179274,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"name":"values","qualname":"::parser::ast::StringConcat::values","value":"std::vec::Vec<parser::ast::ExprVal>","parent":{"krate":0,"index":2887},"children":[],"decl_id":null,"docs":" All the values we're concatening into a string\n","sig":null,"attributes":[{"value":"/ All the values we're concatening into a string","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179209,"byte_end":179259,"line_start":124,"line_end":124,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2897},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179840,"byte_end":179842,"line_start":145,"line_end":145,"column_start":12,"column_end":14},"name":"In","qualname":"::parser::ast::In","value":"In { lhs, rhs, negated }","parent":null,"children":[{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900}],"decl_id":null,"docs":" Something that checks whether the left side is contained in the right side\n","sig":null,"attributes":[{"value":"/ Something that checks whether the left side is contained in the right side","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179715,"byte_end":179793,"line_start":143,"line_end":143,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2898},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179912,"byte_end":179915,"line_start":147,"line_end":147,"column_start":9,"column_end":12},"name":"lhs","qualname":"::parser::ast::In::lhs","value":"std::boxed::Box<parser::ast::Expr>","parent":{"krate":0,"index":2897},"children":[],"decl_id":null,"docs":" The needle, a string or a basic expression/literal\n","sig":null,"attributes":[{"value":"/ The needle, a string or a basic expression/literal","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179849,"byte_end":179903,"line_start":146,"line_end":146,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2899},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180011,"byte_end":180014,"line_start":149,"line_end":149,"column_start":9,"column_end":12},"name":"rhs","qualname":"::parser::ast::In::rhs","value":"std::boxed::Box<parser::ast::Expr>","parent":{"krate":0,"index":2897},"children":[],"decl_id":null,"docs":" The haystack, can be a string, an array or an ident only currently\n","sig":null,"attributes":[{"value":"/ The haystack, can be a string, an array or an ident only currently","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179932,"byte_end":180002,"line_start":148,"line_end":148,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2900},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180085,"byte_end":180092,"line_start":151,"line_end":151,"column_start":9,"column_end":16},"name":"negated","qualname":"::parser::ast::In::negated","value":"bool","parent":{"krate":0,"index":2897},"children":[],"decl_id":null,"docs":" Is it using `not` as in `b` not in `...`?\n","sig":null,"attributes":[{"value":"/ Is it using `not` as in `b` not in `...`?","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180031,"byte_end":180076,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2910},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180262,"byte_end":180268,"line_start":158,"line_end":158,"column_start":5,"column_end":11},"name":"String","qualname":"::parser::ast::ExprVal::String","value":"ExprVal::String(String)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180282,"byte_end":180285,"line_start":159,"line_end":159,"column_start":5,"column_end":8},"name":"Int","qualname":"::parser::ast::ExprVal::Int","value":"ExprVal::Int(i64)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180296,"byte_end":180301,"line_start":160,"line_end":160,"column_start":5,"column_end":10},"name":"Float","qualname":"::parser::ast::ExprVal::Float","value":"ExprVal::Float(f64)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2919},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180312,"byte_end":180316,"line_start":161,"line_end":161,"column_start":5,"column_end":9},"name":"Bool","qualname":"::parser::ast::ExprVal::Bool","value":"ExprVal::Bool(bool)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2922},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180328,"byte_end":180333,"line_start":162,"line_end":162,"column_start":5,"column_end":10},"name":"Ident","qualname":"::parser::ast::ExprVal::Ident","value":"ExprVal::Ident(String)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180347,"byte_end":180351,"line_start":163,"line_end":163,"column_start":5,"column_end":9},"name":"Math","qualname":"::parser::ast::ExprVal::Math","value":"ExprVal::Math(MathExpr)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2928},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180367,"byte_end":180372,"line_start":164,"line_end":164,"column_start":5,"column_end":10},"name":"Logic","qualname":"::parser::ast::ExprVal::Logic","value":"ExprVal::Logic(LogicExpr)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180389,"byte_end":180393,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"Test","qualname":"::parser::ast::ExprVal::Test","value":"ExprVal::Test(Test)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2934},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180405,"byte_end":180414,"line_start":166,"line_end":166,"column_start":5,"column_end":14},"name":"MacroCall","qualname":"::parser::ast::ExprVal::MacroCall","value":"ExprVal::MacroCall(MacroCall)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180431,"byte_end":180443,"line_start":167,"line_end":167,"column_start":5,"column_end":17},"name":"FunctionCall","qualname":"::parser::ast::ExprVal::FunctionCall","value":"ExprVal::FunctionCall(FunctionCall)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2940},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180554,"byte_end":180559,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Array","qualname":"::parser::ast::ExprVal::Array","value":"ExprVal::Array(Vec<Expr>)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180576,"byte_end":180588,"line_start":171,"line_end":171,"column_start":5,"column_end":17},"name":"StringConcat","qualname":"::parser::ast::ExprVal::StringConcat","value":"ExprVal::StringConcat(StringConcat)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2946},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180608,"byte_end":180610,"line_start":172,"line_end":172,"column_start":5,"column_end":7},"name":"In","qualname":"::parser::ast::ExprVal::In","value":"ExprVal::In(In)","parent":{"krate":0,"index":2909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2909},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180248,"byte_end":180255,"line_start":157,"line_end":157,"column_start":10,"column_end":17},"name":"ExprVal","qualname":"::parser::ast::ExprVal","value":"pub enum ExprVal {\n    String(String),\n    Int(i64),\n    Float(f64),\n    Bool(bool),\n    Ident(String),\n    Math(MathExpr),\n    Logic(LogicExpr),\n    Test(Test),\n    MacroCall(MacroCall),\n    FunctionCall(FunctionCall),\n    Array(Vec<Expr>),\n    StringConcat(StringConcat),\n    In(In),\n}","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2913},{"krate":0,"index":2916},{"krate":0,"index":2919},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2943},{"krate":0,"index":2946}],"decl_id":null,"docs":" An expression is the node found in variable block, kwargs and conditions.\n","sig":null,"attributes":[{"value":"/ An expression is the node found in variable block, kwargs and conditions.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180103,"byte_end":180180,"line_start":154,"line_end":154,"column_start":1,"column_end":78}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180216,"byte_end":180238,"line_start":156,"line_end":156,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2957},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180751,"byte_end":180755,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"Expr","qualname":"::parser::ast::Expr","value":"Expr { val, negated, filters }","parent":null,"children":[{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960}],"decl_id":null,"docs":" An expression is a value that can be negated and followed by\n optional filters\n","sig":null,"attributes":[{"value":"/ An expression is a value that can be negated and followed by","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180619,"byte_end":180683,"line_start":175,"line_end":175,"column_start":1,"column_end":65}},{"value":"/ optional filters","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180684,"byte_end":180704,"line_start":176,"line_end":176,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180807,"byte_end":180810,"line_start":180,"line_end":180,"column_start":9,"column_end":12},"name":"val","qualname":"::parser::ast::Expr::val","value":"parser::ast::ExprVal","parent":{"krate":0,"index":2957},"children":[],"decl_id":null,"docs":" The expression we are evaluating\n","sig":null,"attributes":[{"value":"/ The expression we are evaluating","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180762,"byte_end":180798,"line_start":179,"line_end":179,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2959},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180856,"byte_end":180863,"line_start":182,"line_end":182,"column_start":9,"column_end":16},"name":"negated","qualname":"::parser::ast::Expr::negated","value":"bool","parent":{"krate":0,"index":2957},"children":[],"decl_id":null,"docs":" Is it using `not`?\n","sig":null,"attributes":[{"value":"/ Is it using `not`?","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180825,"byte_end":180847,"line_start":181,"line_end":181,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2960},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180922,"byte_end":180929,"line_start":184,"line_end":184,"column_start":9,"column_end":16},"name":"filters","qualname":"::parser::ast::Expr::filters","value":"std::vec::Vec<parser::ast::FunctionCall>","parent":{"krate":0,"index":2957},"children":[],"decl_id":null,"docs":" List of filters used on that value\n","sig":null,"attributes":[{"value":"/ List of filters used on that value","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180875,"byte_end":180913,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181008,"byte_end":181011,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"new","qualname":"<Expr>::new","value":"pub fn new(ExprVal) -> Expr","parent":null,"children":[],"decl_id":null,"docs":" Create a new basic Expr\n","sig":null,"attributes":[{"value":"/ Create a new basic Expr","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180969,"byte_end":180996,"line_start":188,"line_end":188,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181142,"byte_end":181153,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"new_negated","qualname":"<Expr>::new_negated","value":"pub fn new_negated(ExprVal) -> Expr","parent":null,"children":[],"decl_id":null,"docs":" Create a new negated Expr\n","sig":null,"attributes":[{"value":"/ Create a new negated Expr","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181101,"byte_end":181130,"line_start":193,"line_end":193,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181299,"byte_end":181311,"line_start":199,"line_end":199,"column_start":12,"column_end":24},"name":"with_filters","qualname":"<Expr>::with_filters","value":"pub fn with_filters(ExprVal, Vec<FunctionCall>) -> Expr","parent":null,"children":[],"decl_id":null,"docs":" Create a new basic Expr with some filters\n","sig":null,"attributes":[{"value":"/ Create a new basic Expr with some filters","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181242,"byte_end":181287,"line_start":198,"line_end":198,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181491,"byte_end":181509,"line_start":204,"line_end":204,"column_start":12,"column_end":30},"name":"has_default_filter","qualname":"<Expr>::has_default_filter","value":"pub fn has_default_filter(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the expr has a default filter as first filter\n","sig":null,"attributes":[{"value":"/ Check if the expr has a default filter as first filter","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181421,"byte_end":181479,"line_start":203,"line_end":203,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181704,"byte_end":181718,"line_start":213,"line_end":213,"column_start":12,"column_end":26},"name":"is_marked_safe","qualname":"<Expr>::is_marked_safe","value":"pub fn is_marked_safe(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the last filter is `safe`\n","sig":null,"attributes":[{"value":"/ Check if the last filter is `safe`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181654,"byte_end":181692,"line_start":212,"line_end":212,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2969},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181960,"byte_end":181964,"line_start":224,"line_end":224,"column_start":12,"column_end":16},"name":"Test","qualname":"::parser::ast::Test","value":"Test { ident, negated, name, args }","parent":null,"children":[{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973}],"decl_id":null,"docs":" A test node `if my_var is odd`\n","sig":null,"attributes":[{"value":"/ A test node `if my_var is odd`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181879,"byte_end":181913,"line_start":222,"line_end":222,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2970},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182011,"byte_end":182016,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"name":"ident","qualname":"::parser::ast::Test::ident","value":"std::string::String","parent":{"krate":0,"index":2969},"children":[],"decl_id":null,"docs":" Which variable is evaluated\n","sig":null,"attributes":[{"value":"/ Which variable is evaluated","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":181971,"byte_end":182002,"line_start":225,"line_end":225,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2971},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182061,"byte_end":182068,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"name":"negated","qualname":"::parser::ast::Test::negated","value":"bool","parent":{"krate":0,"index":2969},"children":[],"decl_id":null,"docs":" Is it using `not`?\n","sig":null,"attributes":[{"value":"/ Is it using `not`?","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182030,"byte_end":182052,"line_start":227,"line_end":227,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2972},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182109,"byte_end":182113,"line_start":230,"line_end":230,"column_start":9,"column_end":13},"name":"name","qualname":"::parser::ast::Test::name","value":"std::string::String","parent":{"krate":0,"index":2969},"children":[],"decl_id":null,"docs":" Name of the test\n","sig":null,"attributes":[{"value":"/ Name of the test","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182080,"byte_end":182100,"line_start":229,"line_end":229,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2973},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182174,"byte_end":182178,"line_start":232,"line_end":232,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::ast::Test::args","value":"std::vec::Vec<parser::ast::Expr>","parent":{"krate":0,"index":2969},"children":[],"decl_id":null,"docs":" Any optional arg given to the test\n","sig":null,"attributes":[{"value":"/ Any optional arg given to the test","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182127,"byte_end":182165,"line_start":231,"line_end":231,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2982},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182325,"byte_end":182338,"line_start":237,"line_end":237,"column_start":12,"column_end":25},"name":"FilterSection","qualname":"::parser::ast::FilterSection","value":"FilterSection { filter, body }","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984}],"decl_id":null,"docs":" A filter section node `{{ filter name(param=\"value\") }} content {{ endfilter }}`\n","sig":null,"attributes":[{"value":"/ A filter section node `{{ filter name(param=\"value\") }} content {{ endfilter }}`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182194,"byte_end":182278,"line_start":235,"line_end":235,"column_start":1,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":2983},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182379,"byte_end":182385,"line_start":239,"line_end":239,"column_start":9,"column_end":15},"name":"filter","qualname":"::parser::ast::FilterSection::filter","value":"parser::ast::FunctionCall","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" The filter call itsel\n","sig":null,"attributes":[{"value":"/ The filter call itsel","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182345,"byte_end":182370,"line_start":238,"line_end":238,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182433,"byte_end":182437,"line_start":241,"line_end":241,"column_start":9,"column_end":13},"name":"body","qualname":"::parser::ast::FilterSection::body","value":"std::vec::Vec<parser::ast::Node>","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" The filter body\n","sig":null,"attributes":[{"value":"/ The filter body","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182405,"byte_end":182424,"line_start":240,"line_end":240,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182557,"byte_end":182560,"line_start":246,"line_end":246,"column_start":12,"column_end":15},"name":"Set","qualname":"::parser::ast::Set","value":"Set { key, value, global }","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996}],"decl_id":null,"docs":" Set a variable in the context `{% set val = \"hey\" %}`\n","sig":null,"attributes":[{"value":"/ Set a variable in the context `{% set val = \"hey\" %}`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182453,"byte_end":182510,"line_start":244,"line_end":244,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2994},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182618,"byte_end":182621,"line_start":248,"line_end":248,"column_start":9,"column_end":12},"name":"key","qualname":"::parser::ast::Set::key","value":"std::string::String","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":" The name for that value in the context\n","sig":null,"attributes":[{"value":"/ The name for that value in the context","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182567,"byte_end":182609,"line_start":247,"line_end":247,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2995},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182667,"byte_end":182672,"line_start":250,"line_end":250,"column_start":9,"column_end":14},"name":"value","qualname":"::parser::ast::Set::value","value":"parser::ast::Expr","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":" The value to assign\n","sig":null,"attributes":[{"value":"/ The value to assign","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182635,"byte_end":182658,"line_start":249,"line_end":249,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2996},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182795,"byte_end":182801,"line_start":253,"line_end":253,"column_start":9,"column_end":15},"name":"global","qualname":"::parser::ast::Set::global","value":"bool","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":" Whether we want to set the variable globally or locally\n global_set is only useful in loops\n","sig":null,"attributes":[{"value":"/ Whether we want to set the variable globally or locally","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182684,"byte_end":182743,"line_start":251,"line_end":251,"column_start":5,"column_end":64}},{"value":"/ global_set is only useful in loops","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182748,"byte_end":182786,"line_start":252,"line_end":252,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182912,"byte_end":182921,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"MacroCall","qualname":"::parser::ast::MacroCall","value":"MacroCall { namespace, name, args }","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008}],"decl_id":null,"docs":" A call to a namespaced macro `macros::my_macro()`\n","sig":null,"attributes":[{"value":"/ A call to a namespaced macro `macros::my_macro()`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182812,"byte_end":182865,"line_start":256,"line_end":256,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3006},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182986,"byte_end":182995,"line_start":260,"line_end":260,"column_start":9,"column_end":18},"name":"namespace","qualname":"::parser::ast::MacroCall::namespace","value":"std::string::String","parent":{"krate":0,"index":3005},"children":[],"decl_id":null,"docs":" The namespace we're looking for that macro in\n","sig":null,"attributes":[{"value":"/ The namespace we're looking for that macro in","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":182928,"byte_end":182977,"line_start":259,"line_end":259,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183036,"byte_end":183040,"line_start":262,"line_end":262,"column_start":9,"column_end":13},"name":"name","qualname":"::parser::ast::MacroCall::name","value":"std::string::String","parent":{"krate":0,"index":3005},"children":[],"decl_id":null,"docs":" The macro name\n","sig":null,"attributes":[{"value":"/ The macro name","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183009,"byte_end":183027,"line_start":261,"line_end":261,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3008},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183105,"byte_end":183109,"line_start":264,"line_end":264,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::ast::MacroCall::args","value":"std::collections::HashMap<std::string::String, parser::ast::Expr>","parent":{"krate":0,"index":3005},"children":[],"decl_id":null,"docs":" The args for that macro: name -> value\n","sig":null,"attributes":[{"value":"/ The args for that macro: name -> value","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183054,"byte_end":183096,"line_start":263,"line_end":263,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183206,"byte_end":183221,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"MacroDefinition","qualname":"::parser::ast::MacroDefinition","value":"MacroDefinition { name, args, body }","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020}],"decl_id":null,"docs":" A Macro definition\n","sig":null,"attributes":[{"value":"/ A Macro definition","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183137,"byte_end":183159,"line_start":267,"line_end":267,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3018},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183255,"byte_end":183259,"line_start":271,"line_end":271,"column_start":9,"column_end":13},"name":"name","qualname":"::parser::ast::MacroDefinition::name","value":"std::string::String","parent":{"krate":0,"index":3017},"children":[],"decl_id":null,"docs":" The macro name\n","sig":null,"attributes":[{"value":"/ The macro name","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183228,"byte_end":183246,"line_start":270,"line_end":270,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183341,"byte_end":183345,"line_start":273,"line_end":273,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::ast::MacroDefinition::args","value":"std::collections::HashMap<std::string::String, std::option::Option<parser::ast::Expr>>","parent":{"krate":0,"index":3017},"children":[],"decl_id":null,"docs":" The args for that macro: name -> optional default value\n","sig":null,"attributes":[{"value":"/ The args for that macro: name -> optional default value","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183273,"byte_end":183332,"line_start":272,"line_end":272,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3020},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183412,"byte_end":183416,"line_start":275,"line_end":275,"column_start":9,"column_end":13},"name":"body","qualname":"::parser::ast::MacroDefinition::body","value":"std::vec::Vec<parser::ast::Node>","parent":{"krate":0,"index":3017},"children":[],"decl_id":null,"docs":" The macro content\n","sig":null,"attributes":[{"value":"/ The macro content","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183382,"byte_end":183403,"line_start":274,"line_end":274,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183501,"byte_end":183506,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"Block","qualname":"::parser::ast::Block","value":"Block { name, body }","parent":null,"children":[{"krate":0,"index":3030},{"krate":0,"index":3031}],"decl_id":null,"docs":" A block definition\n","sig":null,"attributes":[{"value":"/ A block definition","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183432,"byte_end":183454,"line_start":278,"line_end":278,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3030},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183540,"byte_end":183544,"line_start":282,"line_end":282,"column_start":9,"column_end":13},"name":"name","qualname":"::parser::ast::Block::name","value":"std::string::String","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" The block name\n","sig":null,"attributes":[{"value":"/ The block name","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183513,"byte_end":183531,"line_start":281,"line_end":281,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183588,"byte_end":183592,"line_start":284,"line_end":284,"column_start":9,"column_end":13},"name":"body","qualname":"::parser::ast::Block::body","value":"std::vec::Vec<parser::ast::Node>","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":" The block content\n","sig":null,"attributes":[{"value":"/ The block content","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183558,"byte_end":183579,"line_start":283,"line_end":283,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3040},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183702,"byte_end":183709,"line_start":289,"line_end":289,"column_start":12,"column_end":19},"name":"Forloop","qualname":"::parser::ast::Forloop","value":"Forloop { key, value, container, body, empty_body }","parent":null,"children":[{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045}],"decl_id":null,"docs":" A forloop: can be over values or key/values\n","sig":null,"attributes":[{"value":"/ A forloop: can be over values or key/values","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183608,"byte_end":183655,"line_start":287,"line_end":287,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3041},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183798,"byte_end":183801,"line_start":291,"line_end":291,"column_start":9,"column_end":12},"name":"key","qualname":"::parser::ast::Forloop::key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Name of the key in the loop (only when iterating on map-like objects)\n","sig":null,"attributes":[{"value":"/ Name of the key in the loop (only when iterating on map-like objects)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183716,"byte_end":183789,"line_start":290,"line_end":290,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":3042},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183888,"byte_end":183893,"line_start":293,"line_end":293,"column_start":9,"column_end":14},"name":"value","qualname":"::parser::ast::Forloop::value","value":"std::string::String","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Name of the local variable for the value in the loop\n","sig":null,"attributes":[{"value":"/ Name of the local variable for the value in the loop","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183823,"byte_end":183879,"line_start":292,"line_end":292,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3043},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183948,"byte_end":183957,"line_start":295,"line_end":295,"column_start":9,"column_end":18},"name":"container","qualname":"::parser::ast::Forloop::container","value":"parser::ast::Expr","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Expression being iterated on\n","sig":null,"attributes":[{"value":"/ Expression being iterated on","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183907,"byte_end":183939,"line_start":294,"line_end":294,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3044},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184010,"byte_end":184014,"line_start":297,"line_end":297,"column_start":9,"column_end":13},"name":"body","qualname":"::parser::ast::Forloop::body","value":"std::vec::Vec<parser::ast::Node>","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" What's in the forloop itself\n","sig":null,"attributes":[{"value":"/ What's in the forloop itself","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":183969,"byte_end":184001,"line_start":296,"line_end":296,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3045},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184090,"byte_end":184100,"line_start":299,"line_end":299,"column_start":9,"column_end":19},"name":"empty_body","qualname":"::parser::ast::Forloop::empty_body","value":"std::option::Option<std::vec::Vec<parser::ast::Node>>","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" The body to execute in case of an empty object\n","sig":null,"attributes":[{"value":"/ The body to execute in case of an empty object","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184031,"byte_end":184081,"line_start":298,"line_end":298,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3054},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184227,"byte_end":184229,"line_start":304,"line_end":304,"column_start":12,"column_end":14},"name":"If","qualname":"::parser::ast::If","value":"If { conditions, otherwise }","parent":null,"children":[{"krate":0,"index":3055},{"krate":0,"index":3056}],"decl_id":null,"docs":" An if/elif/else condition with their respective body\n","sig":null,"attributes":[{"value":"/ An if/elif/else condition with their respective body","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184124,"byte_end":184180,"line_start":302,"line_end":302,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184298,"byte_end":184308,"line_start":306,"line_end":306,"column_start":9,"column_end":19},"name":"conditions","qualname":"::parser::ast::If::conditions","value":"std::vec::Vec<(parser::ast::WS, parser::ast::Expr, std::vec::Vec<parser::ast::Node>)>","parent":{"krate":0,"index":3054},"children":[],"decl_id":null,"docs":" First item if the if, all the ones after are elif\n","sig":null,"attributes":[{"value":"/ First item if the if, all the ones after are elif","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184236,"byte_end":184289,"line_start":305,"line_end":305,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3056},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184380,"byte_end":184389,"line_start":308,"line_end":308,"column_start":9,"column_end":18},"name":"otherwise","qualname":"::parser::ast::If::otherwise","value":"std::option::Option<(parser::ast::WS, std::vec::Vec<parser::ast::Node>)>","parent":{"krate":0,"index":3054},"children":[],"decl_id":null,"docs":" The optional `else` block\n","sig":null,"attributes":[{"value":"/ The optional `else` block","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184342,"byte_end":184371,"line_start":307,"line_end":307,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184562,"byte_end":184567,"line_start":315,"line_end":315,"column_start":5,"column_end":10},"name":"Super","qualname":"::parser::ast::Node::Super","value":"Node::Super","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" A call to `{{ super() }}` in a block\n","sig":null,"attributes":[{"value":"/ A call to `{{ super() }}` in a block","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184517,"byte_end":184557,"line_start":314,"line_end":314,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3068},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184599,"byte_end":184603,"line_start":318,"line_end":318,"column_start":5,"column_end":9},"name":"Text","qualname":"::parser::ast::Node::Text","value":"Node::Text(String)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" Some actual text\n","sig":null,"attributes":[{"value":"/ Some actual text","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184574,"byte_end":184594,"line_start":317,"line_end":317,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3071},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184641,"byte_end":184654,"line_start":320,"line_end":320,"column_start":5,"column_end":18},"name":"VariableBlock","qualname":"::parser::ast::Node::VariableBlock","value":"Node::VariableBlock(WS, Expr)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" A `{{ }}` block\n","sig":null,"attributes":[{"value":"/ A `{{ }}` block","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184617,"byte_end":184636,"line_start":319,"line_end":319,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184719,"byte_end":184734,"line_start":322,"line_end":322,"column_start":5,"column_end":20},"name":"MacroDefinition","qualname":"::parser::ast::Node::MacroDefinition","value":"Node::MacroDefinition(WS, MacroDefinition, WS)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" A `{% macro hello() %}...{% endmacro %}`\n","sig":null,"attributes":[{"value":"/ A `{% macro hello() %}...{% endmacro %}`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184670,"byte_end":184714,"line_start":321,"line_end":321,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184841,"byte_end":184848,"line_start":325,"line_end":325,"column_start":5,"column_end":12},"name":"Extends","qualname":"::parser::ast::Node::Extends","value":"Node::Extends(WS, String)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" The `{% extends \"blabla.html\" %}` node, contains the template name\n","sig":null,"attributes":[{"value":"/ The `{% extends \"blabla.html\" %}` node, contains the template name","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184766,"byte_end":184836,"line_start":324,"line_end":324,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3084},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184941,"byte_end":184948,"line_start":327,"line_end":327,"column_start":5,"column_end":12},"name":"Include","qualname":"::parser::ast::Node::Include","value":"Node::Include(WS, Vec<String>, bool)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" The `{% include \"blabla.html\" %}` node, contains the template name\n","sig":null,"attributes":[{"value":"/ The `{% include \"blabla.html\" %}` node, contains the template name","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184866,"byte_end":184936,"line_start":326,"line_end":326,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3089},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185028,"byte_end":185039,"line_start":329,"line_end":329,"column_start":5,"column_end":16},"name":"ImportMacro","qualname":"::parser::ast::Node::ImportMacro","value":"Node::ImportMacro(WS, String, String)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" The `{% import \"macros.html\" as macros %}`\n","sig":null,"attributes":[{"value":"/ The `{% import \"macros.html\" as macros %}`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184977,"byte_end":185023,"line_start":328,"line_end":328,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3094},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185109,"byte_end":185112,"line_start":331,"line_end":331,"column_start":5,"column_end":8},"name":"Set","qualname":"::parser::ast::Node::Set","value":"Node::Set(WS, Set)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" The `{% set val = something %}` tag\n","sig":null,"attributes":[{"value":"/ The `{% set val = something %}` tag","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185065,"byte_end":185104,"line_start":330,"line_end":330,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3098},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185184,"byte_end":185187,"line_start":334,"line_end":334,"column_start":5,"column_end":8},"name":"Raw","qualname":"::parser::ast::Node::Raw","value":"Node::Raw(WS, String, WS)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" The text between `{% raw %}` and `{% endraw %}`\n","sig":null,"attributes":[{"value":"/ The text between `{% raw %}` and `{% endraw %}`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185128,"byte_end":185179,"line_start":333,"line_end":333,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185299,"byte_end":185312,"line_start":337,"line_end":337,"column_start":5,"column_end":18},"name":"FilterSection","qualname":"::parser::ast::Node::FilterSection","value":"Node::FilterSection(WS, FilterSection, WS)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" A filter section node `{{ filter name(param=\"value\") }} content {{ endfilter }}`\n","sig":null,"attributes":[{"value":"/ A filter section node `{{ filter name(param=\"value\") }} content {{ endfilter }}`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185210,"byte_end":185294,"line_start":336,"line_end":336,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3108},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185387,"byte_end":185392,"line_start":339,"line_end":339,"column_start":5,"column_end":10},"name":"Block","qualname":"::parser::ast::Node::Block","value":"Node::Block(WS, Block, WS)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" A `{% block name %}...{% endblock %}`\n","sig":null,"attributes":[{"value":"/ A `{% block name %}...{% endblock %}`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185341,"byte_end":185382,"line_start":338,"line_end":338,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185461,"byte_end":185468,"line_start":341,"line_end":341,"column_start":5,"column_end":12},"name":"Forloop","qualname":"::parser::ast::Node::Forloop","value":"Node::Forloop(WS, Forloop, WS)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" A `{% for i in items %}...{% endfor %}`\n","sig":null,"attributes":[{"value":"/ A `{% for i in items %}...{% endfor %}`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185413,"byte_end":185456,"line_start":340,"line_end":340,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185572,"byte_end":185574,"line_start":344,"line_end":344,"column_start":5,"column_end":7},"name":"If","qualname":"::parser::ast::Node::If","value":"Node::If(If, WS)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" A if/elif/else block, WS for the if/elif/else is directly in the struct\n","sig":null,"attributes":[{"value":"/ A if/elif/else block, WS for the if/elif/else is directly in the struct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185492,"byte_end":185567,"line_start":343,"line_end":343,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3122},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185619,"byte_end":185624,"line_start":347,"line_end":347,"column_start":5,"column_end":10},"name":"Break","qualname":"::parser::ast::Node::Break","value":"Node::Break(WS)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" The `{% break %}` tag\n","sig":null,"attributes":[{"value":"/ The `{% break %}` tag","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185589,"byte_end":185614,"line_start":346,"line_end":346,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185667,"byte_end":185675,"line_start":349,"line_end":349,"column_start":5,"column_end":13},"name":"Continue","qualname":"::parser::ast::Node::Continue","value":"Node::Continue(WS)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" The `{% continue %}` tag\n","sig":null,"attributes":[{"value":"/ The `{% continue %}` tag","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185634,"byte_end":185662,"line_start":348,"line_end":348,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185734,"byte_end":185741,"line_start":352,"line_end":352,"column_start":5,"column_end":12},"name":"Comment","qualname":"::parser::ast::Node::Comment","value":"Node::Comment(WS, String)","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":" The `{# #} `comment tag and its content\n","sig":null,"attributes":[{"value":"/ The `{# #} `comment tag and its content","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":185686,"byte_end":185729,"line_start":351,"line_end":351,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":3065},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184506,"byte_end":184510,"line_start":313,"line_end":313,"column_start":10,"column_end":14},"name":"Node","qualname":"::parser::ast::Node","value":"pub enum Node {\n    Super,\n    Text(String),\n    VariableBlock(WS, Expr),\n    MacroDefinition(WS, MacroDefinition, WS),\n    Extends(WS, String),\n    Include(WS, Vec<String>, bool),\n    ImportMacro(WS, String, String),\n    Set(WS, Set),\n    Raw(WS, String, WS),\n    FilterSection(WS, FilterSection, WS),\n    Block(WS, Block, WS),\n    Forloop(WS, Forloop, WS),\n    If(If, WS),\n    Break(WS),\n    Continue(WS),\n    Comment(WS, String),\n}","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":3068},{"krate":0,"index":3071},{"krate":0,"index":3075},{"krate":0,"index":3080},{"krate":0,"index":3084},{"krate":0,"index":3089},{"krate":0,"index":3094},{"krate":0,"index":3098},{"krate":0,"index":3103},{"krate":0,"index":3108},{"krate":0,"index":3113},{"krate":0,"index":3118},{"krate":0,"index":3122},{"krate":0,"index":3125},{"krate":0,"index":3128}],"decl_id":null,"docs":" All Tera nodes that can be encountered\n","sig":null,"attributes":[{"value":"/ All Tera nodes that can be encountered","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":184419,"byte_end":184461,"line_start":311,"line_end":311,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267258,"byte_end":267266,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Template","qualname":"::template::Template","value":"Template { name, path, ast, from_extend, macros, imported_macro_files, parent, blocks, parents, blocks_definitions }","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3290},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295}],"decl_id":null,"docs":" This is the parsed equivalent of a template file.\n It also does some pre-processing to ensure it does as little as possible at runtime\n Not meant to be used directly.\n","sig":null,"attributes":[{"value":"/ This is the parsed equivalent of a template file.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267046,"byte_end":267099,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ It also does some pre-processing to ensure it does as little as possible at runtime","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267100,"byte_end":267187,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/ Not meant to be used directly.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267188,"byte_end":267222,"line_start":9,"line_end":9,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3286},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267340,"byte_end":267344,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::template::Template::name","value":"std::string::String","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" Name of the template, usually very similar to the path\n","sig":null,"attributes":[{"value":"/ Name of the template, usually very similar to the path","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267273,"byte_end":267331,"line_start":12,"line_end":12,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3287},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267492,"byte_end":267496,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"path","qualname":"::template::Template::path","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" Original path of the file. A template doesn't necessarily have\n a file associated with it though so it's optional.\n","sig":null,"attributes":[{"value":"/ Original path of the file. A template doesn't necessarily have","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267358,"byte_end":267424,"line_start":14,"line_end":14,"column_start":5,"column_end":71}},{"value":"/ a file associated with it though so it's optional.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267429,"byte_end":267483,"line_start":15,"line_end":15,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3288},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267567,"byte_end":267570,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"name":"ast","qualname":"::template::Template::ast","value":"std::vec::Vec<parser::ast::Node>","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" Parsed AST, after whitespace removal\n","sig":null,"attributes":[{"value":"/ Parsed AST, after whitespace removal","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267518,"byte_end":267558,"line_start":17,"line_end":17,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3289},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267724,"byte_end":267735,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"name":"from_extend","qualname":"::template::Template::from_extend","value":"bool","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" Whether this template came from a call to `Tera::extend`, so we do\n not remove it when we are doing a template reload\n","sig":null,"attributes":[{"value":"/ Whether this template came from a call to `Tera::extend`, so we do","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267587,"byte_end":267657,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ not remove it when we are doing a template reload","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267662,"byte_end":267715,"line_start":20,"line_end":20,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3290},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267812,"byte_end":267818,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"macros","qualname":"::template::Template::macros","value":"std::collections::HashMap<std::string::String, parser::ast::MacroDefinition>","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" Macros defined in that file: name -> definition ast\n","sig":null,"attributes":[{"value":"/ Macros defined in that file: name -> definition ast","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267748,"byte_end":267803,"line_start":23,"line_end":23,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3291},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267929,"byte_end":267949,"line_start":26,"line_end":26,"column_start":9,"column_end":29},"name":"imported_macro_files","qualname":"::template::Template::imported_macro_files","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" (filename, namespace) for the macros imported in that file\n","sig":null,"attributes":[{"value":"/ (filename, namespace) for the macros imported in that file","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267858,"byte_end":267920,"line_start":25,"line_end":25,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3292},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268059,"byte_end":268065,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"name":"parent","qualname":"::template::Template::parent","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" Only used during initial parsing. Rendering will use `self.parents`\n","sig":null,"attributes":[{"value":"/ Only used during initial parsing. Rendering will use `self.parents`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":267979,"byte_end":268050,"line_start":28,"line_end":28,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268178,"byte_end":268184,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"blocks","qualname":"::template::Template::blocks","value":"std::collections::HashMap<std::string::String, parser::ast::Block>","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" Only used during initial parsing. Rendering will use `self.blocks_definitions`\n","sig":null,"attributes":[{"value":"/ Only used during initial parsing. Rendering will use `self.blocks_definitions`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268087,"byte_end":268169,"line_start":30,"line_end":30,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":3294},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268364,"byte_end":268371,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"name":"parents","qualname":"::template::Template::parents","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" The full list of parent templates\n","sig":null,"attributes":[{"value":"/ The full list of parent templates","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268318,"byte_end":268355,"line_start":34,"line_end":34,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268874,"byte_end":268892,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"name":"blocks_definitions","qualname":"::template::Template::blocks_definitions","value":"std::collections::HashMap<std::string::String, std::vec::Vec<(std::string::String, parser::ast::Block)>>","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" The definition of all the blocks for the current template and the definition of those blocks\n in parent templates if there are some.\n Needed for super() to work without having to find them each time.\n The type corresponds to the following `block_name -> [(template name, definition)]`\n The order of the Vec is from the first in hierarchy to the current template and the template\n name is needed in order to load its macros if necessary.\n","sig":null,"attributes":[{"value":"/ The definition of all the blocks for the current template and the definition of those blocks","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268390,"byte_end":268486,"line_start":36,"line_end":36,"column_start":5,"column_end":101}},{"value":"/ in parent templates if there are some.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268491,"byte_end":268533,"line_start":37,"line_end":37,"column_start":5,"column_end":47}},{"value":"/ Needed for super() to work without having to find them each time.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268538,"byte_end":268607,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ The type corresponds to the following `block_name -> [(template name, definition)]`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268612,"byte_end":268699,"line_start":39,"line_end":39,"column_start":5,"column_end":92}},{"value":"/ The order of the Vec is from the first in hierarchy to the current template and the template","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268704,"byte_end":268800,"line_start":40,"line_end":40,"column_start":5,"column_end":101}},{"value":"/ name is needed in order to load its macros if necessary.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268805,"byte_end":268865,"line_start":41,"line_end":41,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":269003,"byte_end":269006,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<Template>::new","value":"pub fn new(&str, Option<String>, &str) -> Result<Template>","parent":null,"children":[],"decl_id":null,"docs":" Parse the template string given\n","sig":null,"attributes":[{"value":"/ Parse the template string given","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268956,"byte_end":268991,"line_start":46,"line_end":46,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3300},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":273903,"byte_end":273907,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Tera","qualname":"::tera::Tera","value":"Tera { templates, filters, testers, functions, autoescape_suffixes }","parent":null,"children":[{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307}],"decl_id":null,"docs":" The main point of interaction in this library.\n","sig":null,"attributes":[{"value":"/ The main point of interaction in this library.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":273824,"byte_end":273874,"line_start":25,"line_end":25,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3302},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":274061,"byte_end":274070,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"name":"templates","qualname":"::tera::Tera::templates","value":"std::collections::HashMap<std::string::String, template::Template>","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":274126,"byte_end":274133,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"filters","qualname":"::tera::Tera::filters","value":"std::collections::HashMap<std::string::String, std::sync::Arc<(dyn builtins::filters::Filter + 'static)>>","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3304},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":274196,"byte_end":274203,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"testers","qualname":"::tera::Tera::testers","value":"std::collections::HashMap<std::string::String, std::sync::Arc<(dyn builtins::testers::Test + 'static)>>","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3305},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":274264,"byte_end":274273,"line_start":38,"line_end":38,"column_start":9,"column_end":18},"name":"functions","qualname":"::tera::Tera::functions","value":"std::collections::HashMap<std::string::String, std::sync::Arc<(dyn builtins::functions::Function + 'static)>>","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3306},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":274446,"byte_end":274465,"line_start":42,"line_end":42,"column_start":9,"column_end":28},"name":"autoescape_suffixes","qualname":"::tera::Tera::autoescape_suffixes","value":"std::vec::Vec<&'static str>","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275783,"byte_end":275786,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Tera>::new","value":"pub fn new(&str) -> Result<Tera>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of Tera, containing all the parsed templates found in the `dir` glob","sig":null,"attributes":[{"value":"/ Create a new instance of Tera, containing all the parsed templates found in the `dir` glob","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275438,"byte_end":275532,"line_start":77,"line_end":77,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275537,"byte_end":275540,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275545,"byte_end":275557,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/match Tera::new(\"templates/**/*\") {","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275562,"byte_end":275600,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/    Ok(t) => t,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275605,"byte_end":275623,"line_start":81,"line_end":81,"column_start":5,"column_end":23}},{"value":"/    Err(e) => {","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275628,"byte_end":275646,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/        println!(\"Parsing error(s): {}\", e);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275651,"byte_end":275698,"line_start":83,"line_end":83,"column_start":5,"column_end":52}},{"value":"/        ::std::process::exit(1);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275703,"byte_end":275738,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/    }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275743,"byte_end":275751,"line_start":85,"line_end":85,"column_start":5,"column_end":13}},{"value":"/}","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275756,"byte_end":275760,"line_start":86,"line_end":86,"column_start":5,"column_end":9}},{"value":"/```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275765,"byte_end":275771,"line_start":87,"line_end":87,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276580,"byte_end":276585,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"parse","qualname":"<Tera>::parse","value":"pub fn parse(&str) -> Result<Tera>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of Tera, containing all the parsed templates found in the `dir` glob\n The difference with `Tera::new` is that it won't build the inheritance chains automatically\n so you are free to modify the templates if you need to.\n You will NOT get a working Tera instance using `Tera::parse`, you will need to call\n `tera.build_inheritance_chains()` to make it usable","sig":null,"attributes":[{"value":"/ Create a new instance of Tera, containing all the parsed templates found in the `dir` glob","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275860,"byte_end":275954,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/ The difference with `Tera::new` is that it won't build the inheritance chains automatically","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":275959,"byte_end":276054,"line_start":93,"line_end":93,"column_start":5,"column_end":100}},{"value":"/ so you are free to modify the templates if you need to.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276059,"byte_end":276118,"line_start":94,"line_end":94,"column_start":5,"column_end":64}},{"value":"/ You will NOT get a working Tera instance using `Tera::parse`, you will need to call","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276123,"byte_end":276210,"line_start":95,"line_end":95,"column_start":5,"column_end":92}},{"value":"/ `tera.build_inheritance_chains()` to make it usable","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276215,"byte_end":276270,"line_start":96,"line_end":96,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276275,"byte_end":276278,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276283,"byte_end":276295,"line_start":98,"line_end":98,"column_start":5,"column_end":17}},{"value":"/let mut tera = match Tera::parse(\"templates/**/*\") {","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276300,"byte_end":276355,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/    Ok(t) => t,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276360,"byte_end":276378,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/    Err(e) => {","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276383,"byte_end":276401,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/        println!(\"Parsing error(s): {}\", e);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276406,"byte_end":276453,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/        ::std::process::exit(1);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276458,"byte_end":276493,"line_start":103,"line_end":103,"column_start":5,"column_end":40}},{"value":"/    }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276498,"byte_end":276506,"line_start":104,"line_end":104,"column_start":5,"column_end":13}},{"value":"/};","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276511,"byte_end":276516,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/tera.build_inheritance_chains()?;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276521,"byte_end":276557,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":276562,"byte_end":276568,"line_start":107,"line_end":107,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":280477,"byte_end":280501,"line_start":207,"line_end":207,"column_start":12,"column_end":36},"name":"build_inheritance_chains","qualname":"<Tera>::build_inheritance_chains","value":"pub fn build_inheritance_chains(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" We need to know the hierarchy of templates to be able to render multiple extends level\n This happens at compile-time to avoid checking it every time we want to render a template\n This also checks for soundness issues in the inheritance chains, such as missing template or\n circular extends.\n It also builds the block inheritance chain and detects when super() is called in a place\n where it can't possibly work","sig":null,"attributes":[{"value":"/ We need to know the hierarchy of templates to be able to render multiple extends level","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":279922,"byte_end":280012,"line_start":199,"line_end":199,"column_start":5,"column_end":95}},{"value":"/ This happens at compile-time to avoid checking it every time we want to render a template","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":280017,"byte_end":280110,"line_start":200,"line_end":200,"column_start":5,"column_end":98}},{"value":"/ This also checks for soundness issues in the inheritance chains, such as missing template or","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":280115,"byte_end":280211,"line_start":201,"line_end":201,"column_start":5,"column_end":101}},{"value":"/ circular extends.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":280216,"byte_end":280237,"line_start":202,"line_end":202,"column_start":5,"column_end":26}},{"value":"/ It also builds the block inheritance chain and detects when super() is called in a place","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":280242,"byte_end":280334,"line_start":203,"line_end":203,"column_start":5,"column_end":97}},{"value":"/ where it can't possibly work","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":280339,"byte_end":280371,"line_start":204,"line_end":204,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":280376,"byte_end":280379,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ You generally don't need to call that yourself, unless you used `Tera::parse`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":280384,"byte_end":280465,"line_start":206,"line_end":206,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":283640,"byte_end":283657,"line_start":284,"line_end":284,"column_start":12,"column_end":29},"name":"check_macro_files","qualname":"<Tera>::check_macro_files","value":"pub fn check_macro_files(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" We keep track of macro files loaded in each Template so we can know whether one or them\n is missing and error accordingly before the user tries to render a template.","sig":null,"attributes":[{"value":"/ We keep track of macro files loaded in each Template so we can know whether one or them","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":283348,"byte_end":283439,"line_start":280,"line_end":280,"column_start":5,"column_end":96}},{"value":"/ is missing and error accordingly before the user tries to render a template.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":283444,"byte_end":283524,"line_start":281,"line_end":281,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":283529,"byte_end":283532,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ As with `self::build_inheritance_chains`, you don't usually need to call that yourself.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":283537,"byte_end":283628,"line_start":283,"line_end":283,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284635,"byte_end":284641,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"render","qualname":"<Tera>::render","value":"pub fn render(&Self, &str, &Context) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Renders a Tera template given a `tera::Context`,","sig":null,"attributes":[{"value":"/ Renders a Tera template given a `tera::Context`,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284147,"byte_end":284199,"line_start":299,"line_end":299,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284204,"byte_end":284207,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ To render a template with an empty context, simply pass a new `tera::Context` object","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284212,"byte_end":284300,"line_start":301,"line_end":301,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284305,"byte_end":284308,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284313,"byte_end":284331,"line_start":303,"line_end":303,"column_start":5,"column_end":23}},{"value":"/ // Rendering a template with a normal context","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284336,"byte_end":284385,"line_start":304,"line_end":304,"column_start":5,"column_end":54}},{"value":"/ let mut context = Context::new();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284390,"byte_end":284427,"line_start":305,"line_end":305,"column_start":5,"column_end":42}},{"value":"/ context.insert(\"age\", 18);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284432,"byte_end":284462,"line_start":306,"line_end":306,"column_start":5,"column_end":35}},{"value":"/ tera.render(\"hello.html\", context);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284467,"byte_end":284506,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/ // Rendering a template with an empty context","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284511,"byte_end":284560,"line_start":308,"line_end":308,"column_start":5,"column_end":54}},{"value":"/ tera.render(\"hello.html\", Context::new());","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284565,"byte_end":284611,"line_start":309,"line_end":309,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284616,"byte_end":284623,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285481,"byte_end":285490,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"render_to","qualname":"<Tera>::render_to","value":"pub fn render_to<impl Write: Write>(&Self, &str, &Context, impl Write)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Renders a Tera template given a `tera::Context` to a [std::io::Write],","sig":null,"attributes":[{"value":"/ Renders a Tera template given a `tera::Context` to a [std::io::Write],","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284867,"byte_end":284941,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284946,"byte_end":284949,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ The only difference from [Self::render] is that this version doesn't convert buffer to a String,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":284954,"byte_end":285054,"line_start":319,"line_end":319,"column_start":5,"column_end":105}},{"value":"/ allowing to render directly to anything that implements [std::io::Write].","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285059,"byte_end":285136,"line_start":320,"line_end":320,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285141,"byte_end":285144,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Any i/o error will be reported in the result.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285149,"byte_end":285198,"line_start":322,"line_end":322,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285203,"byte_end":285206,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285211,"byte_end":285229,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/ // Rendering a template to an internal buffer","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285234,"byte_end":285283,"line_start":325,"line_end":325,"column_start":5,"column_end":54}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285288,"byte_end":285320,"line_start":326,"line_end":326,"column_start":5,"column_end":37}},{"value":"/ let mut context = Context::new();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285325,"byte_end":285362,"line_start":327,"line_end":327,"column_start":5,"column_end":42}},{"value":"/ context.insert(\"age\", 18);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285367,"byte_end":285397,"line_start":328,"line_end":328,"column_start":5,"column_end":35}},{"value":"/ tera.render_to(\"hello.html\", context, &mut buffer);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285402,"byte_end":285457,"line_start":329,"line_end":329,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285462,"byte_end":285469,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286376,"byte_end":286386,"line_start":355,"line_end":355,"column_start":12,"column_end":22},"name":"render_str","qualname":"<Tera>::render_str","value":"pub fn render_str(&mut Self, &str, &Context) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Renders a one off template (for example a template coming from a user\n input) given a `Context` and an instance of Tera. This allows you to\n render templates using custom filters or functions.","sig":null,"attributes":[{"value":"/ Renders a one off template (for example a template coming from a user","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285778,"byte_end":285851,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ input) given a `Context` and an instance of Tera. This allows you to","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285856,"byte_end":285928,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ render templates using custom filters or functions.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285933,"byte_end":285988,"line_start":344,"line_end":344,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":285993,"byte_end":285996,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Any errors will mention the `__tera_one_off` template: this is the name","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286001,"byte_end":286076,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ given to the template by Tera.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286081,"byte_end":286115,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286120,"byte_end":286123,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286128,"byte_end":286146,"line_start":349,"line_end":349,"column_start":5,"column_end":23}},{"value":"/ let mut context = Context::new();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286151,"byte_end":286188,"line_start":350,"line_end":350,"column_start":5,"column_end":42}},{"value":"/ context.insert(\"greeting\", &\"Hello\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286193,"byte_end":286234,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/ let string = tera.render_str(\"{{ greeting }} World!\", &context)?;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286239,"byte_end":286308,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(string, \"Hello World!\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286313,"byte_end":286352,"line_start":353,"line_end":353,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286357,"byte_end":286364,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287252,"byte_end":287259,"line_start":374,"line_end":374,"column_start":12,"column_end":19},"name":"one_off","qualname":"<Tera>::one_off","value":"pub fn one_off(&str, &Context, bool) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Renders a one off template (for example a template coming from a user input) given a `Context`","sig":null,"attributes":[{"value":"/ Renders a one off template (for example a template coming from a user input) given a `Context`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286659,"byte_end":286757,"line_start":362,"line_end":362,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286762,"byte_end":286765,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This creates a separate instance of Tera with no possibilities of adding custom filters","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286770,"byte_end":286861,"line_start":364,"line_end":364,"column_start":5,"column_end":96}},{"value":"/ or testers, parses the template and render it immediately.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286866,"byte_end":286928,"line_start":365,"line_end":365,"column_start":5,"column_end":67}},{"value":"/ Any errors will mention the `__tera_one_off` template: this is the name given to the template by","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":286933,"byte_end":287033,"line_start":366,"line_end":366,"column_start":5,"column_end":105}},{"value":"/ Tera","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287038,"byte_end":287046,"line_start":367,"line_end":367,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287051,"byte_end":287054,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287059,"byte_end":287077,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ let mut context = Context::new();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287082,"byte_end":287119,"line_start":370,"line_end":370,"column_start":5,"column_end":42}},{"value":"/ context.insert(\"greeting\", &\"hello\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287124,"byte_end":287165,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ Tera::one_off(\"{{ greeting }} world\", &context, true);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287170,"byte_end":287228,"line_start":372,"line_end":372,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287233,"byte_end":287240,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287558,"byte_end":287570,"line_start":386,"line_end":386,"column_start":12,"column_end":24},"name":"get_template","qualname":"<Tera>::get_template","value":"pub fn get_template(&Self, &str) -> Result<&Template>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287537,"byte_end":287546,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288381,"byte_end":288399,"line_start":411,"line_end":411,"column_start":12,"column_end":30},"name":"get_template_names","qualname":"<Tera>::get_template_names","value":"pub fn get_template_names(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names of all registered templates in an\n unspecified order.","sig":null,"attributes":[{"value":"/ Returns an iterator over the names of all registered templates in an","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287794,"byte_end":287866,"line_start":393,"line_end":393,"column_start":5,"column_end":77}},{"value":"/ unspecified order.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287871,"byte_end":287893,"line_start":394,"line_end":394,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287898,"byte_end":287901,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287906,"byte_end":287919,"line_start":396,"line_end":396,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287924,"byte_end":287927,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287932,"byte_end":287943,"line_start":398,"line_end":398,"column_start":5,"column_end":16}},{"value":"/ use tera::Tera;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287948,"byte_end":287967,"line_start":399,"line_end":399,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287972,"byte_end":287975,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let mut tera = Tera::default();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":287980,"byte_end":288015,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/ tera.add_raw_template(\"foo\", \"{{ hello }}\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288020,"byte_end":288068,"line_start":402,"line_end":402,"column_start":5,"column_end":53}},{"value":"/ tera.add_raw_template(\"another-one.html\", \"contents go here\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288073,"byte_end":288139,"line_start":403,"line_end":403,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288144,"byte_end":288147,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let names: Vec<_> = tera.get_template_names().collect();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288152,"byte_end":288212,"line_start":405,"line_end":405,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(names.len(), 2);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288217,"byte_end":288248,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/ assert!(names.contains(&\"foo\"));","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288253,"byte_end":288289,"line_start":407,"line_end":407,"column_start":5,"column_end":41}},{"value":"/ assert!(names.contains(&\"another-one.html\"));","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288294,"byte_end":288343,"line_start":408,"line_end":408,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288348,"byte_end":288355,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288360,"byte_end":288369,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288906,"byte_end":288922,"line_start":424,"line_end":424,"column_start":12,"column_end":28},"name":"add_raw_template","qualname":"<Tera>::add_raw_template","value":"pub fn add_raw_template(&mut Self, &str, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a single template to the Tera instance","sig":null,"attributes":[{"value":"/ Add a single template to the Tera instance","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288500,"byte_end":288546,"line_start":415,"line_end":415,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288551,"byte_end":288554,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This will error if the inheritance chain can't be built, such as adding a child","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288559,"byte_end":288642,"line_start":417,"line_end":417,"column_start":5,"column_end":88}},{"value":"/ template without the parent one.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288647,"byte_end":288683,"line_start":418,"line_end":418,"column_start":5,"column_end":41}},{"value":"/ If you want to add several templates, use [Tera::add_templates](struct.Tera.html#method.add_raw_templates)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288688,"byte_end":288798,"line_start":419,"line_end":419,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288803,"byte_end":288806,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288811,"byte_end":288829,"line_start":421,"line_end":421,"column_start":5,"column_end":23}},{"value":"/ tera.add_raw_template(\"new.html\", \"Blabla\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288834,"byte_end":288882,"line_start":422,"line_end":422,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":288887,"byte_end":288894,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289635,"byte_end":289652,"line_start":444,"line_end":444,"column_start":12,"column_end":29},"name":"add_raw_templates","qualname":"<Tera>::add_raw_templates","value":"pub fn add_raw_templates<I, N, C>(&mut Self, I) -> Result<()> where\nI: IntoIterator<Item = (N, C)>, N: AsRef<str>, C: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add all the templates given to the Tera instance","sig":null,"attributes":[{"value":"/ Add all the templates given to the Tera instance","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289270,"byte_end":289322,"line_start":433,"line_end":433,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289327,"byte_end":289330,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This will error if the inheritance chain can't be built, such as adding a child","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289335,"byte_end":289418,"line_start":435,"line_end":435,"column_start":5,"column_end":88}},{"value":"/ template without the parent one.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289423,"byte_end":289459,"line_start":436,"line_end":436,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289464,"byte_end":289467,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289472,"byte_end":289490,"line_start":438,"line_end":438,"column_start":5,"column_end":23}},{"value":"/ tera.add_raw_templates(vec![","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289495,"byte_end":289527,"line_start":439,"line_end":439,"column_start":5,"column_end":37}},{"value":"/     (\"new.html\", \"blabla\"),","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289532,"byte_end":289563,"line_start":440,"line_end":440,"column_start":5,"column_end":36}},{"value":"/     (\"new2.html\", \"hello\"),","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289568,"byte_end":289599,"line_start":441,"line_end":441,"column_start":5,"column_end":36}},{"value":"/ ]);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289604,"byte_end":289611,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":289616,"byte_end":289623,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290829,"byte_end":290846,"line_start":474,"line_end":474,"column_start":12,"column_end":29},"name":"add_template_file","qualname":"<Tera>::add_template_file","value":"pub fn add_template_file<P: AsRef<Path>>(&mut Self, P, Option<&str>)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a single template from a path to the Tera instance. The default name for the template is\n the path given, but this can be renamed with the `name` parameter","sig":null,"attributes":[{"value":"/ Add a single template from a path to the Tera instance. The default name for the template is","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290208,"byte_end":290304,"line_start":461,"line_end":461,"column_start":5,"column_end":101}},{"value":"/ the path given, but this can be renamed with the `name` parameter","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290309,"byte_end":290378,"line_start":462,"line_end":462,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290383,"byte_end":290386,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This will error if the inheritance chain can't be built, such as adding a child","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290391,"byte_end":290474,"line_start":464,"line_end":464,"column_start":5,"column_end":88}},{"value":"/ template without the parent one.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290479,"byte_end":290515,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/ If you want to add several file, use [Tera::add_template_files](struct.Tera.html#method.add_template_files)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290520,"byte_end":290631,"line_start":466,"line_end":466,"column_start":5,"column_end":116}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290636,"byte_end":290639,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290644,"byte_end":290662,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ // Use path as name","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290667,"byte_end":290690,"line_start":469,"line_end":469,"column_start":5,"column_end":28}},{"value":"/ tera.add_template_file(path, None);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290695,"byte_end":290734,"line_start":470,"line_end":470,"column_start":5,"column_end":44}},{"value":"/ // Rename","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290739,"byte_end":290752,"line_start":471,"line_end":471,"column_start":5,"column_end":18}},{"value":"/ tera.add_template_file(path, Some(\"index\"));","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290757,"byte_end":290805,"line_start":472,"line_end":472,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":290810,"byte_end":290817,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291638,"byte_end":291656,"line_start":493,"line_end":493,"column_start":12,"column_end":30},"name":"add_template_files","qualname":"<Tera>::add_template_files","value":"pub fn add_template_files<I, P, N>(&mut Self, I) -> Result<()> where\nI: IntoIterator<Item = (P, Option<N>)>, P: AsRef<Path>, N: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add several templates from paths to the Tera instance. The default name for the template is\n the path given, but this can be renamed with the second parameter of the tuple","sig":null,"attributes":[{"value":"/ Add several templates from paths to the Tera instance. The default name for the template is","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291058,"byte_end":291153,"line_start":481,"line_end":481,"column_start":5,"column_end":100}},{"value":"/ the path given, but this can be renamed with the second parameter of the tuple","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291158,"byte_end":291240,"line_start":482,"line_end":482,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291245,"byte_end":291248,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This will error if the inheritance chain can't be built, such as adding a child","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291253,"byte_end":291336,"line_start":484,"line_end":484,"column_start":5,"column_end":88}},{"value":"/ template without the parent one.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291341,"byte_end":291377,"line_start":485,"line_end":485,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291382,"byte_end":291385,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291390,"byte_end":291408,"line_start":487,"line_end":487,"column_start":5,"column_end":23}},{"value":"/ tera.add_template_files(vec![","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291413,"byte_end":291446,"line_start":488,"line_end":488,"column_start":5,"column_end":38}},{"value":"/     (path1, None), // this template will have the value of path1 as name","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291451,"byte_end":291527,"line_start":489,"line_end":489,"column_start":5,"column_end":81}},{"value":"/     (path2, Some(\"hey\")), // this template will have `hey` as name","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291532,"byte_end":291602,"line_start":490,"line_end":490,"column_start":5,"column_end":75}},{"value":"/ ]);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291607,"byte_end":291614,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":291619,"byte_end":291626,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292069,"byte_end":292079,"line_start":509,"line_end":509,"column_start":12,"column_end":22},"name":"get_filter","qualname":"<Tera>::get_filter","value":"pub fn get_filter(&Self, &str) -> Result<&dyn Filter>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292048,"byte_end":292057,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292521,"byte_end":292536,"line_start":523,"line_end":523,"column_start":12,"column_end":27},"name":"register_filter","qualname":"<Tera>::register_filter","value":"pub fn register_filter<F: Filter + 'static>(&mut Self, &str, F)","parent":null,"children":[],"decl_id":null,"docs":" Register a filter with Tera.","sig":null,"attributes":[{"value":"/ Register a filter with Tera.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292298,"byte_end":292330,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292335,"byte_end":292338,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ If a filter with that name already exists, it will be overwritten","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292343,"byte_end":292412,"line_start":518,"line_end":518,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292417,"byte_end":292420,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292425,"byte_end":292443,"line_start":520,"line_end":520,"column_start":5,"column_end":23}},{"value":"/ tera.register_filter(\"upper\", string::upper);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292448,"byte_end":292497,"line_start":521,"line_end":521,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292502,"byte_end":292509,"line_start":522,"line_end":522,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292710,"byte_end":292720,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"name":"get_tester","qualname":"<Tera>::get_tester","value":"pub fn get_tester(&Self, &str) -> Result<&dyn Test>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292689,"byte_end":292698,"line_start":528,"line_end":528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293151,"byte_end":293166,"line_start":543,"line_end":543,"column_start":12,"column_end":27},"name":"register_tester","qualname":"<Tera>::register_tester","value":"pub fn register_tester<T: Test + 'static>(&mut Self, &str, T)","parent":null,"children":[],"decl_id":null,"docs":" Register a tester with Tera.","sig":null,"attributes":[{"value":"/ Register a tester with Tera.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292931,"byte_end":292963,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292968,"byte_end":292971,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ If a tester with that name already exists, it will be overwritten","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":292976,"byte_end":293045,"line_start":538,"line_end":538,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293050,"byte_end":293053,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293058,"byte_end":293076,"line_start":540,"line_end":540,"column_start":5,"column_end":23}},{"value":"/ tera.register_tester(\"odd\", testers::odd);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293081,"byte_end":293127,"line_start":541,"line_end":541,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293132,"byte_end":293139,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293338,"byte_end":293350,"line_start":549,"line_end":549,"column_start":12,"column_end":24},"name":"get_function","qualname":"<Tera>::get_function","value":"pub fn get_function(&Self, &str) -> Result<&dyn Function>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293317,"byte_end":293326,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293780,"byte_end":293797,"line_start":563,"line_end":563,"column_start":12,"column_end":29},"name":"register_function","qualname":"<Tera>::register_function","value":"pub fn register_function<F: Function + 'static>(&mut Self, &str, F)","parent":null,"children":[],"decl_id":null,"docs":" Register a function with Tera.","sig":null,"attributes":[{"value":"/ Register a function with Tera.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293559,"byte_end":293593,"line_start":556,"line_end":556,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293598,"byte_end":293601,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ If a function with that name already exists, it will be overwritten","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293606,"byte_end":293677,"line_start":558,"line_end":558,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293682,"byte_end":293685,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293690,"byte_end":293708,"line_start":560,"line_end":560,"column_start":5,"column_end":23}},{"value":"/ tera.register_function(\"range\", range);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293713,"byte_end":293756,"line_start":561,"line_end":561,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":293761,"byte_end":293768,"line_start":562,"line_end":562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298450,"byte_end":298463,"line_start":662,"line_end":662,"column_start":12,"column_end":25},"name":"autoescape_on","qualname":"<Tera>::autoescape_on","value":"pub fn autoescape_on(&mut Self, Vec<&'static str>)","parent":null,"children":[],"decl_id":null,"docs":" Select which suffix(es) to automatically do HTML escaping on,\n`[\".html\", \".htm\", \".xml\"]` by default.","sig":null,"attributes":[{"value":"/ Select which suffix(es) to automatically do HTML escaping on,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298027,"byte_end":298092,"line_start":650,"line_end":650,"column_start":5,"column_end":70}},{"value":"/`[\".html\", \".htm\", \".xml\"]` by default.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298097,"byte_end":298139,"line_start":651,"line_end":651,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298144,"byte_end":298147,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Only call this function if you wish to change the defaults.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298152,"byte_end":298215,"line_start":653,"line_end":653,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298220,"byte_end":298223,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298228,"byte_end":298231,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298236,"byte_end":298248,"line_start":656,"line_end":656,"column_start":5,"column_end":17}},{"value":"/ // escape only files ending with `.php.html`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298253,"byte_end":298301,"line_start":657,"line_end":657,"column_start":5,"column_end":53}},{"value":"/ tera.autoescape_on(vec![\".php.html\"]);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298306,"byte_end":298348,"line_start":658,"line_end":658,"column_start":5,"column_end":47}},{"value":"/ // disable autoescaping completely","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298353,"byte_end":298391,"line_start":659,"line_end":659,"column_start":5,"column_end":43}},{"value":"/ tera.autoescape_on(vec![]);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298396,"byte_end":298427,"line_start":660,"line_end":660,"column_start":5,"column_end":36}},{"value":"/```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298432,"byte_end":298438,"line_start":661,"line_end":661,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298602,"byte_end":298615,"line_start":668,"line_end":668,"column_start":12,"column_end":25},"name":"get_escape_fn","qualname":"<Tera>::get_escape_fn","value":"pub fn get_escape_fn(&Self) -> &EscapeFn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298581,"byte_end":298590,"line_start":667,"line_end":667,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299264,"byte_end":299277,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"set_escape_fn","qualname":"<Tera>::set_escape_fn","value":"pub fn set_escape_fn(&mut Self, EscapeFn)","parent":null,"children":[],"decl_id":null,"docs":" Set user-defined function which applied to a rendered content.","sig":null,"attributes":[{"value":"/ Set user-defined function which applied to a rendered content.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298673,"byte_end":298739,"line_start":672,"line_end":672,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298744,"byte_end":298747,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298752,"byte_end":298769,"line_start":674,"line_end":674,"column_start":5,"column_end":22}},{"value":"/ fn escape_c_string(input: &str) -> String { ... }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298774,"byte_end":298827,"line_start":675,"line_end":675,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298832,"byte_end":298835,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ // make valid C string literal","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298840,"byte_end":298874,"line_start":677,"line_end":677,"column_start":5,"column_end":39}},{"value":"/ tera.set_escape_fn(escape_c_string);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298879,"byte_end":298919,"line_start":678,"line_end":678,"column_start":5,"column_end":45}},{"value":"/ tera.add_raw_template(\"foo\", \"\\\"{{ content }}\\\"\").unwrap();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298924,"byte_end":298987,"line_start":679,"line_end":679,"column_start":5,"column_end":68}},{"value":"/ tera.autoescape_on(vec![\"foo\"]);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":298992,"byte_end":299028,"line_start":680,"line_end":680,"column_start":5,"column_end":41}},{"value":"/ let mut context = Context::new();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299033,"byte_end":299070,"line_start":681,"line_end":681,"column_start":5,"column_end":42}},{"value":"/ context.insert(\"content\", &\"Hello\\n\\'world\\\"!\");","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299075,"byte_end":299127,"line_start":682,"line_end":682,"column_start":5,"column_end":57}},{"value":"/ let result = tera.render(\"foo\", &context).unwrap();","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299132,"byte_end":299187,"line_start":683,"line_end":683,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(result, r#\"\"Hello\\n\\'world\\\"!\"\"#);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299192,"byte_end":299241,"line_start":684,"line_end":684,"column_start":5,"column_end":54}},{"value":"/```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299246,"byte_end":299252,"line_start":685,"line_end":685,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299426,"byte_end":299441,"line_start":691,"line_end":691,"column_start":12,"column_end":27},"name":"reset_escape_fn","qualname":"<Tera>::reset_escape_fn","value":"pub fn reset_escape_fn(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset escape function to default `tera::escape_html`.\n","sig":null,"attributes":[{"value":"/ Reset escape function to default `tera::escape_html`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299357,"byte_end":299414,"line_start":690,"line_end":690,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299882,"byte_end":299893,"line_start":701,"line_end":701,"column_start":12,"column_end":23},"name":"full_reload","qualname":"<Tera>::full_reload","value":"pub fn full_reload(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Re-parse all templates found in the glob given to Tera\n Use this when you are watching a directory and want to reload everything,\n for example when a file is added.","sig":null,"attributes":[{"value":"/ Re-parse all templates found in the glob given to Tera","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299504,"byte_end":299562,"line_start":695,"line_end":695,"column_start":5,"column_end":63}},{"value":"/ Use this when you are watching a directory and want to reload everything,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299567,"byte_end":299644,"line_start":696,"line_end":696,"column_start":5,"column_end":82}},{"value":"/ for example when a file is added.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299649,"byte_end":299686,"line_start":697,"line_end":697,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299691,"byte_end":299694,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ If you are adding templates without using a glob, we can't know when a template","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299699,"byte_end":299782,"line_start":699,"line_end":699,"column_start":5,"column_end":88}},{"value":"/ is deleted, which would result in an error if we are trying to reload that file","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":299787,"byte_end":299870,"line_start":700,"line_end":700,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":300666,"byte_end":300672,"line_start":721,"line_end":721,"column_start":12,"column_end":18},"name":"extend","qualname":"<Tera>::extend","value":"pub fn extend(&mut Self, &Tera) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Use that method when you want to add a given Tera instance templates/filters/testers/functions\n to your own. If a template/filter/tester/function with the same name already exists in your instance,\n it will not be overwritten.","sig":null,"attributes":[{"value":"/ Use that method when you want to add a given Tera instance templates/filters/testers/functions","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":300195,"byte_end":300293,"line_start":712,"line_end":712,"column_start":5,"column_end":103}},{"value":"/ to your own. If a template/filter/tester/function with the same name already exists in your instance,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":300298,"byte_end":300403,"line_start":713,"line_end":713,"column_start":5,"column_end":110}},{"value":"/ it will not be overwritten.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":300408,"byte_end":300439,"line_start":714,"line_end":714,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":300444,"byte_end":300447,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/```rust,ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":300452,"byte_end":300469,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ // add all the templates from FRAMEWORK_TERA","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":300474,"byte_end":300522,"line_start":717,"line_end":717,"column_start":5,"column_end":53}},{"value":"/ // except the ones that have an identical name to the ones in `my_tera`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":300527,"byte_end":300602,"line_start":718,"line_end":718,"column_start":5,"column_end":80}},{"value":"/ my_tera.extend(&FRAMEWORK_TERA);","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":300607,"byte_end":300643,"line_start":719,"line_end":719,"column_start":5,"column_end":41}},{"value":"/```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":300648,"byte_end":300654,"line_start":720,"line_end":720,"column_start":5,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317854,"byte_end":317865,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"escape_html","qualname":"::utils::escape_html","value":"pub fn escape_html(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escape HTML following [OWASP](https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet)","sig":null,"attributes":[{"value":"/ Escape HTML following [OWASP](https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317155,"byte_end":317271,"line_start":3,"line_end":3,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317272,"byte_end":317275,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Escape the following characters with HTML entity encoding to prevent switching","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317276,"byte_end":317358,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ into any execution context, such as script, style, or event handlers. Using","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317359,"byte_end":317438,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ hex entities is recommended in the spec. In addition to the 5 characters","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317439,"byte_end":317515,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ significant in XML (&, <, >, \", '), the forward slash is included as it helps","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317516,"byte_end":317597,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ to end an HTML entity.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317598,"byte_end":317624,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317625,"byte_end":317628,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317629,"byte_end":317640,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ & --> &amp;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317641,"byte_end":317656,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/ < --> &lt;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317657,"byte_end":317671,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/ > --> &gt;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317672,"byte_end":317686,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/ \" --> &quot;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317687,"byte_end":317703,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/ ' --> &#x27;     &apos; is not recommended","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317704,"byte_end":317750,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ / --> &#x2F;     forward slash is included as it helps end an HTML entity","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317751,"byte_end":317828,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317829,"byte_end":317836,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/utils.rs","byte_start":317837,"byte_end":317846,"line_start":19,"line_end":19,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1390,"byte_end":1397,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"helpers","qualname":"::helpers","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1231}],"decl_id":null,"docs":" Re-export some helper fns useful to write filters/fns/tests\n","sig":null,"attributes":[{"value":"/ Re-export some helper fns useful to write filters/fns/tests","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1318,"byte_end":1381,"line_start":46,"line_end":46,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1452,"byte_end":1457,"line_start":49,"line_end":49,"column_start":13,"column_end":18},"name":"tests","qualname":"::helpers::tests","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239}],"decl_id":null,"docs":" Functions helping writing tests\n","sig":null,"attributes":[{"value":"/ Functions helping writing tests","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/lib.rs","byte_start":1404,"byte_end":1439,"line_start":48,"line_end":48,"column_start":5,"column_end":40}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","byte_start":3455,"byte_end":3456,"line_start":23,"line_end":23,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","byte_start":85315,"byte_end":85316,"line_start":22,"line_end":22,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":95419,"byte_end":95420,"line_start":12,"line_end":12,"column_start":18,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":106978,"byte_end":106985,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":110787,"byte_end":110794,"line_start":132,"line_end":132,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":111010,"byte_end":111015,"line_start":143,"line_end":143,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":111986,"byte_end":111991,"line_start":173,"line_end":173,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":112272,"byte_end":112277,"line_start":187,"line_end":187,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":118180,"byte_end":118185,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":120103,"byte_end":120108,"line_start":102,"line_end":102,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":120257,"byte_end":120262,"line_start":108,"line_end":108,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123661,"byte_end":123666,"line_start":203,"line_end":203,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123772,"byte_end":123777,"line_start":208,"line_end":208,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123862,"byte_end":123867,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123965,"byte_end":123970,"line_start":218,"line_end":218,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":124493,"byte_end":124503,"line_start":8,"line_end":8,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":124711,"byte_end":124721,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":124739,"byte_end":124749,"line_start":20,"line_end":20,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":125109,"byte_end":125119,"line_start":34,"line_end":34,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":125657,"byte_end":125663,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":125893,"byte_end":125901,"line_start":61,"line_end":61,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":126358,"byte_end":126367,"line_start":79,"line_end":79,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":126878,"byte_end":126887,"line_start":97,"line_end":97,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":127993,"byte_end":127999,"line_start":135,"line_end":135,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":128126,"byte_end":128139,"line_start":141,"line_end":141,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":128300,"byte_end":128313,"line_start":147,"line_end":147,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176755,"byte_end":176757,"line_start":13,"line_end":13,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177048,"byte_end":177060,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177715,"byte_end":177728,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179298,"byte_end":179310,"line_start":128,"line_end":128,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180958,"byte_end":180962,"line_start":187,"line_end":187,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/call_stack.rs","byte_start":197633,"byte_end":197644,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/call_stack.rs","byte_start":198470,"byte_end":198479,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/for_loop.rs","byte_start":206095,"byte_end":206108,"line_start":39,"line_end":39,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/for_loop.rs","byte_start":208111,"byte_end":208118,"line_start":88,"line_end":88,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/macros.rs","byte_start":213084,"byte_end":213099,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/processor.rs","byte_start":221245,"byte_end":221254,"line_start":121,"line_end":121,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":922},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/stack_frame.rs","byte_start":262199,"byte_end":262209,"line_start":58,"line_end":58,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/mod.rs","byte_start":194152,"byte_end":194160,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268941,"byte_end":268949,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":274538,"byte_end":274542,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1112},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":301682,"byte_end":301686,"line_start":753,"line_end":753,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":302270,"byte_end":302274,"line_start":773,"line_end":773,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/mod.rs","byte_start":129811,"byte_end":129814,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":573}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","byte_start":3146,"byte_end":3150,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":261}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","byte_start":3153,"byte_end":3157,"line_start":13,"line_end":13,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":261}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/filters/mod.rs","byte_start":3455,"byte_end":3456,"line_start":23,"line_end":23,"column_start":20,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":265},"to":{"krate":0,"index":261}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","byte_start":85019,"byte_end":85023,"line_start":12,"line_end":12,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":292}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","byte_start":85026,"byte_end":85030,"line_start":12,"line_end":12,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":292}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/functions.rs","byte_start":85315,"byte_end":85316,"line_start":22,"line_end":22,"column_start":22,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":296},"to":{"krate":0,"index":292}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":95266,"byte_end":95270,"line_start":7,"line_end":7,"column_start":17,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":320}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":95273,"byte_end":95277,"line_start":7,"line_end":7,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":320}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/builtins/testers.rs","byte_start":95419,"byte_end":95420,"line_start":12,"line_end":12,"column_start":18,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":323},"to":{"krate":0,"index":320}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":106978,"byte_end":106985,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":110787,"byte_end":110794,"line_start":132,"line_end":132,"column_start":18,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1275},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":111010,"byte_end":111015,"line_start":143,"line_end":143,"column_start":22,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":18,"index":2590},"to":{"krate":0,"index":394}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":111986,"byte_end":111991,"line_start":173,"line_end":173,"column_start":22,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":18,"index":2590},"to":{"krate":0,"index":400}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/context.rs","byte_start":112272,"byte_end":112277,"line_start":187,"line_end":187,"column_start":22,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":18,"index":2590},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":118180,"byte_end":118185,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":120103,"byte_end":120108,"line_start":102,"line_end":102,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1342},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":120257,"byte_end":120262,"line_start":108,"line_end":108,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123661,"byte_end":123666,"line_start":203,"line_end":203,"column_start":31,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123772,"byte_end":123777,"line_start":208,"line_end":208,"column_start":21,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123862,"byte_end":123867,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/errors.rs","byte_start":123965,"byte_end":123970,"line_start":218,"line_end":218,"column_start":34,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":124493,"byte_end":124503,"line_start":8,"line_end":8,"column_start":6,"column_end":16},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":124711,"byte_end":124721,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":124739,"byte_end":124749,"line_start":20,"line_end":20,"column_start":14,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2691}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":125019,"byte_end":125022,"line_start":30,"line_end":30,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2691},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":125025,"byte_end":125030,"line_start":30,"line_end":30,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":125033,"byte_end":125038,"line_start":30,"line_end":30,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":125109,"byte_end":125119,"line_start":34,"line_end":34,"column_start":19,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1347},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":125657,"byte_end":125663,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":125893,"byte_end":125901,"line_start":61,"line_end":61,"column_start":19,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1361},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":126358,"byte_end":126367,"line_start":79,"line_end":79,"column_start":19,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":126878,"byte_end":126887,"line_start":97,"line_end":97,"column_start":36,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1380},"to":{"krate":0,"index":514}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":127993,"byte_end":127999,"line_start":135,"line_end":135,"column_start":61,"column_end":67},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1386},"to":{"krate":0,"index":528}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":128126,"byte_end":128139,"line_start":141,"line_end":141,"column_start":6,"column_end":19},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/filter_utils.rs","byte_start":128300,"byte_end":128313,"line_start":147,"line_end":147,"column_start":25,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":525},"to":{"krate":0,"index":528}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":176755,"byte_end":176757,"line_start":13,"line_end":13,"column_start":18,"column_end":20},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2796},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177048,"byte_end":177060,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2808},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":177715,"byte_end":177728,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2827},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":179298,"byte_end":179310,"line_start":128,"line_end":128,"column_start":6,"column_end":18},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/parser/ast.rs","byte_start":180958,"byte_end":180962,"line_start":187,"line_end":187,"column_start":6,"column_end":10},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/call_stack.rs","byte_start":197633,"byte_end":197644,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/call_stack.rs","byte_start":198470,"byte_end":198479,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/for_loop.rs","byte_start":206095,"byte_end":206108,"line_start":39,"line_end":39,"column_start":10,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/for_loop.rs","byte_start":208111,"byte_end":208118,"line_start":88,"line_end":88,"column_start":10,"column_end":17},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/macros.rs","byte_start":213084,"byte_end":213099,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/processor.rs","byte_start":221245,"byte_end":221254,"line_start":121,"line_end":121,"column_start":10,"column_end":19},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/stack_frame.rs","byte_start":262199,"byte_end":262209,"line_start":58,"line_end":58,"column_start":10,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/renderer/mod.rs","byte_start":194152,"byte_end":194160,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/template.rs","byte_start":268941,"byte_end":268949,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":274538,"byte_end":274542,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":301682,"byte_end":301686,"line_start":753,"line_end":753,"column_start":18,"column_end":22},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3300},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-1.15.0/src/tera.rs","byte_start":302270,"byte_end":302274,"line_start":773,"line_end":773,"column_start":21,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3300},"to":{"krate":2,"index":9352}}]}