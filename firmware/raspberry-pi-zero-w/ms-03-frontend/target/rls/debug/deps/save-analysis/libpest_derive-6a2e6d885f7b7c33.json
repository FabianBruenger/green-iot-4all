{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0","program":"/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","pest_derive","/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","proc-macro","--emit=dep-info,link","-C","prefer-dynamic","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=6a2e6d885f7b7c33","-C","extra-filename=-6a2e6d885f7b7c33","--out-dir","/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","-L","dependency=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","--extern","pest=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libpest-c05b1d7bbc935f33.rlib","--extern","pest_generator=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libpest_generator-a69ccd2e7665f716.rlib","--extern","proc_macro","--cap-lints","allow","--error-format=json","--sysroot","/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libpest_derive-6a2e6d885f7b7c33.dylib"},"prelude":{"crate_id":{"name":"pest_derive","disambiguator":[13688379427595071261,0]},"crate_root":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src","external_crates":[{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":18,"id":{"name":"pest_generator","disambiguator":[6015979809488507916,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":19,"id":{"name":"pest","disambiguator":[3726486595860404368,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":20,"id":{"name":"ucd_trie","disambiguator":[3631089377037924354,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":21,"id":{"name":"pest_meta","disambiguator":[7939447488516312635,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":22,"id":{"name":"maplit","disambiguator":[14737163854375999162,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":23,"id":{"name":"proc_macro","disambiguator":[18266913648533699382,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":24,"id":{"name":"proc_macro2","disambiguator":[16336062547486062591,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":25,"id":{"name":"unicode_xid","disambiguator":[15162709012015178924,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":26,"id":{"name":"quote","disambiguator":[7378568600167851313,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","num":27,"id":{"name":"syn","disambiguator":[17549440786808951467,0]}}],"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":407,"byte_end":12145,"line_start":10,"line_end":302,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":407,"byte_end":12145,"line_start":10,"line_end":302,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9}],"decl_id":null,"docs":" # pest. The Elegant Parser","sig":null,"attributes":[{"value":"/ # pest. The Elegant Parser","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":407,"byte_end":437,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":438,"byte_end":441,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ pest is a general purpose parser written in Rust with a focus on accessibility, correctness,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":442,"byte_end":538,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ and performance. It uses parsing expression grammars (or [PEG]) as input, which are similar in","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":539,"byte_end":637,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ spirit to regular expressions, but which offer the enhanced expressivity needed to parse","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":638,"byte_end":730,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/ complex languages.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":731,"byte_end":753,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":754,"byte_end":757,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [PEG]: https://en.wikipedia.org/wiki/Parsing_expression_grammar","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":758,"byte_end":825,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":826,"byte_end":829,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Getting started","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":830,"byte_end":852,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":853,"byte_end":856,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The recommended way to start parsing with pest is to read the official [book].","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":857,"byte_end":939,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":940,"byte_end":943,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Other helpful resources:","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":944,"byte_end":972,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":973,"byte_end":976,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * API reference on [docs.rs]","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":977,"byte_end":1009,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ * play with grammars and share them on our [fiddle]","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1010,"byte_end":1065,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ * leave feedback, ask questions, or greet us on [Gitter]","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1066,"byte_end":1126,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1127,"byte_end":1130,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [book]: https://pest-parser.github.io/book","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1131,"byte_end":1177,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ [docs.rs]: https://docs.rs/pest","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1178,"byte_end":1213,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ [fiddle]: https://pest-parser.github.io/#editor","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1214,"byte_end":1265,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [Gitter]: https://gitter.im/dragostis/pest","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1266,"byte_end":1312,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1313,"byte_end":1316,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ## `.pest` files","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1317,"byte_end":1337,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1338,"byte_end":1341,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Grammar definitions reside in custom `.pest` files located in the `src` directory. Their path is","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1342,"byte_end":1442,"line_start":36,"line_end":36,"column_start":1,"column_end":101}},{"value":"/ relative to `src` and is specified between the `derive` attribute and empty `struct` that","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1443,"byte_end":1536,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/ `Parser` will be derived on.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1537,"byte_end":1569,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1570,"byte_end":1573,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1574,"byte_end":1587,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ #[derive(Parser)]","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1588,"byte_end":1609,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ #[grammar = \"path/to/my_grammar.pest\"] // relative to src","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1610,"byte_end":1671,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/ struct MyParser;","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1672,"byte_end":1692,"line_start":43,"line_end":43,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1693,"byte_end":1700,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1701,"byte_end":1704,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Inline grammars","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1705,"byte_end":1727,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1728,"byte_end":1731,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Grammars can also be inlined by using the `#[grammar_inline = \"...\"]` attribute.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1732,"byte_end":1816,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1817,"byte_end":1820,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Grammar","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1821,"byte_end":1835,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1836,"byte_end":1839,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A grammar is a series of rules separated by whitespace, possibly containing comments.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1840,"byte_end":1929,"line_start":52,"line_end":52,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1930,"byte_end":1933,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ### Comments","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1934,"byte_end":1950,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1951,"byte_end":1954,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Comments start with `//` and end at the end of the line.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":1955,"byte_end":2015,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2016,"byte_end":2019,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2020,"byte_end":2033,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/ // a comment","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2034,"byte_end":2050,"line_start":59,"line_end":59,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2051,"byte_end":2058,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2059,"byte_end":2062,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ### Rules","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2063,"byte_end":2076,"line_start":62,"line_end":62,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2077,"byte_end":2080,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Rules have the following form:","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2081,"byte_end":2115,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2116,"byte_end":2119,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2120,"byte_end":2133,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/ name = optional_modifier { expression }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2134,"byte_end":2177,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2178,"byte_end":2185,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2186,"byte_end":2189,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The name of the rule is formed from alphanumeric characters or `_` with the condition that the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2190,"byte_end":2288,"line_start":70,"line_end":70,"column_start":1,"column_end":99}},{"value":"/ first character is not a digit and is used to create token pairs. When the rule starts being","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2289,"byte_end":2385,"line_start":71,"line_end":71,"column_start":1,"column_end":97}},{"value":"/ parsed, the starting part of the token is being produced, with the ending part being produced","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2386,"byte_end":2483,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/ when the rule finishes parsing.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2484,"byte_end":2519,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2520,"byte_end":2523,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The following token pair notation `a(b(), c())` denotes the tokens: start `a`, start `b`, end","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2524,"byte_end":2621,"line_start":75,"line_end":75,"column_start":1,"column_end":98}},{"value":"/ `b`, start `c`, end `c`, end `a`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2622,"byte_end":2659,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2660,"byte_end":2663,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ #### Modifiers","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2664,"byte_end":2682,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2683,"byte_end":2686,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Modifiers are optional and can be one of `_`, `@`, `$`, or `!`. These modifiers change the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2687,"byte_end":2781,"line_start":80,"line_end":80,"column_start":1,"column_end":95}},{"value":"/ behavior of the rules.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2782,"byte_end":2808,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2809,"byte_end":2812,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ 1. Silent (`_`)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2813,"byte_end":2832,"line_start":83,"line_end":83,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2833,"byte_end":2836,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     Silent rules do not create token pairs during parsing, nor are they error-reported.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2837,"byte_end":2928,"line_start":85,"line_end":85,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2929,"byte_end":2932,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2933,"byte_end":2950,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/     a = _{ \"a\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2951,"byte_end":2971,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/     b =  { a ~ \"b\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2972,"byte_end":2996,"line_start":89,"line_end":89,"column_start":1,"column_end":25}},{"value":"/     ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":2997,"byte_end":3008,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3009,"byte_end":3012,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     Parsing `\"ab\"` produces the token pair `b()`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3013,"byte_end":3066,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3067,"byte_end":3070,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ 2. Atomic (`@`)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3071,"byte_end":3090,"line_start":94,"line_end":94,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3091,"byte_end":3094,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     Atomic rules do not accept whitespace or comments within their expressions and have a","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3095,"byte_end":3188,"line_start":96,"line_end":96,"column_start":1,"column_end":94}},{"value":"/     cascading effect on any rule they call. I.e. rules that are not atomic but are called by atomic","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3189,"byte_end":3292,"line_start":97,"line_end":97,"column_start":1,"column_end":104}},{"value":"/     rules behave atomically.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3293,"byte_end":3325,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3326,"byte_end":3329,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/     Any rules called by atomic rules do not generate token pairs.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3330,"byte_end":3399,"line_start":100,"line_end":100,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3400,"byte_end":3403,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3404,"byte_end":3421,"line_start":102,"line_end":102,"column_start":1,"column_end":18}},{"value":"/     a =  { \"a\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3422,"byte_end":3442,"line_start":103,"line_end":103,"column_start":1,"column_end":21}},{"value":"/     b = @{ a ~ \"b\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3443,"byte_end":3467,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3468,"byte_end":3471,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/     WHITESPACE = _{ \" \" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3472,"byte_end":3501,"line_start":106,"line_end":106,"column_start":1,"column_end":30}},{"value":"/     ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3502,"byte_end":3513,"line_start":107,"line_end":107,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3514,"byte_end":3517,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/     Parsing `\"ab\"` produces the token pair `b()`, while `\"a   b\"` produces an error.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3518,"byte_end":3606,"line_start":109,"line_end":109,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3607,"byte_end":3610,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ 3. Compound-atomic (`$`)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3611,"byte_end":3639,"line_start":111,"line_end":111,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3640,"byte_end":3643,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     Compound-atomic are identical to atomic rules with the exception that rules called by them are","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3644,"byte_end":3746,"line_start":113,"line_end":113,"column_start":1,"column_end":103}},{"value":"/     not forbidden from generating token pairs.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3747,"byte_end":3797,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3798,"byte_end":3801,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3802,"byte_end":3819,"line_start":116,"line_end":116,"column_start":1,"column_end":18}},{"value":"/     a =  { \"a\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3820,"byte_end":3840,"line_start":117,"line_end":117,"column_start":1,"column_end":21}},{"value":"/     b = ${ a ~ \"b\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3841,"byte_end":3865,"line_start":118,"line_end":118,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3866,"byte_end":3869,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     WHITESPACE = _{ \" \" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3870,"byte_end":3899,"line_start":120,"line_end":120,"column_start":1,"column_end":30}},{"value":"/     ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3900,"byte_end":3911,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3912,"byte_end":3915,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/     Parsing `\"ab\"` produces the token pairs `b(a())`, while `\"a   b\"` produces an error.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":3916,"byte_end":4008,"line_start":123,"line_end":123,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4009,"byte_end":4012,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ 4. Non-atomic (`!`)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4013,"byte_end":4036,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4037,"byte_end":4040,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/     Non-atomic are identical to normal rules with the exception that they stop the cascading effect","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4041,"byte_end":4144,"line_start":127,"line_end":127,"column_start":1,"column_end":104}},{"value":"/     of atomic and compound-atomic rules.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4145,"byte_end":4189,"line_start":128,"line_end":128,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4190,"byte_end":4193,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/     ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4194,"byte_end":4211,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/     a =  { \"a\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4212,"byte_end":4232,"line_start":131,"line_end":131,"column_start":1,"column_end":21}},{"value":"/     b = !{ a ~ \"b\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4233,"byte_end":4257,"line_start":132,"line_end":132,"column_start":1,"column_end":25}},{"value":"/     c = @{ b }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4258,"byte_end":4276,"line_start":133,"line_end":133,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4277,"byte_end":4280,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/     WHITESPACE = _{ \" \" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4281,"byte_end":4310,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/     ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4311,"byte_end":4322,"line_start":136,"line_end":136,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4323,"byte_end":4326,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/     Parsing both `\"ab\"` and `\"a   b\"` produce the token pairs `c(a())`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4327,"byte_end":4402,"line_start":138,"line_end":138,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4403,"byte_end":4406,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ #### Expressions","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4407,"byte_end":4427,"line_start":140,"line_end":140,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4428,"byte_end":4431,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ Expressions can be either terminals or non-terminals.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4432,"byte_end":4489,"line_start":142,"line_end":142,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4490,"byte_end":4493,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ 1. Terminals","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4494,"byte_end":4510,"line_start":144,"line_end":144,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4511,"byte_end":4514,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     | Terminal   | Usage                                                          |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4515,"byte_end":4602,"line_start":146,"line_end":146,"column_start":1,"column_end":88}},{"value":"/     |------------|----------------------------------------------------------------|","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4603,"byte_end":4690,"line_start":147,"line_end":147,"column_start":1,"column_end":88}},{"value":"/     | `\"a\"`      | matches the exact string `\"a\"`                                 |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4691,"byte_end":4778,"line_start":148,"line_end":148,"column_start":1,"column_end":88}},{"value":"/     | `^\"a\"`     | matches the exact string `\"a\"` case insensitively (ASCII only) |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4779,"byte_end":4866,"line_start":149,"line_end":149,"column_start":1,"column_end":88}},{"value":"/     | `'a'..'z'` | matches one character between `'a'` and `'z'`                  |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4867,"byte_end":4954,"line_start":150,"line_end":150,"column_start":1,"column_end":88}},{"value":"/     | `a`        | matches rule `a`                                               |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":4955,"byte_end":5042,"line_start":151,"line_end":151,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5043,"byte_end":5046,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Strings and characters follow","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5047,"byte_end":5080,"line_start":153,"line_end":153,"column_start":1,"column_end":34}},{"value":"/ [Rust's escape mechanisms](https://doc.rust-lang.org/reference/tokens.html#byte-escapes), while","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5081,"byte_end":5180,"line_start":154,"line_end":154,"column_start":1,"column_end":100}},{"value":"/ identifiers can contain alpha-numeric characters and underscores (`_`), as long as they do not","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5181,"byte_end":5279,"line_start":155,"line_end":155,"column_start":1,"column_end":99}},{"value":"/ start with a digit.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5280,"byte_end":5303,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5304,"byte_end":5307,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ 2. Non-terminals","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5308,"byte_end":5328,"line_start":158,"line_end":158,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5329,"byte_end":5332,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     | Non-terminal          | Usage                                                      |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5333,"byte_end":5427,"line_start":160,"line_end":160,"column_start":1,"column_end":95}},{"value":"/     |-----------------------|------------------------------------------------------------|","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5428,"byte_end":5522,"line_start":161,"line_end":161,"column_start":1,"column_end":95}},{"value":"/     | `(e)`                 | matches `e`                                                |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5523,"byte_end":5617,"line_start":162,"line_end":162,"column_start":1,"column_end":95}},{"value":"/     | `e1 ~ e2`             | matches the sequence `e1` `e2`                             |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5618,"byte_end":5712,"line_start":163,"line_end":163,"column_start":1,"column_end":95}},{"value":"/     | <code>e1 \\| e2</code> | matches either `e1` or `e2`                                |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5713,"byte_end":5807,"line_start":164,"line_end":164,"column_start":1,"column_end":95}},{"value":"/     | `e*`                  | matches `e` zero or more times                             |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5808,"byte_end":5902,"line_start":165,"line_end":165,"column_start":1,"column_end":95}},{"value":"/     | `e+`                  | matches `e` one or more times                              |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5903,"byte_end":5997,"line_start":166,"line_end":166,"column_start":1,"column_end":95}},{"value":"/     | `e{n}`                | matches `e` exactly `n` times                              |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":5998,"byte_end":6092,"line_start":167,"line_end":167,"column_start":1,"column_end":95}},{"value":"/     | `e{, n}`              | matches `e` at most `n` times                              |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6093,"byte_end":6187,"line_start":168,"line_end":168,"column_start":1,"column_end":95}},{"value":"/     | `e{n,} `              | matches `e` at least `n` times                             |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6188,"byte_end":6282,"line_start":169,"line_end":169,"column_start":1,"column_end":95}},{"value":"/     | `e{m, n}`             | matches `e` between `m` and `n` times inclusively          |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6283,"byte_end":6377,"line_start":170,"line_end":170,"column_start":1,"column_end":95}},{"value":"/     | `e?`                  | optionally matches `e`                                     |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6378,"byte_end":6472,"line_start":171,"line_end":171,"column_start":1,"column_end":95}},{"value":"/     | `&e`                  | matches `e` without making progress                        |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6473,"byte_end":6567,"line_start":172,"line_end":172,"column_start":1,"column_end":95}},{"value":"/     | `!e`                  | matches if `e` doesn't match without making progress       |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6568,"byte_end":6662,"line_start":173,"line_end":173,"column_start":1,"column_end":95}},{"value":"/     | `PUSH(e)`             | matches `e` and pushes it's captured string down the stack |","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6663,"byte_end":6757,"line_start":174,"line_end":174,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6758,"byte_end":6761,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/     where `e`, `e1`, and `e2` are expressions.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6762,"byte_end":6812,"line_start":176,"line_end":176,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6813,"byte_end":6816,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Expressions can modify the stack only if they match the input. For example,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6817,"byte_end":6896,"line_start":178,"line_end":178,"column_start":1,"column_end":80}},{"value":"/ if `e1` in the compound expression `e1 | e2` does not match the input, then","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6897,"byte_end":6976,"line_start":179,"line_end":179,"column_start":1,"column_end":80}},{"value":"/ it does not modify the stack, so `e2` sees the stack in the same state as","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":6977,"byte_end":7054,"line_start":180,"line_end":180,"column_start":1,"column_end":78}},{"value":"/ `e1` did. Repetitions and optionals (`e*`, `e+`, `e{, n}`, `e{n,}`,","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7055,"byte_end":7126,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"/ `e{m,n}`, `e?`) can modify the stack each time `e` matches. The `!e` and `&e`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7127,"byte_end":7208,"line_start":182,"line_end":182,"column_start":1,"column_end":82}},{"value":"/ expressions are a special case; they never modify the stack.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7209,"byte_end":7273,"line_start":183,"line_end":183,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7274,"byte_end":7277,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ## Special rules","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7278,"byte_end":7298,"line_start":185,"line_end":185,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7299,"byte_end":7302,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ Special rules can be called within the grammar. They are:","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7303,"byte_end":7364,"line_start":187,"line_end":187,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7365,"byte_end":7368,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ * `WHITESPACE` - runs between rules and sub-rules","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7369,"byte_end":7422,"line_start":189,"line_end":189,"column_start":1,"column_end":54}},{"value":"/ * `COMMENT` - runs between rules and sub-rules","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7423,"byte_end":7473,"line_start":190,"line_end":190,"column_start":1,"column_end":51}},{"value":"/ * `ANY` - matches exactly one `char`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7474,"byte_end":7514,"line_start":191,"line_end":191,"column_start":1,"column_end":41}},{"value":"/ * `SOI` - (start-of-input) matches only when a `Parser` is still at the starting position","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7515,"byte_end":7608,"line_start":192,"line_end":192,"column_start":1,"column_end":94}},{"value":"/ * `EOI` - (end-of-input) matches only when a `Parser` has reached its end","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7609,"byte_end":7686,"line_start":193,"line_end":193,"column_start":1,"column_end":78}},{"value":"/ * `POP` - pops a string from the stack and matches it","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7687,"byte_end":7744,"line_start":194,"line_end":194,"column_start":1,"column_end":58}},{"value":"/ * `POP_ALL` - pops the entire state of the stack and matches it","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7745,"byte_end":7812,"line_start":195,"line_end":195,"column_start":1,"column_end":68}},{"value":"/ * `PEEK` - peeks a string from the stack and matches it","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7813,"byte_end":7872,"line_start":196,"line_end":196,"column_start":1,"column_end":60}},{"value":"/ * `PEEK[a..b]` - peeks part of the stack and matches it","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7873,"byte_end":7932,"line_start":197,"line_end":197,"column_start":1,"column_end":60}},{"value":"/ * `PEEK_ALL` - peeks the entire state of the stack and matches it","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":7933,"byte_end":8002,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"/ * `DROP` - drops the top of the stack (fails to match if the stack is empty)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8003,"byte_end":8083,"line_start":199,"line_end":199,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8084,"byte_end":8087,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ `WHITESPACE` and `COMMENT` should be defined manually if needed. All other rules cannot be","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8088,"byte_end":8182,"line_start":201,"line_end":201,"column_start":1,"column_end":95}},{"value":"/ overridden.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8183,"byte_end":8198,"line_start":202,"line_end":202,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8199,"byte_end":8202,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ## `WHITESPACE` and `COMMENT`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8203,"byte_end":8236,"line_start":204,"line_end":204,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8237,"byte_end":8240,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ When defined, these rules get matched automatically in sequences (`~`) and repetitions","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8241,"byte_end":8331,"line_start":206,"line_end":206,"column_start":1,"column_end":91}},{"value":"/ (`*`, `+`) between expressions. Atomic rules and those rules called by atomic rules are exempt","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8332,"byte_end":8430,"line_start":207,"line_end":207,"column_start":1,"column_end":99}},{"value":"/ from this behavior.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8431,"byte_end":8454,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8455,"byte_end":8458,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ These rules should be defined so as to match one whitespace character and one comment only since","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8459,"byte_end":8559,"line_start":210,"line_end":210,"column_start":1,"column_end":101}},{"value":"/ they are run in repetitions.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8560,"byte_end":8592,"line_start":211,"line_end":211,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8593,"byte_end":8596,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ If both `WHITESPACE` and `COMMENT` are defined, this grammar:","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8597,"byte_end":8662,"line_start":213,"line_end":213,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8663,"byte_end":8666,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8667,"byte_end":8680,"line_start":215,"line_end":215,"column_start":1,"column_end":14}},{"value":"/ a = { b ~ c }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8681,"byte_end":8698,"line_start":216,"line_end":216,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8699,"byte_end":8706,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8707,"byte_end":8710,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ is effectively transformed into this one behind the scenes:","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8711,"byte_end":8774,"line_start":219,"line_end":219,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8775,"byte_end":8778,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8779,"byte_end":8792,"line_start":221,"line_end":221,"column_start":1,"column_end":14}},{"value":"/ a = { b ~ WHITESPACE* ~ (COMMENT ~ WHITESPACE*)* ~ c }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8793,"byte_end":8851,"line_start":222,"line_end":222,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8852,"byte_end":8859,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8860,"byte_end":8863,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ## `PUSH`, `POP`, `DROP`, and `PEEK`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8864,"byte_end":8904,"line_start":225,"line_end":225,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8905,"byte_end":8908,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ `PUSH(e)` simply pushes the captured string of the expression `e` down a stack. This stack can","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":8909,"byte_end":9007,"line_start":227,"line_end":227,"column_start":1,"column_end":99}},{"value":"/ then later be used to match grammar based on its content with `POP` and `PEEK`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9008,"byte_end":9091,"line_start":228,"line_end":228,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9092,"byte_end":9095,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ `PEEK` always matches the string at the top of stack. So, if the stack contains `[\"b\", \"a\"]`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9096,"byte_end":9192,"line_start":230,"line_end":230,"column_start":1,"column_end":97}},{"value":"/ (`\"a\"` being on top), this grammar:","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9193,"byte_end":9232,"line_start":231,"line_end":231,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9233,"byte_end":9236,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9237,"byte_end":9250,"line_start":233,"line_end":233,"column_start":1,"column_end":14}},{"value":"/ a = { PEEK }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9251,"byte_end":9267,"line_start":234,"line_end":234,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9268,"byte_end":9275,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9276,"byte_end":9279,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ is effectively transformed into at parse time:","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9280,"byte_end":9330,"line_start":237,"line_end":237,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9331,"byte_end":9334,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9335,"byte_end":9348,"line_start":239,"line_end":239,"column_start":1,"column_end":14}},{"value":"/ a = { \"a\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9349,"byte_end":9364,"line_start":240,"line_end":240,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9365,"byte_end":9372,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9373,"byte_end":9376,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ `POP` works the same way with the exception that it pops the string off of the stack if the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9377,"byte_end":9472,"line_start":243,"line_end":243,"column_start":1,"column_end":96}},{"value":"/ match worked. With the stack from above, if `POP` matches `\"a\"`, the stack will be mutated","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9473,"byte_end":9567,"line_start":244,"line_end":244,"column_start":1,"column_end":95}},{"value":"/ to `[\"b\"]`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9568,"byte_end":9583,"line_start":245,"line_end":245,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9584,"byte_end":9587,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ `DROP` makes it possible to remove the string at the top of the stack","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9588,"byte_end":9661,"line_start":247,"line_end":247,"column_start":1,"column_end":74}},{"value":"/ without matching it. If the stack is nonempty, `DROP` drops the top of the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9662,"byte_end":9740,"line_start":248,"line_end":248,"column_start":1,"column_end":79}},{"value":"/ stack. If the stack is empty, then `DROP` fails to match.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9741,"byte_end":9802,"line_start":249,"line_end":249,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9803,"byte_end":9806,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ ### Advanced peeking","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9807,"byte_end":9831,"line_start":251,"line_end":251,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9832,"byte_end":9835,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ `PEEK[start..end]` and `PEEK_ALL` allow to peek deeper into the stack. The syntax works exactly","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9836,"byte_end":9935,"line_start":253,"line_end":253,"column_start":1,"column_end":100}},{"value":"/ like Rust’s exclusive slice syntax. Additionally, negative indices can be used to indicate an","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":9936,"byte_end":10035,"line_start":254,"line_end":254,"column_start":1,"column_end":98}},{"value":"/ offset from the top. If the end lies before or at the start, the expression matches (as does","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10036,"byte_end":10132,"line_start":255,"line_end":255,"column_start":1,"column_end":97}},{"value":"/ a `PEEK_ALL` on an empty stack). With the stack `[\"c\", \"b\", \"a\"]` (`\"a\"` on top):","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10133,"byte_end":10218,"line_start":256,"line_end":256,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10219,"byte_end":10222,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10223,"byte_end":10236,"line_start":258,"line_end":258,"column_start":1,"column_end":14}},{"value":"/ fill = PUSH(\"c\") ~ PUSH(\"b\") ~ PUSH(\"a\")","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10237,"byte_end":10281,"line_start":259,"line_end":259,"column_start":1,"column_end":45}},{"value":"/ v = { PEEK_ALL } = { \"a\" ~ \"b\" ~ \"c\" }  // top to bottom","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10282,"byte_end":10342,"line_start":260,"line_end":260,"column_start":1,"column_end":61}},{"value":"/ w = { PEEK[..] } = { \"c\" ~ \"b\" ~ \"a\" }  // bottom to top","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10343,"byte_end":10403,"line_start":261,"line_end":261,"column_start":1,"column_end":61}},{"value":"/ x = { PEEK[1..2] } = { PEEK[1..-1] } = { \"b\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10404,"byte_end":10454,"line_start":262,"line_end":262,"column_start":1,"column_end":51}},{"value":"/ y = { PEEK[..-2] } = { PEEK[0..1] } = { \"a\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10455,"byte_end":10504,"line_start":263,"line_end":263,"column_start":1,"column_end":50}},{"value":"/ z = { PEEK[1..] } = { PEEK[-2..3] } = { \"c\" ~ \"b\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10505,"byte_end":10560,"line_start":264,"line_end":264,"column_start":1,"column_end":56}},{"value":"/ n = { PEEK[2..-2] } = { PEEK[2..1] } = { \"\" }","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10561,"byte_end":10610,"line_start":265,"line_end":265,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10611,"byte_end":10618,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10619,"byte_end":10622,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ For historical reasons, `PEEK_ALL` matches from top to bottom, while `PEEK[start..end]` matches","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10623,"byte_end":10722,"line_start":268,"line_end":268,"column_start":1,"column_end":100}},{"value":"/ from bottom to top. There is currectly no syntax to match a slice of the stack top to bottom.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10723,"byte_end":10820,"line_start":269,"line_end":269,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10821,"byte_end":10824,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ## `Rule`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10825,"byte_end":10838,"line_start":271,"line_end":271,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10839,"byte_end":10842,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ All rules defined or used in the grammar populate a generated `enum` called `Rule`. This","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10843,"byte_end":10935,"line_start":273,"line_end":273,"column_start":1,"column_end":93}},{"value":"/ implements `pest`'s `RuleType` and can be used throughout the API.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":10936,"byte_end":11006,"line_start":274,"line_end":274,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11007,"byte_end":11010,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ ## `Built-in rules`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11011,"byte_end":11034,"line_start":276,"line_end":276,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11035,"byte_end":11038,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ Pest also comes with a number of built-in rules for convenience. They are:","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11039,"byte_end":11117,"line_start":278,"line_end":278,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11118,"byte_end":11121,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ * `ASCII_DIGIT` - matches a numeric character from 0..9","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11122,"byte_end":11181,"line_start":280,"line_end":280,"column_start":1,"column_end":60}},{"value":"/ * `ASCII_NONZERO_DIGIT` - matches a numeric character from 1..9","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11182,"byte_end":11249,"line_start":281,"line_end":281,"column_start":1,"column_end":68}},{"value":"/ * `ASCII_BIN_DIGIT` - matches a numeric character from 0..1","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11250,"byte_end":11313,"line_start":282,"line_end":282,"column_start":1,"column_end":64}},{"value":"/ * `ASCII_OCT_DIGIT` - matches a numeric character from 0..7","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11314,"byte_end":11377,"line_start":283,"line_end":283,"column_start":1,"column_end":64}},{"value":"/ * `ASCII_HEX_DIGIT` - matches a numeric character from 0..9 or a..f or A..F","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11378,"byte_end":11457,"line_start":284,"line_end":284,"column_start":1,"column_end":80}},{"value":"/ * `ASCII_ALPHA_LOWER` - matches a character from a..z","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11458,"byte_end":11515,"line_start":285,"line_end":285,"column_start":1,"column_end":58}},{"value":"/ * `ASCII_ALPHA_UPPER` - matches a character from A..Z","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11516,"byte_end":11573,"line_start":286,"line_end":286,"column_start":1,"column_end":58}},{"value":"/ * `ASCII_ALPHA` - matches a character from a..z or A..Z","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11574,"byte_end":11633,"line_start":287,"line_end":287,"column_start":1,"column_end":60}},{"value":"/ * `ASCII_ALPHANUMERIC` - matches a character from a..z or A..Z or 0..9","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11634,"byte_end":11708,"line_start":288,"line_end":288,"column_start":1,"column_end":75}},{"value":"/ * `ASCII` - matches a character from \\x00..\\x7f","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11709,"byte_end":11760,"line_start":289,"line_end":289,"column_start":1,"column_end":52}},{"value":"/ * `NEWLINE` - matches either \"\\n\" or \"\\r\\n\" or \"\\r\"","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11761,"byte_end":11816,"line_start":290,"line_end":290,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":12032,"byte_end":12045,"line_start":300,"line_end":300,"column_start":8,"column_end":21},"name":"derive_parser","qualname":"::derive_parser","value":"pub fn derive_parser(TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"proc_macro_derive(Parser, attributes(grammar, grammar_inline))","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/pest_derive-2.1.0/src/lib.rs","byte_start":11959,"byte_end":12024,"line_start":299,"line_end":299,"column_start":1,"column_end":66}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}