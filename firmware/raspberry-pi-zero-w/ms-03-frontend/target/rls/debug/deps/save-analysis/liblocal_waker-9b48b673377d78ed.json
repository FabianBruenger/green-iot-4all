{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2","program":"/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","local_waker","--edition=2018","/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=9b48b673377d78ed","-C","extra-filename=-9b48b673377d78ed","--out-dir","/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","-L","dependency=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/liblocal_waker-9b48b673377d78ed.rmeta"},"prelude":{"crate_id":{"name":"local_waker","disambiguator":[12595994531934422677,0]},"crate_root":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src","external_crates":[{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}}],"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":0,"byte_end":2445,"line_start":1,"line_end":73,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":0,"byte_end":2445,"line_start":1,"line_end":73,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":17},{"krate":0,"index":22}],"decl_id":null,"docs":" A synchronization primitive for thread-local task wakeup.","sig":null,"attributes":[{"value":"/ A synchronization primitive for thread-local task wakeup.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":0,"byte_end":61,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":62,"byte_end":65,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See docs for [`LocalWaker`].","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":66,"byte_end":98,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"no_std","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":100,"byte_end":110,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"deny(rust_2018_idioms, nonstandard_style)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":111,"byte_end":156,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"warn(future_incompatible, missing_docs)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":157,"byte_end":200,"line_start":7,"line_end":7,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1238,"byte_end":1248,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"LocalWaker","qualname":"::LocalWaker","value":"LocalWaker {  }","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" A synchronization primitive for task wakeup.","sig":null,"attributes":[{"value":"/ A synchronization primitive for task wakeup.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":266,"byte_end":314,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":315,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Sometimes the task interested in a given event will change over time. A `LocalWaker` can","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":319,"byte_end":411,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/ coordinate concurrent notifications with the consumer, potentially \"updating\" the underlying","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":412,"byte_end":508,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ task to wake up. This is useful in scenarios where a computation completes in another task and","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":509,"byte_end":607,"line_start":15,"line_end":15,"column_start":1,"column_end":99}},{"value":"/ wants to notify the consumer, but the consumer is in the process of being migrated to a new","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":608,"byte_end":703,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ logical task.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":704,"byte_end":721,"line_start":17,"line_end":17,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":722,"byte_end":725,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Consumers should call [`register`] before checking the result of a computation and producers","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":726,"byte_end":822,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ should call [`wake`] after producing the computation (this differs from the usual `thread::park`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":823,"byte_end":923,"line_start":20,"line_end":20,"column_start":1,"column_end":101}},{"value":"/ pattern). It is also permitted for [`wake`] to be called _before_ [`register`]. This results in","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":924,"byte_end":1023,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ a no-op.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1024,"byte_end":1036,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1037,"byte_end":1040,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A single `LocalWaker` may be reused for any number of calls to [`register`] or [`wake`].","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1041,"byte_end":1133,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1134,"byte_end":1137,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`register`]: LocalWaker::register","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1138,"byte_end":1176,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ [`wake`]: LocalWaker::wake","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1177,"byte_end":1207,"line_start":27,"line_end":27,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1447,"byte_end":1450,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalWaker>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `LocalWaker`.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty `LocalWaker`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1397,"byte_end":1435,"line_start":36,"line_end":36,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1651,"byte_end":1659,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"register","qualname":"<LocalWaker>::register","value":"pub fn register(&Self, &Waker) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Registers the waker to be notified on calls to `wake`.","sig":null,"attributes":[{"value":"/ Registers the waker to be notified on calls to `wake`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1504,"byte_end":1562,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1567,"byte_end":1570,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if waker was registered before.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1575,"byte_end":1625,"line_start":43,"line_end":43,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1630,"byte_end":1639,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1961,"byte_end":1965,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"wake","qualname":"<LocalWaker>::wake","value":"pub fn wake(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Calls `wake` on the last `Waker` passed to `register`.","sig":null,"attributes":[{"value":"/ Calls `wake` on the last `Waker` passed to `register`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1798,"byte_end":1856,"line_start":50,"line_end":50,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1861,"byte_end":1864,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ If `register` has not been called yet, then this does nothing.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1869,"byte_end":1935,"line_start":52,"line_end":52,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1940,"byte_end":1949,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":2244,"byte_end":2248,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"take","qualname":"<LocalWaker>::take","value":"pub fn take(&Self) -> Option<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last `Waker` passed to `register`, so that the user can wake it.","sig":null,"attributes":[{"value":"/ Returns the last `Waker` passed to `register`, so that the user can wake it.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":2065,"byte_end":2145,"line_start":60,"line_end":60,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":2150,"byte_end":2153,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ If a waker has not been registered, this returns `None`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":2158,"byte_end":2218,"line_start":62,"line_end":62,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":2223,"byte_end":2232,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1380,"byte_end":1390,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":2330,"byte_end":2340,"line_start":69,"line_end":69,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":1380,"byte_end":1390,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/local-waker-0.1.2/src/lib.rs","byte_start":2330,"byte_end":2340,"line_start":69,"line_end":69,"column_start":21,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":24},"to":{"krate":1,"index":9352}}]}