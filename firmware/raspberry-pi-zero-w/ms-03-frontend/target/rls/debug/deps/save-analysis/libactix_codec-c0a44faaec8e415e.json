{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0","program":"/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","actix_codec","--edition=2018","/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=c0a44faaec8e415e","-C","extra-filename=-c0a44faaec8e415e","--out-dir","/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","-L","dependency=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps","--extern","bitflags=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libbitflags-67f4ea49cd03cd26.rmeta","--extern","bytes=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libbytes-28c7b0e8681af61c.rmeta","--extern","futures_core=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libfutures_core-c81a252f2728adec.rmeta","--extern","futures_sink=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libfutures_sink-087aaaf5b632c12a.rmeta","--extern","log=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/liblog-8284dd2bf3df905f.rmeta","--extern","pin_project=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libpin_project-ed839c73edc1f925.rmeta","--extern","tokio=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libtokio-23d7438c22a54568.rmeta","--extern","tokio_util=/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libtokio_util-e587a280dcc8e68a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/fabianbrunger/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/fabianbrunger/Documents/Programming/green-iot-4all/firmware/raspberry-pi-zero-w/ms-03-frontend/target/rls/debug/deps/libactix_codec-c0a44faaec8e415e.rmeta"},"prelude":{"crate_id":{"name":"actix_codec","disambiguator":[2195031970180229119,0]},"crate_root":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src","external_crates":[{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/bcodec.rs","num":18,"id":{"name":"bytes","disambiguator":[8461713654336000992,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","num":19,"id":{"name":"futures_core","disambiguator":[10246500710873416559,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","num":20,"id":{"name":"futures_sink","disambiguator":[11987920876039123396,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","num":21,"id":{"name":"pin_project","disambiguator":[16344740467873571876,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","num":22,"id":{"name":"pin_project_internal","disambiguator":[16400694039306321186,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":23,"id":{"name":"tokio","disambiguator":[15358364753468199378,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":24,"id":{"name":"pin_project_lite","disambiguator":[7646238073417921644,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":25,"id":{"name":"mio","disambiguator":[5085869278364210525,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":26,"id":{"name":"net2","disambiguator":[12499943522452134428,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":27,"id":{"name":"libc","disambiguator":[2877697153496922940,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":28,"id":{"name":"cfg_if","disambiguator":[469732712005314849,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":29,"id":{"name":"iovec","disambiguator":[5520876201906445761,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":30,"id":{"name":"slab","disambiguator":[9836226307066101663,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","num":31,"id":{"name":"log","disambiguator":[17209540010984550098,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":32,"id":{"name":"cfg_if","disambiguator":[16095159455043656986,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":33,"id":{"name":"lazy_static","disambiguator":[12282114963264425666,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":34,"id":{"name":"mio_uds","disambiguator":[18103742475129219749,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":35,"id":{"name":"memchr","disambiguator":[14182381211266571593,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":36,"id":{"name":"signal_hook_registry","disambiguator":[3828403546171742268,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","num":37,"id":{"name":"tokio_util","disambiguator":[7428496671546975150,0]}},{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","num":38,"id":{"name":"bitflags","disambiguator":[18374326665816880112,0]}}],"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":0,"byte_end":629,"line_start":1,"line_end":22,"column_start":1,"column_end":47}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":481,"byte_end":491,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":481,"byte_end":491,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":516,"byte_end":522,"line_start":19,"line_end":19,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":524,"byte_end":535,"line_start":19,"line_end":19,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":309},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":559,"byte_end":568,"line_start":21,"line_end":21,"column_start":21,"column_end":30},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":393},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":570,"byte_end":580,"line_start":21,"line_end":21,"column_start":32,"column_end":42},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":37,"index":57},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":611,"byte_end":618,"line_start":22,"line_end":22,"column_start":29,"column_end":36},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":37,"index":74},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":620,"byte_end":627,"line_start":22,"line_end":22,"column_start":38,"column_end":45},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":0,"byte_end":629,"line_start":1,"line_end":22,"column_start":1,"column_end":47},"name":"","qualname":"::","value":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":31},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":0,"byte_end":47,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":48,"byte_end":51,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":52,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":121,"byte_end":196,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as `transports`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":197,"byte_end":247,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":248,"byte_end":251,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: AsyncRead","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":252,"byte_end":280,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/ [`AsyncWrite`]: AsyncWrite","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":281,"byte_end":311,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":312,"byte_end":344,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":345,"byte_end":381,"line_start":10,"line_end":10,"column_start":1,"column_end":37}},{"value":"deny(rust_2018_idioms)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":383,"byte_end":409,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/lib.rs","byte_start":410,"byte_end":432,"line_start":13,"line_end":13,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/bcodec.rs","byte_start":822,"byte_end":832,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::bcodec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bytes codec.","sig":null,"attributes":[{"value":"/ Bytes codec.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/bcodec.rs","byte_start":712,"byte_end":728,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/bcodec.rs","byte_start":729,"byte_end":732,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Reads/Writes chunks of bytes from a stream.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/bcodec.rs","byte_start":733,"byte_end":780,"line_start":8,"line_end":8,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":2356,"byte_end":2362,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"Framed","qualname":"::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":2330,"byte_end":2344,"line_start":32,"line_end":32,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":295},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":2356,"byte_end":2362,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"__Framed","qualname":"::framed::_::__Framed","value":"__Framed {  }","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":2829,"byte_end":2832,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" This function returns a *single* object that is both `Stream` and\n `Sink`; grouping this into a single object is often useful for layering\n things like gzip or TLS, which require both read and write access to the\n underlying object.\n","sig":null,"attributes":[{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":2560,"byte_end":2629,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":2634,"byte_end":2709,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":2714,"byte_end":2790,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":2795,"byte_end":2817,"line_start":50,"line_end":50,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3167,"byte_end":3176,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"codec_ref","qualname":"<Framed<T, U>>::codec_ref","value":"pub fn codec_ref(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3107,"byte_end":3155,"line_start":63,"line_end":63,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3291,"byte_end":3300,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3223,"byte_end":3279,"line_start":68,"line_end":68,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3641,"byte_end":3647,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"io_ref","qualname":"<Framed<T, U>>::io_ref","value":"pub fn io_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3359,"byte_end":3422,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ `Frame`.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3427,"byte_end":3439,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3444,"byte_end":3447,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3452,"byte_end":3527,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3532,"byte_end":3602,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3607,"byte_end":3629,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3954,"byte_end":3960,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"io_mut","qualname":"<Framed<T, U>>::io_mut","value":"pub fn io_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3691,"byte_end":3752,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3757,"byte_end":3760,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3765,"byte_end":3840,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3845,"byte_end":3915,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3920,"byte_end":3942,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4100,"byte_end":4106,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"io_pin","qualname":"<Framed<T, U>>::io_pin","value":"pub fn io_pin(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Pin` of a mutable reference to the underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Returns a `Pin` of a mutable reference to the underlying I/O stream.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4016,"byte_end":4088,"line_start":92,"line_end":92,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4229,"byte_end":4246,"line_start":98,"line_end":98,"column_start":12,"column_end":29},"name":"is_read_buf_empty","qualname":"<Framed<T, U>>::is_read_buf_empty","value":"pub fn is_read_buf_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if read buffer is empty.\n","sig":null,"attributes":[{"value":"/ Check if read buffer is empty.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4183,"byte_end":4217,"line_start":97,"line_end":97,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4355,"byte_end":4373,"line_start":103,"line_end":103,"column_start":12,"column_end":30},"name":"is_write_buf_empty","qualname":"<Framed<T, U>>::is_write_buf_empty","value":"pub fn is_write_buf_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if write buffer is empty.\n","sig":null,"attributes":[{"value":"/ Check if write buffer is empty.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4308,"byte_end":4343,"line_start":102,"line_end":102,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4482,"byte_end":4499,"line_start":108,"line_end":108,"column_start":12,"column_end":29},"name":"is_write_buf_full","qualname":"<Framed<T, U>>::is_write_buf_full","value":"pub fn is_write_buf_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if write buffer is full.\n","sig":null,"attributes":[{"value":"/ Check if write buffer is full.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4436,"byte_end":4470,"line_start":107,"line_end":107,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4710,"byte_end":4724,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"is_write_ready","qualname":"<Framed<T, U>>::is_write_ready","value":"pub fn is_write_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if framed is able to write more data.","sig":null,"attributes":[{"value":"/ Check if framed is able to write more data.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4563,"byte_end":4610,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4615,"byte_end":4618,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ `Framed` object considers ready if there is free space in write buffer.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4623,"byte_end":4698,"line_start":114,"line_end":114,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4863,"byte_end":4876,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"replace_codec","qualname":"<Framed<T, U>>::replace_codec","value":"pub fn replace_codec<U2>(Self, U2) -> Framed<T, U2>","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different codec.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different codec.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":4787,"byte_end":4851,"line_start":119,"line_end":119,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":5179,"byte_end":5190,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"into_map_io","qualname":"<Framed<T, U>>::into_map_io","value":"pub fn into_map_io<F, T2>(Self, F) -> Framed<T2, U> where F: Fn(T) -> T2","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different io.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different io.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":5106,"byte_end":5167,"line_start":130,"line_end":130,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":5547,"byte_end":5561,"line_start":145,"line_end":145,"column_start":12,"column_end":26},"name":"into_map_codec","qualname":"<Framed<T, U>>::into_map_codec","value":"pub fn into_map_codec<F, U2>(Self, F) -> Framed<T, U2> where F: Fn(U) -> U2","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different codec.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different codec.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":5471,"byte_end":5535,"line_start":144,"line_end":144,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":5930,"byte_end":5935,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"write","qualname":"<Framed<T, U>>::write","value":"pub fn write<I>(Pin<&mut Self>, I) -> Result<(), <U as Encoder<I>>::Error>\nwhere T: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Serialize item and Write to the inner buffer\n","sig":null,"attributes":[{"value":"/ Serialize item and Write to the inner buffer","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":5870,"byte_end":5918,"line_start":160,"line_end":160,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":6427,"byte_end":6436,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"next_item","qualname":"<Framed<T, U>>::next_item","value":"pub fn next_item(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<<U as Decoder>::Item, U::Error>>> where T: AsyncRead,\nU: Decoder","parent":null,"children":[],"decl_id":null,"docs":" Try to read underlying I/O stream and decode item.\n","sig":null,"attributes":[{"value":"/ Try to read underlying I/O stream and decode item.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":6361,"byte_end":6415,"line_start":176,"line_end":176,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":8822,"byte_end":8827,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"flush","qualname":"<Framed<T, U>>::flush","value":"pub fn flush<I>(Pin<&mut Self>, &mut Context) -> Poll<Result<(), U::Error>>\nwhere T: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Flush write buffer to underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Flush write buffer to underlying I/O stream.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":8762,"byte_end":8810,"line_start":236,"line_end":236,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":9858,"byte_end":9863,"line_start":273,"line_end":273,"column_start":12,"column_end":17},"name":"close","qualname":"<Framed<T, U>>::close","value":"pub fn close<I>(Pin<&mut Self>, &mut Context) -> Poll<Result<(), U::Error>>\nwhere T: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Flush write buffer and shutdown underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Flush write buffer and shutdown underlying I/O stream.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":9788,"byte_end":9846,"line_start":272,"line_end":272,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11958,"byte_end":11968,"line_start":350,"line_end":350,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" This function returns a *single* object that is both `Stream` and\n `Sink`; grouping this into a single object is often useful for layering\n things like gzip or TLS, which require both read and write access to the\n underlying object.","sig":null,"attributes":[{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11517,"byte_end":11586,"line_start":343,"line_end":343,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11591,"byte_end":11666,"line_start":344,"line_end":344,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11671,"byte_end":11747,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11752,"byte_end":11774,"line_start":346,"line_end":346,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11779,"byte_end":11782,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ These objects take a stream, a read buffer and a write buffer. These","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11787,"byte_end":11859,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/ fields can be obtained from an existing `Framed` with the `into_parts` method.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11864,"byte_end":11946,"line_start":349,"line_end":349,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":12540,"byte_end":12550,"line_start":366,"line_end":366,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":12219,"byte_end":12292,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":12297,"byte_end":12338,"line_start":361,"line_end":361,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":12343,"byte_end":12346,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":12351,"byte_end":12426,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":12431,"byte_end":12501,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":12506,"byte_end":12528,"line_start":365,"line_end":365,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":329},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13016,"byte_end":13027,"line_start":381,"line_end":381,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new `Framed` with a different codec.\n It contains all current buffers and the inner transport.\n","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":12784,"byte_end":12855,"line_start":377,"line_end":377,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new `Framed` with a different codec.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":12856,"byte_end":12926,"line_start":378,"line_end":378,"column_start":1,"column_end":71}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":12927,"byte_end":12987,"line_start":379,"line_end":379,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":332},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13113,"byte_end":13115,"line_start":383,"line_end":383,"column_start":9,"column_end":11},"name":"io","qualname":"::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13040,"byte_end":13104,"line_start":382,"line_end":382,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":333},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13147,"byte_end":13152,"line_start":386,"line_end":386,"column_start":9,"column_end":14},"name":"codec","qualname":"::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13125,"byte_end":13138,"line_start":385,"line_end":385,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":334},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13217,"byte_end":13225,"line_start":389,"line_end":389,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13162,"byte_end":13208,"line_start":388,"line_end":388,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":335},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13312,"byte_end":13321,"line_start":392,"line_end":392,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13242,"byte_end":13303,"line_start":391,"line_end":391,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13442,"byte_end":13445,"line_start":399,"line_end":399,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new(T, U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13390,"byte_end":13430,"line_start":398,"line_end":398,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13737,"byte_end":13750,"line_start":410,"line_end":410,"column_start":12,"column_end":25},"name":"with_read_buf","qualname":"<FramedParts<T, U>>::with_read_buf","value":"pub fn with_read_buf(T, U, BytesMut) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FramedParts` with read buffer\n","sig":null,"attributes":[{"value":"/ Create a new `FramedParts` with read buffer","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13678,"byte_end":13725,"line_start":409,"line_end":409,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/bcodec.rs","byte_start":859,"byte_end":869,"line_start":12,"line_end":12,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/bcodec.rs","byte_start":1088,"byte_end":1098,"line_start":22,"line_end":22,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":2488,"byte_end":2494,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3088,"byte_end":3094,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":5851,"byte_end":5857,"line_start":159,"line_end":159,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":10240,"byte_end":10246,"line_start":288,"line_end":288,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":10492,"byte_end":10498,"line_start":300,"line_end":300,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11225,"byte_end":11231,"line_start":329,"line_end":329,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11498,"byte_end":11504,"line_start":342,"line_end":342,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13366,"byte_end":13377,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/bcodec.rs","byte_start":859,"byte_end":869,"line_start":12,"line_end":12,"column_start":25,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":170},"to":{"krate":37,"index":74}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/bcodec.rs","byte_start":1088,"byte_end":1098,"line_start":22,"line_end":22,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":170},"to":{"krate":37,"index":57}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":2488,"byte_end":2494,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":3088,"byte_end":3094,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":5851,"byte_end":5857,"line_start":159,"line_end":159,"column_start":12,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":10240,"byte_end":10246,"line_start":288,"line_end":288,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":321},"to":{"krate":19,"index":96}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":10492,"byte_end":10498,"line_start":300,"line_end":300,"column_start":27,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":321},"to":{"krate":20,"index":17}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11225,"byte_end":11231,"line_start":329,"line_end":329,"column_start":27,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":11498,"byte_end":11504,"line_start":342,"line_end":342,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/fabianbrunger/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.3.0/src/framed.rs","byte_start":13366,"byte_end":13377,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}}]}