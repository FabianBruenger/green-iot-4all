name: main
on:
  push:
    paths-ignore:
      - 'assets/**'
  # workflow_dispatch: 

jobs:
  # -----------------------------------------------------------------------------------------------
  # Pre step
  # -----------------------------------------------------------------------------------------------
  evaluate:
    name: Evaluate
    runs-on: ubuntu-latest
    outputs:
      ms01_build_flag: ${{ steps.check-changes-in-ms01.outputs.any_modified }}
      ms02_build_flag: ${{ steps.check-changes-in-ms02.outputs.any_modified }}
      version: ${{ steps.version.outputs.VERSION }}

    steps:
      - name: Checkout Project
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Get specific changed files
        id: check-changes-in-ms01
        uses: tj-actions/changed-files@v18.3
        with:
          files: |
            firmware/raspberry-pi-zero-w/ms-01-azure-gateway
      
      - name: Get specific changed files
        id: check-changes-in-ms02
        uses: tj-actions/changed-files@v18.3
        with:
          files: |
            firmware/raspberry-pi-zero-w/ms-02-data-collector
      
      - name: Version
        id: version
        run: | 
          git fetch --prune --unshallow
          echo "::set-output name=VERSION::$( if [[ "${{ env.GITHUB_REF_NAME }}" == "release" || "${{ env.GITHUB_REF }}" == "refs/tags/*" ]]; then git describe; else git describe --tags | awk -F - '{print $1"-prerelease."$2}'; fi )"
          if [ "${{ env.GITHUB_REF_NAME }}" == "release" ]; then git describe; else git describe --tags | awk -F - '{print $1"-prerelease."$2}'; fi 


  # -----------------------------------------------------------------------------------------------
  # Builds
  # -----------------------------------------------------------------------------------------------

  build_ms01:
    name: build azure gateway service 
    needs: evaluate
    runs-on: ubuntu-20.04
    if: needs.evaluate.outputs.ms01_build_flag == 'true' || startsWith(github.event.ref, 'refs/tags/')
    container:
      image: fabianbruenger/greeniot4all:16.04
      credentials:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    steps:
    - name: Checkout Project
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
    
    - name: Rust fix 
      run: |
        rustup default stable
        rustup target add arm-unknown-linux-gnueabi
        echo ${{ needs.evaluate.outputs.version }}

    - name: Build Release
      run: | 
        sed -i -e "s/VERSION_NUMBER/${{ needs.evaluate.outputs.version }}/g" firmware/raspberry-pi-zero-w/ms-01-azure-gateway/Cargo.toml
        cd firmware/raspberry-pi-zero-w/ms-01-azure-gateway
        cargo build --release --target arm-unknown-linux-gnueabi
        mkdir /opt/build
        cp target/arm-unknown-linux-gnueabi/release/ms-01-azure-gateway /opt/build/ms-01-azure-gateway-${{ needs.evaluate.outputs.version }}
        cargo deb --target arm-unknown-linux-gnueabi --output /opt/build/

    - name: Deploy 
      run: curl -u${{ secrets.JFROG_USER }}:${{ secrets.JFROG_PASSWORD }} -XPUT "https://greeniot4all.jfrog.io/artifactory/greeniot4all-debian/pool/ms-01-azure-gateway;deb.distribution=trusty;deb.component=private;deb.architecture=armel" -T /opt/build/ms-01-*.deb

    - name: Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ms01-build-deb
        path: |
          /opt/build

  build_ms02:
    name: build data collector service 
    needs: evaluate
    runs-on: ubuntu-20.04
    if: needs.evaluate.outputs.ms01_build_flag == 'true' || startsWith(github.event.ref, 'refs/tags/') 
    container:
      image: fabianbruenger/greeniot4all:16.04
      credentials:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    steps:
    - name: Checkout Project
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
    
    - name: Rust fix 
      run: |
        rustup default stable
        rustup target add arm-unknown-linux-gnueabi
        echo ${{ needs.evaluate.outputs.version }}

    - name: Build Release
      run: | 
        sed -i -e "s/VERSION_NUMBER/${{ needs.evaluate.outputs.version }}/g" firmware/raspberry-pi-zero-w/ms-02-data-collector/Cargo.toml
        cd firmware/raspberry-pi-zero-w/ms-02-data-collector
        cargo build --release --target arm-unknown-linux-gnueabi
        mkdir /opt/build
        cp target/arm-unknown-linux-gnueabi/release/ms-02-data-collector /opt/build/ms-02-data-collector-${{ needs.evaluate.outputs.version }}
        cargo deb --target arm-unknown-linux-gnueabi --output /opt/build/

    - name: Deploy 
      run: curl -u${{ secrets.JFROG_USER }}:${{ secrets.JFROG_PASSWORD }} -XPUT "https://greeniot4all.jfrog.io/artifactory/greeniot4all-debian/pool/ms-02-data-collector;deb.distribution=trusty;deb.component=private;deb.architecture=armel" -T /opt/build/ms-02-*.deb

    - name: Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ms02-build-deb
        path: |
          /opt/build