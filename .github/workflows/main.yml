name: main
on:
  push:
    paths-ignore:
      - 'docs/**'
  # workflow_dispatch: 



jobs:
  # General evaluation step to set specific build flags. E.g if files are changed in ms01 there must be a new build. Since there should be one pipeline for all projects, this step is required
  # evaluate:
  #   name: Evaluate
  #   runs-on: ubuntu-latest
  #   outputs:
  #     ms01_build_flag: ${{ steps.check-changes-in-ms01.outputs.any_modified }}
  #     ms02_build_flag: ${{ steps.check-changes-in-ms02.outputs.any_modified }}

  #   steps:
  #     - name: Checkout Project
  #       uses: actions/checkout@v2.3.4
  #       with:
  #         fetch-depth: 0

  #     - name: Get specific changed files
  #       id: check-changes-in-ms01
  #       uses: tj-actions/changed-files@v18.3
  #       with:
  #         files: |
  #           firmware/raspberry-pi-zero-w/ms-01-azure-gateway
      
  #     - name: Get specific changed files
  #       id: check-changes-in-ms02
  #       uses: tj-actions/changed-files@v18.3
  #       with:
  #         files: |
  #           firmware/raspberry-pi-zero-w/ms-02-data-collector
      
  # General evaluation step to set specific build flags. E.g if files are changed in ms01 there must be a new build
  build_ms01:
    name: Build MS01 
    # needs: evaluate
    runs-on: ubuntu-20.04
    # if: needs.evaluate.outputs.ms01_build_flag == 'true'
    # container:
    #   image: fabianbruenger/greeniot4all:latest
    #   credentials:
    #     username: ${{ secrets.DOCKER_USER }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    steps:
    - name: Checkout Project
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
    
    # DEBIAN_FRONTEND=noninteractive
    # pkg-config \
    - name: Install 
      run: | 
        sudo apt-get -qq update
        sudo apt-get install -y -q git gcc-arm-linux-gnueabi gcc-arm-linux-gnueabihf
          # g++-arm-linux-gnueabi \
          # g++-arm-linux-gnueabihf \
        #   make \ 
        #   git-core \ 
        #   ncurses-dev \
        #   libc6-armel-cross \
        #   libc6-dev-armel-cross \
        #   binutils-arm-linux-gnueabi \
        #   libncurses5-dev \
        #   libc6-armhf-cross \
        #   libc6-dev-armhf-cross \
        #   libssl-dev \
        #   liblzma-dev \
        #   libzmq3-dev \
        #   libczmq-dev \
        #   bash-completion

        # git clone https://github.com/raspberrypi/tools.git /opt/pi-toolchains
        # wget https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0.tar.gz
        # tar -zxvf cmake-3.20.0.tar.gz
        # cd cmake-3.20.0 && ./bootstrap
        # cd cmake-3.20.0 && make
        # cd cmake-3.20.0 && make install
        # dpkg --add-architecture armel
    
    - name: Setup Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
        components: clippy
    
    - name: Setup Cargo deb
      run: cargo install cargo-deb

    - name: Build 
      run: | 
        sudo cp firmware/raspberry-pi-zero-w/utils/ubuntu/config /root/.cargo 
        rustup target add arm-unknown-linux-gnueabi
        cd firmware/raspberry-pi-zero-w/ms-01-azure-gateway
        cargo build --target=arm-unknown-linux-gnueabi --target-dir /opt/build/arm-unknown-linux-gnueabi/ms-01-azure-gateway
    
    - name: Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ms01-build-deb
        path: |
          /opt/build/arm-unknown-linux-gnueabi/ms-01-azure-gateway